diff --git a/node_modules/react-native-gesture-handler/android/.project b/node_modules/react-native-gesture-handler/android/.project
new file mode 100644
index 0000000..16ed822
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/android/.project
@@ -0,0 +1,28 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<projectDescription>
+	<name>react-native-gesture-handler</name>
+	<comment>Project react-native-gesture-handler created by Buildship.</comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>org.eclipse.buildship.core.gradleprojectbuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>org.eclipse.buildship.core.gradleprojectnature</nature>
+	</natures>
+	<filteredResources>
+		<filter>
+			<id>1756268495892</id>
+			<name></name>
+			<type>30</type>
+			<matcher>
+				<id>org.eclipse.core.resources.regexFilterMatcher</id>
+				<arguments>node_modules|\.git|__CREATED_BY_JAVA_LANGUAGE_SERVER__</arguments>
+			</matcher>
+		</filter>
+	</filteredResources>
+</projectDescription>
diff --git a/node_modules/react-native-gesture-handler/android/bin/build.gradle b/node_modules/react-native-gesture-handler/android/bin/build.gradle
new file mode 100644
index 0000000..ac149a0
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/android/bin/build.gradle
@@ -0,0 +1,252 @@
+import groovy.json.JsonSlurper
+import com.android.build.gradle.tasks.ExternalNativeBuildJsonTask
+
+buildscript {
+    def kotlin_version = rootProject.ext.has('kotlinVersion') ? rootProject.ext.get('kotlinVersion') : project.properties['RNGH_kotlinVersion']
+
+    repositories {
+        mavenCentral()
+        google()
+    }
+
+    dependencies {
+        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version")
+        classpath("com.android.tools.build:gradle:8.10.1")
+        classpath("com.diffplug.spotless:spotless-plugin-gradle:7.0.4")
+    }
+}
+
+def isNewArchitectureEnabled() {
+    // To opt-in for the New Architecture, you can either:
+    // - Set `newArchEnabled` to true inside the `gradle.properties` file
+    // - Invoke gradle with `-newArchEnabled=true`
+    // - Set an environment variable `ORG_GRADLE_PROJECT_newArchEnabled=true`
+    return project.hasProperty("newArchEnabled") && project.newArchEnabled == "true"
+}
+
+def safeExtGet(prop, fallback) {
+    rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
+}
+
+def isGHExampleApp() {
+    return safeExtGet("isGHExampleApp", false)
+}
+
+def resolveReactNativeDirectory() {
+    def reactNativeLocation = safeExtGet("REACT_NATIVE_NODE_MODULES_DIR", null)
+    if (reactNativeLocation != null) {
+        return file(reactNativeLocation)
+    }
+
+    // Fallback to node resolver for custom directory structures like monorepos.
+    def reactNativePackage = file(
+        providers.exec {
+            workingDir(rootDir)
+            commandLine("node", "--print", "require.resolve('react-native/package.json')")
+        }.standardOutput.asText.get().trim()
+    )
+
+    if (reactNativePackage.exists()) {
+        return reactNativePackage.parentFile
+    }
+
+    throw new Exception(
+            "[react-native-gesture-handler] Unable to resolve react-native location in " +
+                    "node_modules. You should add project extension property (in app/build.gradle) " +
+                    "`REACT_NATIVE_NODE_MODULES_DIR` with path to react-native."
+    )
+}
+
+if (isNewArchitectureEnabled()) {
+    apply plugin: 'com.facebook.react'
+}
+
+apply plugin: 'com.android.library'
+apply plugin: 'kotlin-android'
+
+if (project == rootProject) {
+    apply from: "spotless.gradle"
+}
+
+def getExternalLibVersion(project){
+    def inputFile = new File(project.projectDir, "../package.json")
+    def json = new JsonSlurper().parseText(inputFile.text)
+    def libVerision = json.version as String
+    def (major, minor, patch) = libVerision.tokenize('.')
+
+    // Handle cases where version is a pre-release one, e.g. "2.3.0-alpha.1"
+    def patchVersion = patch.find(/(\d+)/) ? patch.find(/(\d+)/) : "0"
+
+    return [Integer.parseInt(major), Integer.parseInt(minor), Integer.parseInt(patchVersion)]
+}
+
+// Check whether Reanimated 2.3 or higher is installed alongside Gesture Handler
+def shouldUseCommonInterfaceFromReanimated() {
+    def reanimated = rootProject.subprojects.find { it.name == 'react-native-reanimated' }
+
+    if (reanimated == null) {
+        return false
+    }
+
+    def (major, minor, patch) = getExternalLibVersion(reanimated)
+    
+    return (major == 2 && minor >= 3) || major >= 3
+}
+
+def shouldUseCommonInterfaceFromRNSVG() {
+    // common interface compatible with react-native-svg >= 15.11.2
+    def rnsvg = rootProject.subprojects.find { it.name == 'react-native-svg' }
+
+    if (rnsvg == null) {
+        return false
+    }
+
+    def (major, minor, patch) = getExternalLibVersion(rnsvg)
+
+
+    return (major == 15 && minor == 11 && patch >= 2) ||
+            (major == 15 && minor > 11) ||
+            major > 15
+}
+
+def reactNativeArchitectures() {
+    def value = project.getProperties().get("reactNativeArchitectures")
+    return value ? value.split(",") : ["armeabi-v7a", "x86", "x86_64", "arm64-v8a"]
+}
+
+def REACT_NATIVE_DIR = resolveReactNativeDirectory()
+
+def reactProperties = new Properties()
+file("$REACT_NATIVE_DIR/ReactAndroid/gradle.properties").withInputStream { reactProperties.load(it) }
+
+def REACT_NATIVE_VERSION = reactProperties.getProperty("VERSION_NAME")
+def REACT_NATIVE_MINOR_VERSION = REACT_NATIVE_VERSION.split("\\.")[1].toInteger()
+
+repositories {
+    mavenCentral()
+}
+
+android {
+    compileSdkVersion safeExtGet("compileSdkVersion", 33)
+
+    namespace = "com.swmansion.gesturehandler"
+    buildFeatures {
+        buildConfig = true
+        prefab = true
+    }
+
+    // Used to override the NDK path/version on internal CI or by allowing
+    // users to customize the NDK path/version from their root project (e.g. for M1 support)
+    if (rootProject.hasProperty("ndkPath")) {
+        ndkPath rootProject.ext.ndkPath
+    }
+    if (rootProject.hasProperty("ndkVersion")) {
+        ndkVersion rootProject.ext.ndkVersion
+    }
+
+    defaultConfig {
+        minSdkVersion safeExtGet('minSdkVersion', 24)
+        targetSdkVersion safeExtGet('targetSdkVersion', 33)
+        buildConfigField "boolean", "IS_NEW_ARCHITECTURE_ENABLED", isNewArchitectureEnabled().toString()
+        buildConfigField "int", "REACT_NATIVE_MINOR_VERSION", REACT_NATIVE_MINOR_VERSION.toString()
+
+        if (isNewArchitectureEnabled()) {
+            var appProject = rootProject.allprojects.find { it.plugins.hasPlugin('com.android.application') }
+            externalNativeBuild {
+                cmake {
+                    cppFlags "-O2", "-frtti", "-fexceptions", "-Wall", "-Werror", "-std=c++20", "-DANDROID"
+                    arguments "-DREACT_NATIVE_DIR=${REACT_NATIVE_DIR}",
+                            "-DREACT_NATIVE_MINOR_VERSION=${REACT_NATIVE_MINOR_VERSION}",
+                            "-DANDROID_STL=c++_shared",
+                            "-DANDROID_SUPPORT_FLEXIBLE_PAGE_SIZES=ON"
+                    abiFilters(*reactNativeArchitectures())
+                }
+            }
+        }
+    }
+
+    compileOptions {
+        sourceCompatibility JavaVersion.VERSION_1_8
+        targetCompatibility JavaVersion.VERSION_1_8
+    }
+
+    if (isNewArchitectureEnabled()) {
+        externalNativeBuild {
+            cmake {
+                path "src/main/jni/CMakeLists.txt"
+            }
+        }
+    }
+
+    packagingOptions {
+        // For some reason gradle only complains about the duplicated version of libreact_render libraries
+        // while there are more libraries copied in intermediates folder of the lib build directory, we exclude
+        // only the ones that make the build fail (ideally we should only include libgesturehandler but we
+        // are only allowed to specify exclude patterns)
+        exclude "**/libreact_render*.so"
+        exclude "**/libreactnative.so"
+        exclude "**/libjsi.so"
+        exclude "**/libc++_shared.so"
+    }
+
+    sourceSets.main {
+        java {
+            if (shouldUseCommonInterfaceFromReanimated()) {
+                srcDirs += 'reanimated/src/main/java'
+            } else {
+                srcDirs += 'noreanimated/src/main/java'
+            }
+
+            if (shouldUseCommonInterfaceFromRNSVG()) {
+                srcDirs += 'svg/src/main/java'
+            } else {
+                srcDirs += 'nosvg/src/main/java'
+            }
+
+            if (isNewArchitectureEnabled()) {
+                srcDirs += 'fabric/src/main/java'
+            } else {
+                // 'paper/src/main/java' includes files from codegen so the library can compile with
+                // codegen turned off
+                srcDirs += 'paper/src/main/java'
+            }
+        }
+    }
+
+    if (isGHExampleApp()) {
+        tasks.withType(ExternalNativeBuildJsonTask) {
+            compileTask ->
+                compileTask.doLast {
+                    def rootDir = new File("${project.projectDir}/..")
+                    def generated = new File("${compileTask.abi.getCxxBuildFolder()}/compile_commands.json")
+                    def output = new File("${rootDir}/compile_commands.json")
+                    output.text = generated.text
+
+                    println("Generated clangd metadata.")
+                }
+        }
+    }
+}
+
+def kotlin_version = safeExtGet('kotlinVersion', project.properties['RNGH_kotlinVersion'])
+
+dependencies {
+    implementation 'com.facebook.react:react-native:+' // from node_modules
+
+
+    if (shouldUseCommonInterfaceFromReanimated()) {
+        // Include Reanimated as dependency to load the common interface
+        implementation(rootProject.subprojects.find { it.name == 'react-native-reanimated' }) {
+            // resolves "Duplicate class com.facebook.jni.CppException"
+            exclude group: 'com.facebook.fbjni'
+        }
+    }
+
+    if (shouldUseCommonInterfaceFromRNSVG()) {
+        implementation rootProject.subprojects.find { it.name == 'react-native-svg' }
+    }
+
+    implementation 'androidx.appcompat:appcompat:1.7.0'
+    implementation "androidx.core:core-ktx:1.16.0"
+    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
+}
diff --git a/node_modules/react-native-gesture-handler/android/bin/fabric/src/main/java/com/swmansion/gesturehandler/RNGestureHandlerComponentsRegistry.class b/node_modules/react-native-gesture-handler/android/bin/fabric/src/main/java/com/swmansion/gesturehandler/RNGestureHandlerComponentsRegistry.class
new file mode 100644
index 0000000..2359270
Binary files /dev/null and b/node_modules/react-native-gesture-handler/android/bin/fabric/src/main/java/com/swmansion/gesturehandler/RNGestureHandlerComponentsRegistry.class differ
diff --git a/node_modules/react-native-gesture-handler/android/bin/paper/src/main/java/com/facebook/react/viewmanagers/RNGestureHandlerButtonManagerDelegate.class b/node_modules/react-native-gesture-handler/android/bin/paper/src/main/java/com/facebook/react/viewmanagers/RNGestureHandlerButtonManagerDelegate.class
new file mode 100644
index 0000000..29a343c
Binary files /dev/null and b/node_modules/react-native-gesture-handler/android/bin/paper/src/main/java/com/facebook/react/viewmanagers/RNGestureHandlerButtonManagerDelegate.class differ
diff --git a/node_modules/react-native-gesture-handler/android/bin/paper/src/main/java/com/facebook/react/viewmanagers/RNGestureHandlerButtonManagerInterface.class b/node_modules/react-native-gesture-handler/android/bin/paper/src/main/java/com/facebook/react/viewmanagers/RNGestureHandlerButtonManagerInterface.class
new file mode 100644
index 0000000..fc4e41f
Binary files /dev/null and b/node_modules/react-native-gesture-handler/android/bin/paper/src/main/java/com/facebook/react/viewmanagers/RNGestureHandlerButtonManagerInterface.class differ
diff --git a/node_modules/react-native-gesture-handler/android/bin/paper/src/main/java/com/facebook/react/viewmanagers/RNGestureHandlerRootViewManagerDelegate.class b/node_modules/react-native-gesture-handler/android/bin/paper/src/main/java/com/facebook/react/viewmanagers/RNGestureHandlerRootViewManagerDelegate.class
new file mode 100644
index 0000000..d262eb0
Binary files /dev/null and b/node_modules/react-native-gesture-handler/android/bin/paper/src/main/java/com/facebook/react/viewmanagers/RNGestureHandlerRootViewManagerDelegate.class differ
diff --git a/node_modules/react-native-gesture-handler/android/bin/paper/src/main/java/com/facebook/react/viewmanagers/RNGestureHandlerRootViewManagerInterface.class b/node_modules/react-native-gesture-handler/android/bin/paper/src/main/java/com/facebook/react/viewmanagers/RNGestureHandlerRootViewManagerInterface.class
new file mode 100644
index 0000000..30f593c
Binary files /dev/null and b/node_modules/react-native-gesture-handler/android/bin/paper/src/main/java/com/facebook/react/viewmanagers/RNGestureHandlerRootViewManagerInterface.class differ
diff --git a/node_modules/react-native-gesture-handler/android/bin/paper/src/main/java/com/swmansion/gesturehandler/NativeRNGestureHandlerModuleSpec.class b/node_modules/react-native-gesture-handler/android/bin/paper/src/main/java/com/swmansion/gesturehandler/NativeRNGestureHandlerModuleSpec.class
new file mode 100644
index 0000000..21079b1
Binary files /dev/null and b/node_modules/react-native-gesture-handler/android/bin/paper/src/main/java/com/swmansion/gesturehandler/NativeRNGestureHandlerModuleSpec.class differ
diff --git a/node_modules/react-native-gesture-handler/android/bin/src/main/java/com/swmansion/gesturehandler/core/ScaleGestureDetector$OnScaleGestureListener.class b/node_modules/react-native-gesture-handler/android/bin/src/main/java/com/swmansion/gesturehandler/core/ScaleGestureDetector$OnScaleGestureListener.class
new file mode 100644
index 0000000..6b418fb
Binary files /dev/null and b/node_modules/react-native-gesture-handler/android/bin/src/main/java/com/swmansion/gesturehandler/core/ScaleGestureDetector$OnScaleGestureListener.class differ
diff --git a/node_modules/react-native-gesture-handler/android/bin/src/main/java/com/swmansion/gesturehandler/core/ScaleGestureDetector$SimpleOnScaleGestureListener.class b/node_modules/react-native-gesture-handler/android/bin/src/main/java/com/swmansion/gesturehandler/core/ScaleGestureDetector$SimpleOnScaleGestureListener.class
new file mode 100644
index 0000000..f2f4465
Binary files /dev/null and b/node_modules/react-native-gesture-handler/android/bin/src/main/java/com/swmansion/gesturehandler/core/ScaleGestureDetector$SimpleOnScaleGestureListener.class differ
diff --git a/node_modules/react-native-gesture-handler/android/bin/src/main/java/com/swmansion/gesturehandler/core/ScaleGestureDetector.class b/node_modules/react-native-gesture-handler/android/bin/src/main/java/com/swmansion/gesturehandler/core/ScaleGestureDetector.class
new file mode 100644
index 0000000..7959adc
Binary files /dev/null and b/node_modules/react-native-gesture-handler/android/bin/src/main/java/com/swmansion/gesturehandler/core/ScaleGestureDetector.class differ
diff --git a/node_modules/react-native-gesture-handler/android/bin/src/main/jni/cpp-adapter.cpp b/node_modules/react-native-gesture-handler/android/bin/src/main/jni/cpp-adapter.cpp
new file mode 100644
index 0000000..7b5cbe4
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/android/bin/src/main/jni/cpp-adapter.cpp
@@ -0,0 +1,53 @@
+#include <jni.h>
+#include <jsi/jsi.h>
+
+#include <react/renderer/uimanager/primitives.h>
+
+using namespace facebook;
+using namespace react;
+
+void decorateRuntime(jsi::Runtime &runtime) {
+    auto isViewFlatteningDisabled = jsi::Function::createFromHostFunction(
+            runtime,
+            jsi::PropNameID::forAscii(runtime, "isViewFlatteningDisabled"),
+            1,
+            [](jsi::Runtime &runtime,
+               const jsi::Value &thisValue,
+               const jsi::Value *arguments,
+               size_t count) -> jsi::Value {
+                if (!arguments[0].isObject()) {
+                    return jsi::Value::null();
+                }
+
+#if REACT_NATIVE_MINOR_VERSION >= 81
+                auto shadowNode = Bridging<std::shared_ptr<const ShadowNode>>::fromJs(
+                        runtime, arguments[0]);
+#else
+                auto shadowNode = shadowNodeFromValue(runtime, arguments[0]);
+#endif
+
+                bool isViewFlatteningDisabled = shadowNode->getTraits().check(
+                        ShadowNodeTraits::FormsStackingContext);
+
+                // This is done using component names instead of type checking because
+                // of duplicate symbols for RN types, which prevent RTTI from working.
+                const char *componentName = shadowNode->getComponentName();
+                bool isTextComponent = strcmp(componentName, "Paragraph") == 0 ||
+                                       strcmp(componentName, "Text") == 0;
+
+                return jsi::Value(isViewFlatteningDisabled || isTextComponent);
+            });
+    runtime.global().setProperty(
+            runtime, "isViewFlatteningDisabled", std::move(isViewFlatteningDisabled));
+}
+
+extern "C" JNIEXPORT void JNICALL
+Java_com_swmansion_gesturehandler_react_RNGestureHandlerModule_decorateRuntime(
+        JNIEnv *env,
+        jobject clazz,
+        jlong jsiPtr) {
+    jsi::Runtime *runtime = reinterpret_cast<jsi::Runtime *>(jsiPtr);
+    if (runtime) {
+        decorateRuntime(*runtime);
+    }
+}
diff --git a/node_modules/react-native-gesture-handler/android/paper77/src/main/java/com/facebook/react/viewmanagers/RNGestureHandlerButtonManagerDelegate.java b/node_modules/react-native-gesture-handler/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNGestureHandlerButtonManagerDelegate.java
similarity index 100%
rename from node_modules/react-native-gesture-handler/android/paper77/src/main/java/com/facebook/react/viewmanagers/RNGestureHandlerButtonManagerDelegate.java
rename to node_modules/react-native-gesture-handler/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNGestureHandlerButtonManagerDelegate.java
diff --git a/node_modules/react-native-gesture-handler/android/paper77/src/main/java/com/facebook/react/viewmanagers/RNGestureHandlerButtonManagerInterface.java b/node_modules/react-native-gesture-handler/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNGestureHandlerButtonManagerInterface.java
similarity index 88%
rename from node_modules/react-native-gesture-handler/android/paper77/src/main/java/com/facebook/react/viewmanagers/RNGestureHandlerButtonManagerInterface.java
rename to node_modules/react-native-gesture-handler/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNGestureHandlerButtonManagerInterface.java
index 8798d2c..975704f 100644
--- a/node_modules/react-native-gesture-handler/android/paper77/src/main/java/com/facebook/react/viewmanagers/RNGestureHandlerButtonManagerInterface.java
+++ b/node_modules/react-native-gesture-handler/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNGestureHandlerButtonManagerInterface.java
@@ -11,8 +11,9 @@ package com.facebook.react.viewmanagers;
 
 import android.view.View;
 import androidx.annotation.Nullable;
+import com.facebook.react.uimanager.ViewManagerWithGeneratedInterface;
 
-public interface RNGestureHandlerButtonManagerInterface<T extends View> {
+public interface RNGestureHandlerButtonManagerInterface<T extends View> extends ViewManagerWithGeneratedInterface {
   void setExclusive(T view, boolean value);
   void setForeground(T view, boolean value);
   void setBorderless(T view, boolean value);
diff --git a/node_modules/react-native-gesture-handler/android/paper77/src/main/java/com/facebook/react/viewmanagers/RNGestureHandlerRootViewManagerDelegate.java b/node_modules/react-native-gesture-handler/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNGestureHandlerRootViewManagerDelegate.java
similarity index 100%
rename from node_modules/react-native-gesture-handler/android/paper77/src/main/java/com/facebook/react/viewmanagers/RNGestureHandlerRootViewManagerDelegate.java
rename to node_modules/react-native-gesture-handler/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNGestureHandlerRootViewManagerDelegate.java
diff --git a/node_modules/react-native-gesture-handler/android/paper77/src/main/java/com/facebook/react/viewmanagers/RNGestureHandlerRootViewManagerInterface.java b/node_modules/react-native-gesture-handler/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNGestureHandlerRootViewManagerInterface.java
similarity index 77%
rename from node_modules/react-native-gesture-handler/android/paper77/src/main/java/com/facebook/react/viewmanagers/RNGestureHandlerRootViewManagerInterface.java
rename to node_modules/react-native-gesture-handler/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNGestureHandlerRootViewManagerInterface.java
index d82d5a0..c94080e 100644
--- a/node_modules/react-native-gesture-handler/android/paper77/src/main/java/com/facebook/react/viewmanagers/RNGestureHandlerRootViewManagerInterface.java
+++ b/node_modules/react-native-gesture-handler/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNGestureHandlerRootViewManagerInterface.java
@@ -10,7 +10,8 @@
 package com.facebook.react.viewmanagers;
 
 import android.view.View;
+import com.facebook.react.uimanager.ViewManagerWithGeneratedInterface;
 
-public interface RNGestureHandlerRootViewManagerInterface<T extends View> {
+public interface RNGestureHandlerRootViewManagerInterface<T extends View> extends ViewManagerWithGeneratedInterface {
   // No props
 }
diff --git a/node_modules/react-native-gesture-handler/android/paper77/src/main/java/com/swmansion/gesturehandler/NativeRNGestureHandlerModuleSpec.java b/node_modules/react-native-gesture-handler/android/build/generated/source/codegen/java/com/swmansion/gesturehandler/NativeRNGestureHandlerModuleSpec.java
similarity index 93%
rename from node_modules/react-native-gesture-handler/android/paper77/src/main/java/com/swmansion/gesturehandler/NativeRNGestureHandlerModuleSpec.java
rename to node_modules/react-native-gesture-handler/android/build/generated/source/codegen/java/com/swmansion/gesturehandler/NativeRNGestureHandlerModuleSpec.java
index 5c12b84..e789525 100644
--- a/node_modules/react-native-gesture-handler/android/paper77/src/main/java/com/swmansion/gesturehandler/NativeRNGestureHandlerModuleSpec.java
+++ b/node_modules/react-native-gesture-handler/android/build/generated/source/codegen/java/com/swmansion/gesturehandler/NativeRNGestureHandlerModuleSpec.java
@@ -16,12 +16,11 @@ import com.facebook.proguard.annotations.DoNotStrip;
 import com.facebook.react.bridge.ReactApplicationContext;
 import com.facebook.react.bridge.ReactContextBaseJavaModule;
 import com.facebook.react.bridge.ReactMethod;
-import com.facebook.react.bridge.ReactModuleWithSpec;
 import com.facebook.react.bridge.ReadableMap;
 import com.facebook.react.turbomodule.core.interfaces.TurboModule;
 import javax.annotation.Nonnull;
 
-public abstract class NativeRNGestureHandlerModuleSpec extends ReactContextBaseJavaModule implements ReactModuleWithSpec, TurboModule {
+public abstract class NativeRNGestureHandlerModuleSpec extends ReactContextBaseJavaModule implements TurboModule {
   public static final String NAME = "RNGestureHandlerModule";
 
   public NativeRNGestureHandlerModuleSpec(ReactApplicationContext reactContext) {
diff --git a/node_modules/react-native-gesture-handler/android/build/generated/source/codegen/jni/CMakeLists.txt b/node_modules/react-native-gesture-handler/android/build/generated/source/codegen/jni/CMakeLists.txt
new file mode 100644
index 0000000..2e291c1
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/android/build/generated/source/codegen/jni/CMakeLists.txt
@@ -0,0 +1,28 @@
+# Copyright (c) Meta Platforms, Inc. and affiliates.
+#
+# This source code is licensed under the MIT license found in the
+# LICENSE file in the root directory of this source tree.
+
+cmake_minimum_required(VERSION 3.13)
+set(CMAKE_VERBOSE_MAKEFILE on)
+
+file(GLOB react_codegen_SRCS CONFIGURE_DEPENDS *.cpp react/renderer/components/rngesturehandler_codegen/*.cpp)
+
+add_library(
+  react_codegen_rngesturehandler_codegen
+  OBJECT
+  ${react_codegen_SRCS}
+)
+
+target_include_directories(react_codegen_rngesturehandler_codegen PUBLIC . react/renderer/components/rngesturehandler_codegen)
+
+target_link_libraries(
+  react_codegen_rngesturehandler_codegen
+  fbjni
+  jsi
+  # We need to link different libraries based on whether we are building rncore or not, that's necessary
+  # because we want to break a circular dependency between react_codegen_rncore and reactnative
+  reactnative
+)
+
+target_compile_reactnative_options(react_codegen_rngesturehandler_codegen PRIVATE)
diff --git a/node_modules/react-native-gesture-handler/android/build/generated/source/codegen/jni/react/renderer/components/rngesturehandler_codegen/ComponentDescriptors.cpp b/node_modules/react-native-gesture-handler/android/build/generated/source/codegen/jni/react/renderer/components/rngesturehandler_codegen/ComponentDescriptors.cpp
new file mode 100644
index 0000000..7c4ad29
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/android/build/generated/source/codegen/jni/react/renderer/components/rngesturehandler_codegen/ComponentDescriptors.cpp
@@ -0,0 +1,23 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateComponentDescriptorCpp.js
+ */
+
+#include <react/renderer/components/rngesturehandler_codegen/ComponentDescriptors.h>
+#include <react/renderer/core/ConcreteComponentDescriptor.h>
+#include <react/renderer/componentregistry/ComponentDescriptorProviderRegistry.h>
+
+namespace facebook::react {
+
+void rngesturehandler_codegen_registerComponentDescriptorsFromCodegen(
+  std::shared_ptr<const ComponentDescriptorProviderRegistry> registry) {
+registry->add(concreteComponentDescriptorProvider<RNGestureHandlerButtonComponentDescriptor>());
+registry->add(concreteComponentDescriptorProvider<RNGestureHandlerRootViewComponentDescriptor>());
+}
+
+} // namespace facebook::react
diff --git a/node_modules/react-native-gesture-handler/android/build/generated/source/codegen/jni/react/renderer/components/rngesturehandler_codegen/ComponentDescriptors.h b/node_modules/react-native-gesture-handler/android/build/generated/source/codegen/jni/react/renderer/components/rngesturehandler_codegen/ComponentDescriptors.h
new file mode 100644
index 0000000..d52c8b3
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/android/build/generated/source/codegen/jni/react/renderer/components/rngesturehandler_codegen/ComponentDescriptors.h
@@ -0,0 +1,25 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateComponentDescriptorH.js
+ */
+
+#pragma once
+
+#include <react/renderer/components/rngesturehandler_codegen/ShadowNodes.h>
+#include <react/renderer/core/ConcreteComponentDescriptor.h>
+#include <react/renderer/componentregistry/ComponentDescriptorProviderRegistry.h>
+
+namespace facebook::react {
+
+using RNGestureHandlerButtonComponentDescriptor = ConcreteComponentDescriptor<RNGestureHandlerButtonShadowNode>;
+using RNGestureHandlerRootViewComponentDescriptor = ConcreteComponentDescriptor<RNGestureHandlerRootViewShadowNode>;
+
+void rngesturehandler_codegen_registerComponentDescriptorsFromCodegen(
+  std::shared_ptr<const ComponentDescriptorProviderRegistry> registry);
+
+} // namespace facebook::react
diff --git a/node_modules/react-native-gesture-handler/android/build/generated/source/codegen/jni/react/renderer/components/rngesturehandler_codegen/EventEmitters.cpp b/node_modules/react-native-gesture-handler/android/build/generated/source/codegen/jni/react/renderer/components/rngesturehandler_codegen/EventEmitters.cpp
new file mode 100644
index 0000000..f6088d4
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/android/build/generated/source/codegen/jni/react/renderer/components/rngesturehandler_codegen/EventEmitters.cpp
@@ -0,0 +1,17 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateEventEmitterCpp.js
+ */
+
+#include <react/renderer/components/rngesturehandler_codegen/EventEmitters.h>
+
+
+namespace facebook::react {
+
+
+} // namespace facebook::react
diff --git a/node_modules/react-native-gesture-handler/android/build/generated/source/codegen/jni/react/renderer/components/rngesturehandler_codegen/EventEmitters.h b/node_modules/react-native-gesture-handler/android/build/generated/source/codegen/jni/react/renderer/components/rngesturehandler_codegen/EventEmitters.h
new file mode 100644
index 0000000..38a62d7
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/android/build/generated/source/codegen/jni/react/renderer/components/rngesturehandler_codegen/EventEmitters.h
@@ -0,0 +1,30 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateEventEmitterH.js
+ */
+#pragma once
+
+#include <react/renderer/components/view/ViewEventEmitter.h>
+
+
+namespace facebook::react {
+class RNGestureHandlerButtonEventEmitter : public ViewEventEmitter {
+ public:
+  using ViewEventEmitter::ViewEventEmitter;
+
+  
+  
+};
+class RNGestureHandlerRootViewEventEmitter : public ViewEventEmitter {
+ public:
+  using ViewEventEmitter::ViewEventEmitter;
+
+  
+  
+};
+} // namespace facebook::react
diff --git a/node_modules/react-native-gesture-handler/android/build/generated/source/codegen/jni/react/renderer/components/rngesturehandler_codegen/Props.cpp b/node_modules/react-native-gesture-handler/android/build/generated/source/codegen/jni/react/renderer/components/rngesturehandler_codegen/Props.cpp
new file mode 100644
index 0000000..73f7a83
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/android/build/generated/source/codegen/jni/react/renderer/components/rngesturehandler_codegen/Props.cpp
@@ -0,0 +1,118 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GeneratePropsCpp.js
+ */
+
+#include <react/renderer/components/rngesturehandler_codegen/Props.h>
+#include <react/renderer/core/PropsParserContext.h>
+#include <react/renderer/core/propsConversions.h>
+
+namespace facebook::react {
+
+RNGestureHandlerButtonProps::RNGestureHandlerButtonProps(
+    const PropsParserContext &context,
+    const RNGestureHandlerButtonProps &sourceProps,
+    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),
+
+    exclusive(convertRawProp(context, rawProps, "exclusive", sourceProps.exclusive, {true})),
+    foreground(convertRawProp(context, rawProps, "foreground", sourceProps.foreground, {false})),
+    borderless(convertRawProp(context, rawProps, "borderless", sourceProps.borderless, {false})),
+    enabled(convertRawProp(context, rawProps, "enabled", sourceProps.enabled, {true})),
+    rippleColor(convertRawProp(context, rawProps, "rippleColor", sourceProps.rippleColor, {})),
+    rippleRadius(convertRawProp(context, rawProps, "rippleRadius", sourceProps.rippleRadius, {0})),
+    touchSoundDisabled(convertRawProp(context, rawProps, "touchSoundDisabled", sourceProps.touchSoundDisabled, {false})),
+    borderWidth(convertRawProp(context, rawProps, "borderWidth", sourceProps.borderWidth, {0.0})),
+    borderColor(convertRawProp(context, rawProps, "borderColor", sourceProps.borderColor, {})),
+    borderStyle(convertRawProp(context, rawProps, "borderStyle", sourceProps.borderStyle, {"solid"})) {}
+    
+#ifdef RN_SERIALIZABLE_STATE
+ComponentName RNGestureHandlerButtonProps::getDiffPropsImplementationTarget() const {
+  return "RNGestureHandlerButton";
+}
+
+folly::dynamic RNGestureHandlerButtonProps::getDiffProps(
+    const Props* prevProps) const {
+  static const auto defaultProps = RNGestureHandlerButtonProps();
+  const RNGestureHandlerButtonProps* oldProps = prevProps == nullptr
+      ? &defaultProps
+      : static_cast<const RNGestureHandlerButtonProps*>(prevProps);
+  if (this == oldProps) {
+    return folly::dynamic::object();
+  }
+  folly::dynamic result = HostPlatformViewProps::getDiffProps(prevProps);
+  
+  if (exclusive != oldProps->exclusive) {
+    result["exclusive"] = exclusive;
+  }
+    
+  if (foreground != oldProps->foreground) {
+    result["foreground"] = foreground;
+  }
+    
+  if (borderless != oldProps->borderless) {
+    result["borderless"] = borderless;
+  }
+    
+  if (enabled != oldProps->enabled) {
+    result["enabled"] = enabled;
+  }
+    
+  if (rippleColor != oldProps->rippleColor) {
+    result["rippleColor"] = *rippleColor;
+  }
+    
+  if (rippleRadius != oldProps->rippleRadius) {
+    result["rippleRadius"] = rippleRadius;
+  }
+    
+  if (touchSoundDisabled != oldProps->touchSoundDisabled) {
+    result["touchSoundDisabled"] = touchSoundDisabled;
+  }
+    
+  if ((borderWidth != oldProps->borderWidth) && !(std::isnan(borderWidth) && std::isnan(oldProps->borderWidth))) {
+    result["borderWidth"] = borderWidth;
+  }
+    
+  if (borderColor != oldProps->borderColor) {
+    result["borderColor"] = *borderColor;
+  }
+    
+  if (borderStyle != oldProps->borderStyle) {
+    result["borderStyle"] = borderStyle;
+  }
+  return result;
+}
+#endif
+RNGestureHandlerRootViewProps::RNGestureHandlerRootViewProps(
+    const PropsParserContext &context,
+    const RNGestureHandlerRootViewProps &sourceProps,
+    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps)
+
+     {}
+    
+#ifdef RN_SERIALIZABLE_STATE
+ComponentName RNGestureHandlerRootViewProps::getDiffPropsImplementationTarget() const {
+  return "RNGestureHandlerRootView";
+}
+
+folly::dynamic RNGestureHandlerRootViewProps::getDiffProps(
+    const Props* prevProps) const {
+  static const auto defaultProps = RNGestureHandlerRootViewProps();
+  const RNGestureHandlerRootViewProps* oldProps = prevProps == nullptr
+      ? &defaultProps
+      : static_cast<const RNGestureHandlerRootViewProps*>(prevProps);
+  if (this == oldProps) {
+    return folly::dynamic::object();
+  }
+  folly::dynamic result = HostPlatformViewProps::getDiffProps(prevProps);
+  
+  return result;
+}
+#endif
+
+} // namespace facebook::react
diff --git a/node_modules/react-native-gesture-handler/android/build/generated/source/codegen/jni/react/renderer/components/rngesturehandler_codegen/Props.h b/node_modules/react-native-gesture-handler/android/build/generated/source/codegen/jni/react/renderer/components/rngesturehandler_codegen/Props.h
new file mode 100644
index 0000000..83de311
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/android/build/generated/source/codegen/jni/react/renderer/components/rngesturehandler_codegen/Props.h
@@ -0,0 +1,59 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GeneratePropsH.js
+ */
+#pragma once
+
+#include <react/renderer/components/view/ViewProps.h>
+#include <react/renderer/core/PropsParserContext.h>
+#include <react/renderer/graphics/Color.h>
+
+namespace facebook::react {
+
+class RNGestureHandlerButtonProps final : public ViewProps {
+ public:
+  RNGestureHandlerButtonProps() = default;
+  RNGestureHandlerButtonProps(const PropsParserContext& context, const RNGestureHandlerButtonProps &sourceProps, const RawProps &rawProps);
+
+#pragma mark - Props
+
+  bool exclusive{true};
+  bool foreground{false};
+  bool borderless{false};
+  bool enabled{true};
+  SharedColor rippleColor{};
+  int rippleRadius{0};
+  bool touchSoundDisabled{false};
+  Float borderWidth{0.0};
+  SharedColor borderColor{};
+  std::string borderStyle{"solid"};
+
+  #ifdef RN_SERIALIZABLE_STATE
+  ComponentName getDiffPropsImplementationTarget() const override;
+
+  folly::dynamic getDiffProps(const Props* prevProps) const override;
+  #endif
+};
+
+class RNGestureHandlerRootViewProps final : public ViewProps {
+ public:
+  RNGestureHandlerRootViewProps() = default;
+  RNGestureHandlerRootViewProps(const PropsParserContext& context, const RNGestureHandlerRootViewProps &sourceProps, const RawProps &rawProps);
+
+#pragma mark - Props
+
+  
+
+  #ifdef RN_SERIALIZABLE_STATE
+  ComponentName getDiffPropsImplementationTarget() const override;
+
+  folly::dynamic getDiffProps(const Props* prevProps) const override;
+  #endif
+};
+
+} // namespace facebook::react
diff --git a/node_modules/react-native-gesture-handler/android/build/generated/source/codegen/jni/react/renderer/components/rngesturehandler_codegen/ShadowNodes.cpp b/node_modules/react-native-gesture-handler/android/build/generated/source/codegen/jni/react/renderer/components/rngesturehandler_codegen/ShadowNodes.cpp
new file mode 100644
index 0000000..d398757
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/android/build/generated/source/codegen/jni/react/renderer/components/rngesturehandler_codegen/ShadowNodes.cpp
@@ -0,0 +1,18 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateShadowNodeCpp.js
+ */
+
+#include <react/renderer/components/rngesturehandler_codegen/ShadowNodes.h>
+
+namespace facebook::react {
+
+extern const char RNGestureHandlerButtonComponentName[] = "RNGestureHandlerButton";
+extern const char RNGestureHandlerRootViewComponentName[] = "RNGestureHandlerRootView";
+
+} // namespace facebook::react
diff --git a/node_modules/react-native-gesture-handler/android/build/generated/source/codegen/jni/react/renderer/components/rngesturehandler_codegen/ShadowNodes.h b/node_modules/react-native-gesture-handler/android/build/generated/source/codegen/jni/react/renderer/components/rngesturehandler_codegen/ShadowNodes.h
new file mode 100644
index 0000000..0cafb3e
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/android/build/generated/source/codegen/jni/react/renderer/components/rngesturehandler_codegen/ShadowNodes.h
@@ -0,0 +1,43 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateShadowNodeH.js
+ */
+
+#pragma once
+
+#include <react/renderer/components/rngesturehandler_codegen/EventEmitters.h>
+#include <react/renderer/components/rngesturehandler_codegen/Props.h>
+#include <react/renderer/components/rngesturehandler_codegen/States.h>
+#include <react/renderer/components/view/ConcreteViewShadowNode.h>
+#include <jsi/jsi.h>
+
+namespace facebook::react {
+
+JSI_EXPORT extern const char RNGestureHandlerButtonComponentName[];
+
+/*
+ * `ShadowNode` for <RNGestureHandlerButton> component.
+ */
+using RNGestureHandlerButtonShadowNode = ConcreteViewShadowNode<
+    RNGestureHandlerButtonComponentName,
+    RNGestureHandlerButtonProps,
+    RNGestureHandlerButtonEventEmitter,
+    RNGestureHandlerButtonState>;
+
+JSI_EXPORT extern const char RNGestureHandlerRootViewComponentName[];
+
+/*
+ * `ShadowNode` for <RNGestureHandlerRootView> component.
+ */
+using RNGestureHandlerRootViewShadowNode = ConcreteViewShadowNode<
+    RNGestureHandlerRootViewComponentName,
+    RNGestureHandlerRootViewProps,
+    RNGestureHandlerRootViewEventEmitter,
+    RNGestureHandlerRootViewState>;
+
+} // namespace facebook::react
diff --git a/node_modules/react-native-gesture-handler/android/build/generated/source/codegen/jni/react/renderer/components/rngesturehandler_codegen/States.cpp b/node_modules/react-native-gesture-handler/android/build/generated/source/codegen/jni/react/renderer/components/rngesturehandler_codegen/States.cpp
new file mode 100644
index 0000000..e61488c
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/android/build/generated/source/codegen/jni/react/renderer/components/rngesturehandler_codegen/States.cpp
@@ -0,0 +1,16 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateStateCpp.js
+ */
+#include <react/renderer/components/rngesturehandler_codegen/States.h>
+
+namespace facebook::react {
+
+
+
+} // namespace facebook::react
diff --git a/node_modules/react-native-gesture-handler/android/build/generated/source/codegen/jni/react/renderer/components/rngesturehandler_codegen/States.h b/node_modules/react-native-gesture-handler/android/build/generated/source/codegen/jni/react/renderer/components/rngesturehandler_codegen/States.h
new file mode 100644
index 0000000..b867819
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/android/build/generated/source/codegen/jni/react/renderer/components/rngesturehandler_codegen/States.h
@@ -0,0 +1,22 @@
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateStateH.js
+ */
+#pragma once
+
+#include <react/renderer/core/StateData.h>
+#ifdef RN_SERIALIZABLE_STATE
+#include <folly/dynamic.h>
+#endif
+
+namespace facebook::react {
+
+using RNGestureHandlerButtonState = StateData;
+
+using RNGestureHandlerRootViewState = StateData;
+
+} // namespace facebook::react
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/android/build/generated/source/codegen/jni/react/renderer/components/rngesturehandler_codegen/rngesturehandler_codegenJSI-generated.cpp b/node_modules/react-native-gesture-handler/android/build/generated/source/codegen/jni/react/renderer/components/rngesturehandler_codegen/rngesturehandler_codegenJSI-generated.cpp
new file mode 100644
index 0000000..7855e77
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/android/build/generated/source/codegen/jni/react/renderer/components/rngesturehandler_codegen/rngesturehandler_codegenJSI-generated.cpp
@@ -0,0 +1,86 @@
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateModuleCpp.js
+ */
+
+#include "rngesturehandler_codegenJSI.h"
+
+namespace facebook::react {
+
+static jsi::Value __hostFunction_NativeRNGestureHandlerModuleCxxSpecJSI_handleSetJSResponder(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
+  static_cast<NativeRNGestureHandlerModuleCxxSpecJSI *>(&turboModule)->handleSetJSResponder(
+    rt,
+    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asNumber(),
+    count <= 1 ? throw jsi::JSError(rt, "Expected argument in position 1 to be passed") : args[1].asBool()
+  );
+  return jsi::Value::undefined();
+}
+static jsi::Value __hostFunction_NativeRNGestureHandlerModuleCxxSpecJSI_handleClearJSResponder(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
+  static_cast<NativeRNGestureHandlerModuleCxxSpecJSI *>(&turboModule)->handleClearJSResponder(
+    rt
+  );
+  return jsi::Value::undefined();
+}
+static jsi::Value __hostFunction_NativeRNGestureHandlerModuleCxxSpecJSI_createGestureHandler(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
+  static_cast<NativeRNGestureHandlerModuleCxxSpecJSI *>(&turboModule)->createGestureHandler(
+    rt,
+    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asString(rt),
+    count <= 1 ? throw jsi::JSError(rt, "Expected argument in position 1 to be passed") : args[1].asNumber(),
+    count <= 2 ? throw jsi::JSError(rt, "Expected argument in position 2 to be passed") : args[2].asObject(rt)
+  );
+  return jsi::Value::undefined();
+}
+static jsi::Value __hostFunction_NativeRNGestureHandlerModuleCxxSpecJSI_attachGestureHandler(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
+  static_cast<NativeRNGestureHandlerModuleCxxSpecJSI *>(&turboModule)->attachGestureHandler(
+    rt,
+    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asNumber(),
+    count <= 1 ? throw jsi::JSError(rt, "Expected argument in position 1 to be passed") : args[1].asNumber(),
+    count <= 2 ? throw jsi::JSError(rt, "Expected argument in position 2 to be passed") : args[2].asNumber()
+  );
+  return jsi::Value::undefined();
+}
+static jsi::Value __hostFunction_NativeRNGestureHandlerModuleCxxSpecJSI_updateGestureHandler(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
+  static_cast<NativeRNGestureHandlerModuleCxxSpecJSI *>(&turboModule)->updateGestureHandler(
+    rt,
+    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asNumber(),
+    count <= 1 ? throw jsi::JSError(rt, "Expected argument in position 1 to be passed") : args[1].asObject(rt)
+  );
+  return jsi::Value::undefined();
+}
+static jsi::Value __hostFunction_NativeRNGestureHandlerModuleCxxSpecJSI_dropGestureHandler(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
+  static_cast<NativeRNGestureHandlerModuleCxxSpecJSI *>(&turboModule)->dropGestureHandler(
+    rt,
+    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asNumber()
+  );
+  return jsi::Value::undefined();
+}
+static jsi::Value __hostFunction_NativeRNGestureHandlerModuleCxxSpecJSI_install(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
+  return static_cast<NativeRNGestureHandlerModuleCxxSpecJSI *>(&turboModule)->install(
+    rt
+  );
+}
+static jsi::Value __hostFunction_NativeRNGestureHandlerModuleCxxSpecJSI_flushOperations(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
+  static_cast<NativeRNGestureHandlerModuleCxxSpecJSI *>(&turboModule)->flushOperations(
+    rt
+  );
+  return jsi::Value::undefined();
+}
+
+NativeRNGestureHandlerModuleCxxSpecJSI::NativeRNGestureHandlerModuleCxxSpecJSI(std::shared_ptr<CallInvoker> jsInvoker)
+  : TurboModule("RNGestureHandlerModule", jsInvoker) {
+  methodMap_["handleSetJSResponder"] = MethodMetadata {2, __hostFunction_NativeRNGestureHandlerModuleCxxSpecJSI_handleSetJSResponder};
+  methodMap_["handleClearJSResponder"] = MethodMetadata {0, __hostFunction_NativeRNGestureHandlerModuleCxxSpecJSI_handleClearJSResponder};
+  methodMap_["createGestureHandler"] = MethodMetadata {3, __hostFunction_NativeRNGestureHandlerModuleCxxSpecJSI_createGestureHandler};
+  methodMap_["attachGestureHandler"] = MethodMetadata {3, __hostFunction_NativeRNGestureHandlerModuleCxxSpecJSI_attachGestureHandler};
+  methodMap_["updateGestureHandler"] = MethodMetadata {2, __hostFunction_NativeRNGestureHandlerModuleCxxSpecJSI_updateGestureHandler};
+  methodMap_["dropGestureHandler"] = MethodMetadata {1, __hostFunction_NativeRNGestureHandlerModuleCxxSpecJSI_dropGestureHandler};
+  methodMap_["install"] = MethodMetadata {0, __hostFunction_NativeRNGestureHandlerModuleCxxSpecJSI_install};
+  methodMap_["flushOperations"] = MethodMetadata {0, __hostFunction_NativeRNGestureHandlerModuleCxxSpecJSI_flushOperations};
+}
+
+
+} // namespace facebook::react
diff --git a/node_modules/react-native-gesture-handler/android/build/generated/source/codegen/jni/react/renderer/components/rngesturehandler_codegen/rngesturehandler_codegenJSI.h b/node_modules/react-native-gesture-handler/android/build/generated/source/codegen/jni/react/renderer/components/rngesturehandler_codegen/rngesturehandler_codegenJSI.h
new file mode 100644
index 0000000..1e438db
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/android/build/generated/source/codegen/jni/react/renderer/components/rngesturehandler_codegen/rngesturehandler_codegenJSI.h
@@ -0,0 +1,134 @@
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateModuleH.js
+ */
+
+#pragma once
+
+#include <ReactCommon/TurboModule.h>
+#include <react/bridging/Bridging.h>
+
+namespace facebook::react {
+
+
+  class JSI_EXPORT NativeRNGestureHandlerModuleCxxSpecJSI : public TurboModule {
+protected:
+  NativeRNGestureHandlerModuleCxxSpecJSI(std::shared_ptr<CallInvoker> jsInvoker);
+
+public:
+  virtual void handleSetJSResponder(jsi::Runtime &rt, double tag, bool blockNativeResponder) = 0;
+  virtual void handleClearJSResponder(jsi::Runtime &rt) = 0;
+  virtual void createGestureHandler(jsi::Runtime &rt, jsi::String handlerName, double handlerTag, jsi::Object config) = 0;
+  virtual void attachGestureHandler(jsi::Runtime &rt, double handlerTag, double newView, double actionType) = 0;
+  virtual void updateGestureHandler(jsi::Runtime &rt, double handlerTag, jsi::Object newConfig) = 0;
+  virtual void dropGestureHandler(jsi::Runtime &rt, double handlerTag) = 0;
+  virtual bool install(jsi::Runtime &rt) = 0;
+  virtual void flushOperations(jsi::Runtime &rt) = 0;
+
+};
+
+template <typename T>
+class JSI_EXPORT NativeRNGestureHandlerModuleCxxSpec : public TurboModule {
+public:
+  jsi::Value create(jsi::Runtime &rt, const jsi::PropNameID &propName) override {
+    return delegate_.create(rt, propName);
+  }
+
+  std::vector<jsi::PropNameID> getPropertyNames(jsi::Runtime& runtime) override {
+    return delegate_.getPropertyNames(runtime);
+  }
+
+  static constexpr std::string_view kModuleName = "RNGestureHandlerModule";
+
+protected:
+  NativeRNGestureHandlerModuleCxxSpec(std::shared_ptr<CallInvoker> jsInvoker)
+    : TurboModule(std::string{NativeRNGestureHandlerModuleCxxSpec::kModuleName}, jsInvoker),
+      delegate_(reinterpret_cast<T*>(this), jsInvoker) {}
+
+
+private:
+  class Delegate : public NativeRNGestureHandlerModuleCxxSpecJSI {
+  public:
+    Delegate(T *instance, std::shared_ptr<CallInvoker> jsInvoker) :
+      NativeRNGestureHandlerModuleCxxSpecJSI(std::move(jsInvoker)), instance_(instance) {
+
+    }
+
+    void handleSetJSResponder(jsi::Runtime &rt, double tag, bool blockNativeResponder) override {
+      static_assert(
+          bridging::getParameterCount(&T::handleSetJSResponder) == 3,
+          "Expected handleSetJSResponder(...) to have 3 parameters");
+
+      return bridging::callFromJs<void>(
+          rt, &T::handleSetJSResponder, jsInvoker_, instance_, std::move(tag), std::move(blockNativeResponder));
+    }
+    void handleClearJSResponder(jsi::Runtime &rt) override {
+      static_assert(
+          bridging::getParameterCount(&T::handleClearJSResponder) == 1,
+          "Expected handleClearJSResponder(...) to have 1 parameters");
+
+      return bridging::callFromJs<void>(
+          rt, &T::handleClearJSResponder, jsInvoker_, instance_);
+    }
+    void createGestureHandler(jsi::Runtime &rt, jsi::String handlerName, double handlerTag, jsi::Object config) override {
+      static_assert(
+          bridging::getParameterCount(&T::createGestureHandler) == 4,
+          "Expected createGestureHandler(...) to have 4 parameters");
+
+      return bridging::callFromJs<void>(
+          rt, &T::createGestureHandler, jsInvoker_, instance_, std::move(handlerName), std::move(handlerTag), std::move(config));
+    }
+    void attachGestureHandler(jsi::Runtime &rt, double handlerTag, double newView, double actionType) override {
+      static_assert(
+          bridging::getParameterCount(&T::attachGestureHandler) == 4,
+          "Expected attachGestureHandler(...) to have 4 parameters");
+
+      return bridging::callFromJs<void>(
+          rt, &T::attachGestureHandler, jsInvoker_, instance_, std::move(handlerTag), std::move(newView), std::move(actionType));
+    }
+    void updateGestureHandler(jsi::Runtime &rt, double handlerTag, jsi::Object newConfig) override {
+      static_assert(
+          bridging::getParameterCount(&T::updateGestureHandler) == 3,
+          "Expected updateGestureHandler(...) to have 3 parameters");
+
+      return bridging::callFromJs<void>(
+          rt, &T::updateGestureHandler, jsInvoker_, instance_, std::move(handlerTag), std::move(newConfig));
+    }
+    void dropGestureHandler(jsi::Runtime &rt, double handlerTag) override {
+      static_assert(
+          bridging::getParameterCount(&T::dropGestureHandler) == 2,
+          "Expected dropGestureHandler(...) to have 2 parameters");
+
+      return bridging::callFromJs<void>(
+          rt, &T::dropGestureHandler, jsInvoker_, instance_, std::move(handlerTag));
+    }
+    bool install(jsi::Runtime &rt) override {
+      static_assert(
+          bridging::getParameterCount(&T::install) == 1,
+          "Expected install(...) to have 1 parameters");
+
+      return bridging::callFromJs<bool>(
+          rt, &T::install, jsInvoker_, instance_);
+    }
+    void flushOperations(jsi::Runtime &rt) override {
+      static_assert(
+          bridging::getParameterCount(&T::flushOperations) == 1,
+          "Expected flushOperations(...) to have 1 parameters");
+
+      return bridging::callFromJs<void>(
+          rt, &T::flushOperations, jsInvoker_, instance_);
+    }
+
+  private:
+    friend class NativeRNGestureHandlerModuleCxxSpec;
+    T *instance_;
+  };
+
+  Delegate delegate_;
+};
+
+} // namespace facebook::react
diff --git a/node_modules/react-native-gesture-handler/android/build/generated/source/codegen/jni/rngesturehandler_codegen-generated.cpp b/node_modules/react-native-gesture-handler/android/build/generated/source/codegen/jni/rngesturehandler_codegen-generated.cpp
new file mode 100644
index 0000000..cbf6143
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/android/build/generated/source/codegen/jni/rngesturehandler_codegen-generated.cpp
@@ -0,0 +1,74 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateModuleJniCpp.js
+ */
+
+#include "rngesturehandler_codegen.h"
+
+namespace facebook::react {
+
+static facebook::jsi::Value __hostFunction_NativeRNGestureHandlerModuleSpecJSI_handleSetJSResponder(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
+  static jmethodID cachedMethodId = nullptr;
+  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, VoidKind, "handleSetJSResponder", "(DZ)V", args, count, cachedMethodId);
+}
+
+static facebook::jsi::Value __hostFunction_NativeRNGestureHandlerModuleSpecJSI_handleClearJSResponder(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
+  static jmethodID cachedMethodId = nullptr;
+  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, VoidKind, "handleClearJSResponder", "()V", args, count, cachedMethodId);
+}
+
+static facebook::jsi::Value __hostFunction_NativeRNGestureHandlerModuleSpecJSI_createGestureHandler(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
+  static jmethodID cachedMethodId = nullptr;
+  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, VoidKind, "createGestureHandler", "(Ljava/lang/String;DLcom/facebook/react/bridge/ReadableMap;)V", args, count, cachedMethodId);
+}
+
+static facebook::jsi::Value __hostFunction_NativeRNGestureHandlerModuleSpecJSI_attachGestureHandler(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
+  static jmethodID cachedMethodId = nullptr;
+  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, VoidKind, "attachGestureHandler", "(DDD)V", args, count, cachedMethodId);
+}
+
+static facebook::jsi::Value __hostFunction_NativeRNGestureHandlerModuleSpecJSI_updateGestureHandler(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
+  static jmethodID cachedMethodId = nullptr;
+  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, VoidKind, "updateGestureHandler", "(DLcom/facebook/react/bridge/ReadableMap;)V", args, count, cachedMethodId);
+}
+
+static facebook::jsi::Value __hostFunction_NativeRNGestureHandlerModuleSpecJSI_dropGestureHandler(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
+  static jmethodID cachedMethodId = nullptr;
+  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, VoidKind, "dropGestureHandler", "(D)V", args, count, cachedMethodId);
+}
+
+static facebook::jsi::Value __hostFunction_NativeRNGestureHandlerModuleSpecJSI_install(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
+  static jmethodID cachedMethodId = nullptr;
+  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, BooleanKind, "install", "()Z", args, count, cachedMethodId);
+}
+
+static facebook::jsi::Value __hostFunction_NativeRNGestureHandlerModuleSpecJSI_flushOperations(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
+  static jmethodID cachedMethodId = nullptr;
+  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, VoidKind, "flushOperations", "()V", args, count, cachedMethodId);
+}
+
+NativeRNGestureHandlerModuleSpecJSI::NativeRNGestureHandlerModuleSpecJSI(const JavaTurboModule::InitParams &params)
+  : JavaTurboModule(params) {
+  methodMap_["handleSetJSResponder"] = MethodMetadata {2, __hostFunction_NativeRNGestureHandlerModuleSpecJSI_handleSetJSResponder};
+  methodMap_["handleClearJSResponder"] = MethodMetadata {0, __hostFunction_NativeRNGestureHandlerModuleSpecJSI_handleClearJSResponder};
+  methodMap_["createGestureHandler"] = MethodMetadata {3, __hostFunction_NativeRNGestureHandlerModuleSpecJSI_createGestureHandler};
+  methodMap_["attachGestureHandler"] = MethodMetadata {3, __hostFunction_NativeRNGestureHandlerModuleSpecJSI_attachGestureHandler};
+  methodMap_["updateGestureHandler"] = MethodMetadata {2, __hostFunction_NativeRNGestureHandlerModuleSpecJSI_updateGestureHandler};
+  methodMap_["dropGestureHandler"] = MethodMetadata {1, __hostFunction_NativeRNGestureHandlerModuleSpecJSI_dropGestureHandler};
+  methodMap_["install"] = MethodMetadata {0, __hostFunction_NativeRNGestureHandlerModuleSpecJSI_install};
+  methodMap_["flushOperations"] = MethodMetadata {0, __hostFunction_NativeRNGestureHandlerModuleSpecJSI_flushOperations};
+}
+
+std::shared_ptr<TurboModule> rngesturehandler_codegen_ModuleProvider(const std::string &moduleName, const JavaTurboModule::InitParams &params) {
+  if (moduleName == "RNGestureHandlerModule") {
+    return std::make_shared<NativeRNGestureHandlerModuleSpecJSI>(params);
+  }
+  return nullptr;
+}
+
+} // namespace facebook::react
diff --git a/node_modules/react-native-gesture-handler/android/build/generated/source/codegen/jni/rngesturehandler_codegen.h b/node_modules/react-native-gesture-handler/android/build/generated/source/codegen/jni/rngesturehandler_codegen.h
new file mode 100644
index 0000000..4ebb0dd
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/android/build/generated/source/codegen/jni/rngesturehandler_codegen.h
@@ -0,0 +1,31 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateModuleJniH.js
+ */
+
+#pragma once
+
+#include <ReactCommon/JavaTurboModule.h>
+#include <ReactCommon/TurboModule.h>
+#include <jsi/jsi.h>
+
+namespace facebook::react {
+
+/**
+ * JNI C++ class for module 'NativeRNGestureHandlerModule'
+ */
+class JSI_EXPORT NativeRNGestureHandlerModuleSpecJSI : public JavaTurboModule {
+public:
+  NativeRNGestureHandlerModuleSpecJSI(const JavaTurboModule::InitParams &params);
+};
+
+
+JSI_EXPORT
+std::shared_ptr<TurboModule> rngesturehandler_codegen_ModuleProvider(const std::string &moduleName, const JavaTurboModule::InitParams &params);
+
+} // namespace facebook::react
diff --git a/node_modules/react-native-gesture-handler/android/build/generated/source/codegen/schema.json b/node_modules/react-native-gesture-handler/android/build/generated/source/codegen/schema.json
new file mode 100644
index 0000000..4cbc7e8
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/android/build/generated/source/codegen/schema.json
@@ -0,0 +1 @@
+{"libraryName":"","modules":{"NativeRNGestureHandlerModule":{"type":"NativeModule","aliasMap":{},"enumMap":{},"spec":{"eventEmitters":[],"methods":[{"name":"handleSetJSResponder","optional":false,"typeAnnotation":{"type":"FunctionTypeAnnotation","returnTypeAnnotation":{"type":"VoidTypeAnnotation"},"params":[{"name":"tag","optional":false,"typeAnnotation":{"type":"DoubleTypeAnnotation"}},{"name":"blockNativeResponder","optional":false,"typeAnnotation":{"type":"BooleanTypeAnnotation"}}]}},{"name":"handleClearJSResponder","optional":false,"typeAnnotation":{"type":"FunctionTypeAnnotation","returnTypeAnnotation":{"type":"VoidTypeAnnotation"},"params":[]}},{"name":"createGestureHandler","optional":false,"typeAnnotation":{"type":"FunctionTypeAnnotation","returnTypeAnnotation":{"type":"VoidTypeAnnotation"},"params":[{"name":"handlerName","optional":false,"typeAnnotation":{"type":"StringTypeAnnotation"}},{"name":"handlerTag","optional":false,"typeAnnotation":{"type":"DoubleTypeAnnotation"}},{"name":"config","optional":false,"typeAnnotation":{"type":"GenericObjectTypeAnnotation"}}]}},{"name":"attachGestureHandler","optional":false,"typeAnnotation":{"type":"FunctionTypeAnnotation","returnTypeAnnotation":{"type":"VoidTypeAnnotation"},"params":[{"name":"handlerTag","optional":false,"typeAnnotation":{"type":"DoubleTypeAnnotation"}},{"name":"newView","optional":false,"typeAnnotation":{"type":"DoubleTypeAnnotation"}},{"name":"actionType","optional":false,"typeAnnotation":{"type":"DoubleTypeAnnotation"}}]}},{"name":"updateGestureHandler","optional":false,"typeAnnotation":{"type":"FunctionTypeAnnotation","returnTypeAnnotation":{"type":"VoidTypeAnnotation"},"params":[{"name":"handlerTag","optional":false,"typeAnnotation":{"type":"DoubleTypeAnnotation"}},{"name":"newConfig","optional":false,"typeAnnotation":{"type":"GenericObjectTypeAnnotation"}}]}},{"name":"dropGestureHandler","optional":false,"typeAnnotation":{"type":"FunctionTypeAnnotation","returnTypeAnnotation":{"type":"VoidTypeAnnotation"},"params":[{"name":"handlerTag","optional":false,"typeAnnotation":{"type":"DoubleTypeAnnotation"}}]}},{"name":"install","optional":false,"typeAnnotation":{"type":"FunctionTypeAnnotation","returnTypeAnnotation":{"type":"BooleanTypeAnnotation"},"params":[]}},{"name":"flushOperations","optional":false,"typeAnnotation":{"type":"FunctionTypeAnnotation","returnTypeAnnotation":{"type":"VoidTypeAnnotation"},"params":[]}}]},"moduleName":"RNGestureHandlerModule"},"RNGestureHandlerButton":{"type":"Component","components":{"RNGestureHandlerButton":{"extendsProps":[{"type":"ReactNativeBuiltInType","knownTypeName":"ReactNativeCoreViewProps"}],"events":[],"props":[{"name":"exclusive","optional":true,"typeAnnotation":{"type":"BooleanTypeAnnotation","default":true}},{"name":"foreground","optional":true,"typeAnnotation":{"type":"BooleanTypeAnnotation","default":false}},{"name":"borderless","optional":true,"typeAnnotation":{"type":"BooleanTypeAnnotation","default":false}},{"name":"enabled","optional":true,"typeAnnotation":{"type":"BooleanTypeAnnotation","default":true}},{"name":"rippleColor","optional":true,"typeAnnotation":{"type":"ReservedPropTypeAnnotation","name":"ColorPrimitive"}},{"name":"rippleRadius","optional":true,"typeAnnotation":{"type":"Int32TypeAnnotation","default":0}},{"name":"touchSoundDisabled","optional":true,"typeAnnotation":{"type":"BooleanTypeAnnotation","default":false}},{"name":"borderWidth","optional":true,"typeAnnotation":{"type":"FloatTypeAnnotation","default":0}},{"name":"borderColor","optional":true,"typeAnnotation":{"type":"ReservedPropTypeAnnotation","name":"ColorPrimitive"}},{"name":"borderStyle","optional":true,"typeAnnotation":{"type":"StringTypeAnnotation","default":"solid"}}],"commands":[]}}},"RNGestureHandlerRootView":{"type":"Component","components":{"RNGestureHandlerRootView":{"extendsProps":[{"type":"ReactNativeBuiltInType","knownTypeName":"ReactNativeCoreViewProps"}],"events":[],"props":[],"commands":[]}}}}}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/android/common/src/main/java/com/swmansion/common/GestureHandlerStateManager.kt b/node_modules/react-native-gesture-handler/android/noreanimated/src/main/java/com/swmansion/common/GestureHandlerStateManager.kt
similarity index 100%
rename from node_modules/react-native-gesture-handler/android/common/src/main/java/com/swmansion/common/GestureHandlerStateManager.kt
rename to node_modules/react-native-gesture-handler/android/noreanimated/src/main/java/com/swmansion/common/GestureHandlerStateManager.kt
diff --git a/node_modules/react-native-gesture-handler/android/nosvg/src/main/java/com/swmansion/gesturehandler/RNSVGHitTester.kt b/node_modules/react-native-gesture-handler/android/nosvg/src/main/java/com/swmansion/gesturehandler/RNSVGHitTester.kt
new file mode 100644
index 0000000..6c4aedd
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/android/nosvg/src/main/java/com/swmansion/gesturehandler/RNSVGHitTester.kt
@@ -0,0 +1,13 @@
+package com.swmansion.gesturehandler
+
+import android.view.View
+
+class RNSVGHitTester {
+  companion object {
+    @Suppress("UNUSED_PARAMETER")
+    fun isSvgElement(view: Any) = false
+
+    @Suppress("UNUSED_PARAMETER")
+    fun hitTest(view: View, posX: Float, posY: Float) = false
+  }
+}
diff --git a/node_modules/react-native-gesture-handler/android/packageDeprecated/src/main/java/com/swmansion/gesturehandler/RNGestureHandlerPackage.kt b/node_modules/react-native-gesture-handler/android/packageDeprecated/src/main/java/com/swmansion/gesturehandler/RNGestureHandlerPackage.kt
deleted file mode 100644
index 5087989..0000000
--- a/node_modules/react-native-gesture-handler/android/packageDeprecated/src/main/java/com/swmansion/gesturehandler/RNGestureHandlerPackage.kt
+++ /dev/null
@@ -1,85 +0,0 @@
-package com.swmansion.gesturehandler
-
-import com.facebook.react.BaseReactPackage
-import com.facebook.react.ViewManagerOnDemandReactPackage
-import com.facebook.react.bridge.ModuleSpec
-import com.facebook.react.bridge.NativeModule
-import com.facebook.react.bridge.ReactApplicationContext
-import com.facebook.react.module.annotations.ReactModule
-import com.facebook.react.module.annotations.ReactModuleList
-import com.facebook.react.module.model.ReactModuleInfo
-import com.facebook.react.module.model.ReactModuleInfoProvider
-import com.facebook.react.uimanager.ViewManager
-import com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager
-import com.swmansion.gesturehandler.react.RNGestureHandlerModule
-import com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager
-
-@ReactModuleList(
-  nativeModules = [
-    RNGestureHandlerModule::class
-  ]
-)
-class RNGestureHandlerPackage : BaseReactPackage(), ViewManagerOnDemandReactPackage {
-  private val viewManagers: Map<String, ModuleSpec> by lazy {
-    mapOf(
-      RNGestureHandlerRootViewManager.REACT_CLASS to ModuleSpec.viewManagerSpec {
-        RNGestureHandlerRootViewManager()
-      },
-      RNGestureHandlerButtonViewManager.REACT_CLASS to ModuleSpec.viewManagerSpec {
-        RNGestureHandlerButtonViewManager()
-      }
-    )
-  }
-
-  override fun createViewManagers(reactContext: ReactApplicationContext) =
-    listOf<ViewManager<*, *>>(
-      RNGestureHandlerRootViewManager(),
-      RNGestureHandlerButtonViewManager()
-    )
-
-  override fun getViewManagerNames(reactContext: ReactApplicationContext?) =
-    viewManagers.keys.toList()
-
-  override fun getViewManagers(reactContext: ReactApplicationContext?): MutableList<ModuleSpec> =
-    viewManagers.values.toMutableList()
-
-  override fun createViewManager(
-    reactContext: ReactApplicationContext?,
-    viewManagerName: String?
-  ) = viewManagers[viewManagerName]?.provider?.get() as? ViewManager<*, *>
-
-  override fun getModule(name: String, reactContext: ReactApplicationContext): NativeModule? {
-    return if (name == RNGestureHandlerModule.NAME) {
-      RNGestureHandlerModule(reactContext)
-    } else {
-      null
-    }
-  }
-
-  override fun getReactModuleInfoProvider(): ReactModuleInfoProvider {
-    try {
-      val reactModuleInfoProviderClass =
-        Class.forName("com.swmansion.gesturehandler.RNGestureHandlerPackage$\$ReactModuleInfoProvider")
-      return reactModuleInfoProviderClass.getDeclaredConstructor().newInstance() as ReactModuleInfoProvider
-    } catch (e: ClassNotFoundException) {
-      return ReactModuleInfoProvider {
-        val reactModule: ReactModule = RNGestureHandlerModule::class.java.getAnnotation(ReactModule::class.java)!!
-
-        mutableMapOf(
-          RNGestureHandlerModule.NAME to ReactModuleInfo(
-            reactModule.name,
-            RNGestureHandlerModule::class.java.name,
-            reactModule.canOverrideExistingModule,
-            reactModule.needsEagerInit,
-            reactModule.isCxxModule,
-            true
-          )
-        )
-      }
-    } catch (e: InstantiationException) {
-      throw RuntimeException("No ReactModuleInfoProvider for RNGestureHandlerPackage$\$ReactModuleInfoProvider", e)
-    } catch (e: IllegalAccessException) {
-      throw RuntimeException("No ReactModuleInfoProvider for RNGestureHandlerPackage$\$ReactModuleInfoProvider", e)
-    }
-  }
-}
diff --git a/node_modules/react-native-gesture-handler/android/paper77/src/main/java/com/swmansion/gesturehandler/ReactContextExtensions.kt b/node_modules/react-native-gesture-handler/android/paper77/src/main/java/com/swmansion/gesturehandler/ReactContextExtensions.kt
deleted file mode 100644
index 7861838..0000000
--- a/node_modules/react-native-gesture-handler/android/paper77/src/main/java/com/swmansion/gesturehandler/ReactContextExtensions.kt
+++ /dev/null
@@ -1,13 +0,0 @@
-package com.swmansion.gesturehandler
-
-import com.facebook.react.bridge.ReactContext
-import com.facebook.react.uimanager.UIManagerModule
-import com.facebook.react.uimanager.events.Event
-
-fun ReactContext.dispatchEvent(event: Event<*>) {
-  try {
-    this.getNativeModule(UIManagerModule::class.java)!!.eventDispatcher.dispatchEvent(event)
-  } catch (e: NullPointerException) {
-    throw Exception("Couldn't get an instance of UIManagerModule. Gesture Handler is unable to send an event.", e)
-  }
-}
diff --git a/node_modules/react-native-gesture-handler/android/package77/src/main/java/com/swmansion/gesturehandler/RNGestureHandlerPackage.kt b/node_modules/react-native-gesture-handler/android/src/main/java/com/swmansion/gesturehandler/RNGestureHandlerPackage.kt
similarity index 82%
rename from node_modules/react-native-gesture-handler/android/package77/src/main/java/com/swmansion/gesturehandler/RNGestureHandlerPackage.kt
rename to node_modules/react-native-gesture-handler/android/src/main/java/com/swmansion/gesturehandler/RNGestureHandlerPackage.kt
index 808a69e..e271a3e 100644
--- a/node_modules/react-native-gesture-handler/android/package77/src/main/java/com/swmansion/gesturehandler/RNGestureHandlerPackage.kt
+++ b/node_modules/react-native-gesture-handler/android/src/main/java/com/swmansion/gesturehandler/RNGestureHandlerPackage.kt
@@ -16,10 +16,12 @@ import com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager
 
 @ReactModuleList(
   nativeModules = [
-    RNGestureHandlerModule::class
-  ]
+    RNGestureHandlerModule::class,
+  ],
 )
-class RNGestureHandlerPackage : BaseReactPackage(), ViewManagerOnDemandReactPackage {
+class RNGestureHandlerPackage :
+  BaseReactPackage(),
+  ViewManagerOnDemandReactPackage {
   private val viewManagers: Map<String, ModuleSpec> by lazy {
     mapOf(
       RNGestureHandlerRootViewManager.REACT_CLASS to ModuleSpec.viewManagerSpec {
@@ -27,34 +29,27 @@ class RNGestureHandlerPackage : BaseReactPackage(), ViewManagerOnDemandReactPack
       },
       RNGestureHandlerButtonViewManager.REACT_CLASS to ModuleSpec.viewManagerSpec {
         RNGestureHandlerButtonViewManager()
-      }
+      },
     )
   }
 
   override fun createViewManagers(reactContext: ReactApplicationContext) =
-    listOf<ViewManager<*, *>>(
-      RNGestureHandlerRootViewManager(),
-      RNGestureHandlerButtonViewManager()
-    )
+    listOf<ViewManager<*, *>>(RNGestureHandlerRootViewManager(), RNGestureHandlerButtonViewManager())
 
-  override fun getViewManagerNames(reactContext: ReactApplicationContext) =
-    viewManagers.keys.toList()
+  override fun getViewManagerNames(reactContext: ReactApplicationContext) = viewManagers.keys.toList()
 
   override fun getViewManagers(reactContext: ReactApplicationContext): MutableList<ModuleSpec> =
     viewManagers.values.toMutableList()
 
-  override fun createViewManager(
-    reactContext: ReactApplicationContext,
-    viewManagerName: String
-  ) = viewManagers[viewManagerName]?.provider?.get() as? ViewManager<*, *>
+  override fun createViewManager(reactContext: ReactApplicationContext, viewManagerName: String) =
+    viewManagers[viewManagerName]?.provider?.get() as? ViewManager<*, *>
 
-  override fun getModule(name: String, reactContext: ReactApplicationContext): NativeModule? {
-    return if (name == RNGestureHandlerModule.NAME) {
+  override fun getModule(name: String, reactContext: ReactApplicationContext): NativeModule? =
+    if (name == RNGestureHandlerModule.NAME) {
       RNGestureHandlerModule(reactContext)
     } else {
       null
     }
-  }
 
   override fun getReactModuleInfoProvider(): ReactModuleInfoProvider {
     try {
@@ -72,8 +67,8 @@ class RNGestureHandlerPackage : BaseReactPackage(), ViewManagerOnDemandReactPack
             reactModule.canOverrideExistingModule,
             reactModule.needsEagerInit,
             reactModule.isCxxModule,
-            true
-          )
+            true,
+          ),
         )
       }
     } catch (e: InstantiationException) {
diff --git a/node_modules/react-native-gesture-handler/android/src/main/java/com/swmansion/gesturehandler/react/RNGestureHandlerEventDispatcher.kt b/node_modules/react-native-gesture-handler/android/src/main/java/com/swmansion/gesturehandler/react/RNGestureHandlerEventDispatcher.kt
new file mode 100644
index 0000000..a047c2c
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/android/src/main/java/com/swmansion/gesturehandler/react/RNGestureHandlerEventDispatcher.kt
@@ -0,0 +1,189 @@
+package com.swmansion.gesturehandler.react
+
+import android.view.MotionEvent
+import com.facebook.react.bridge.ReactApplicationContext
+import com.facebook.react.bridge.WritableMap
+import com.facebook.react.uimanager.events.Event
+import com.swmansion.gesturehandler.BuildConfig
+import com.swmansion.gesturehandler.ReanimatedEventDispatcher
+import com.swmansion.gesturehandler.core.GestureHandler
+import com.swmansion.gesturehandler.core.OnTouchEventListener
+import com.swmansion.gesturehandler.dispatchEvent
+
+class RNGestureHandlerEventDispatcher(private val reactApplicationContext: ReactApplicationContext) :
+  OnTouchEventListener {
+  private val reanimatedEventDispatcher = ReanimatedEventDispatcher()
+
+  override fun <T : GestureHandler> onHandlerUpdate(handler: T, event: MotionEvent) {
+    this.dispatchHandlerUpdateEvent(handler)
+  }
+
+  override fun <T : GestureHandler> onStateChange(handler: T, newState: Int, oldState: Int) {
+    this.dispatchStateChangeEvent(handler, newState, oldState)
+  }
+
+  override fun <T : GestureHandler> onTouchEvent(handler: T) {
+    this.dispatchTouchEvent(handler)
+  }
+
+  private fun <T : GestureHandler> dispatchHandlerUpdateEvent(handler: T) {
+    // triggers onUpdate and onChange callbacks on the JS side
+
+    // root containers use negative tags, we don't need to dispatch events for them to the JS
+    if (handler.tag < 0 || handler.state != GestureHandler.STATE_ACTIVE) {
+      return
+    }
+
+    val handlerFactory = RNGestureHandlerFactoryUtil.findFactoryForHandler<GestureHandler>(handler) ?: return
+    when (handler.actionType) {
+      GestureHandler.ACTION_TYPE_REANIMATED_WORKLET -> {
+        // Reanimated worklet
+        val event = RNGestureHandlerEvent.obtain(
+          handler,
+          handlerFactory.createEventBuilder(handler),
+        )
+        sendEventForReanimated(event)
+      }
+      GestureHandler.ACTION_TYPE_NATIVE_ANIMATED_EVENT -> {
+        // Animated with useNativeDriver: true
+        val event = RNGestureHandlerEvent.obtain(
+          handler,
+          handlerFactory.createEventBuilder(handler),
+          true,
+        )
+        sendEventForNativeAnimatedEvent(event)
+      }
+      GestureHandler.ACTION_TYPE_JS_FUNCTION_OLD_API -> {
+        // JS function, Animated.event with useNativeDriver: false using old API
+        if (BuildConfig.IS_NEW_ARCHITECTURE_ENABLED) {
+          val data = RNGestureHandlerEvent.createEventData(
+            handlerFactory.createEventBuilder(handler),
+          )
+          sendEventForDeviceEvent(RNGestureHandlerEvent.EVENT_NAME, data)
+        } else {
+          val event = RNGestureHandlerEvent.obtain(
+            handler,
+            handlerFactory.createEventBuilder(handler),
+          )
+          sendEventForDirectEvent(event)
+        }
+      }
+      GestureHandler.ACTION_TYPE_JS_FUNCTION_NEW_API -> {
+        // JS function, Animated.event with useNativeDriver: false using new API
+        val data =
+          RNGestureHandlerEvent.createEventData(handlerFactory.createEventBuilder(handler))
+        sendEventForDeviceEvent(RNGestureHandlerEvent.EVENT_NAME, data)
+      }
+    }
+  }
+
+  private fun <T : GestureHandler> dispatchStateChangeEvent(handler: T, newState: Int, oldState: Int) {
+    // triggers onBegin, onStart, onEnd, onFinalize callbacks on the JS side
+
+    if (handler.tag < 0) {
+      // root containers use negative tags, we don't need to dispatch events for them to the JS
+      return
+    }
+    val handlerFactory = RNGestureHandlerFactoryUtil.findFactoryForHandler<GestureHandler>(handler) ?: return
+
+    when (handler.actionType) {
+      GestureHandler.ACTION_TYPE_REANIMATED_WORKLET -> {
+        // Reanimated worklet
+        val event = RNGestureHandlerStateChangeEvent.obtain(
+          handler,
+          newState,
+          oldState,
+          handlerFactory.createEventBuilder(handler),
+        )
+        sendEventForReanimated(event)
+      }
+      GestureHandler.ACTION_TYPE_NATIVE_ANIMATED_EVENT, GestureHandler.ACTION_TYPE_JS_FUNCTION_OLD_API -> {
+        // JS function or Animated.event with useNativeDriver: false with old API
+        if (BuildConfig.IS_NEW_ARCHITECTURE_ENABLED) {
+          val data = RNGestureHandlerStateChangeEvent.createEventData(
+            handlerFactory.createEventBuilder(handler),
+            newState,
+            oldState,
+          )
+          sendEventForDeviceEvent(RNGestureHandlerStateChangeEvent.EVENT_NAME, data)
+        } else {
+          val event = RNGestureHandlerStateChangeEvent.obtain(
+            handler,
+            newState,
+            oldState,
+            handlerFactory.createEventBuilder(handler),
+          )
+          sendEventForDirectEvent(event)
+        }
+      }
+      GestureHandler.ACTION_TYPE_JS_FUNCTION_NEW_API -> {
+        // JS function or Animated.event with useNativeDriver: false with new API
+        val data = RNGestureHandlerStateChangeEvent.createEventData(
+          handlerFactory.createEventBuilder(handler),
+          newState,
+          oldState,
+        )
+        sendEventForDeviceEvent(RNGestureHandlerStateChangeEvent.EVENT_NAME, data)
+      }
+    }
+  }
+
+  private fun <T : GestureHandler> dispatchTouchEvent(handler: T) {
+    // triggers onTouchesDown, onTouchesMove, onTouchesUp, onTouchesCancelled callbacks on the JS side
+
+    if (handler.tag < 0) {
+      // root containers use negative tags, we don't need to dispatch events for them to the JS
+      return
+    }
+
+    if (handler.state != GestureHandler.STATE_BEGAN &&
+      handler.state != GestureHandler.STATE_ACTIVE &&
+      handler.state != GestureHandler.STATE_UNDETERMINED &&
+      handler.view == null
+    ) {
+      return
+    }
+
+    when (handler.actionType) {
+      GestureHandler.ACTION_TYPE_REANIMATED_WORKLET -> {
+        // Reanimated worklet
+        val event = RNGestureHandlerTouchEvent.obtain(handler)
+        sendEventForReanimated(event)
+      }
+      GestureHandler.ACTION_TYPE_JS_FUNCTION_NEW_API -> {
+        // JS function, Animated.event with useNativeDriver: false with new API
+        val data = RNGestureHandlerTouchEvent.createEventData(handler)
+        sendEventForDeviceEvent(RNGestureHandlerEvent.EVENT_NAME, data)
+      }
+    }
+  }
+
+  private fun <T : Event<T>> sendEventForReanimated(event: T) {
+    // Delivers the event to Reanimated.
+    if (BuildConfig.IS_NEW_ARCHITECTURE_ENABLED) {
+      // Send event directly to Reanimated
+      reanimatedEventDispatcher.sendEvent(event, reactApplicationContext)
+    } else {
+      // In the old architecture, Reanimated subscribes for specific direct events.
+      sendEventForDirectEvent(event)
+    }
+  }
+
+  private fun sendEventForNativeAnimatedEvent(event: RNGestureHandlerEvent) {
+    // Delivers the event to NativeAnimatedModule.
+    // TODO: send event directly to NativeAnimated[Turbo]Module
+    // ReactContext.dispatchEvent is an extension function, depending on the architecture it will
+    // dispatch event using UIManagerModule or FabricUIManager.
+    reactApplicationContext.dispatchEvent(event)
+  }
+
+  private fun <T : Event<T>> sendEventForDirectEvent(event: T) {
+    // Delivers the event to JS as a direct event. This method is called only on Paper.
+    reactApplicationContext.dispatchEvent(event)
+  }
+
+  private fun sendEventForDeviceEvent(eventName: String, data: WritableMap) {
+    // Delivers the event to JS as a device event.
+    reactApplicationContext.deviceEventEmitter.emit(eventName, data)
+  }
+}
diff --git a/node_modules/react-native-gesture-handler/android/src/main/java/com/swmansion/gesturehandler/react/RNGestureHandlerFactoryUtil.kt b/node_modules/react-native-gesture-handler/android/src/main/java/com/swmansion/gesturehandler/react/RNGestureHandlerFactoryUtil.kt
new file mode 100644
index 0000000..7b9a046
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/android/src/main/java/com/swmansion/gesturehandler/react/RNGestureHandlerFactoryUtil.kt
@@ -0,0 +1,34 @@
+package com.swmansion.gesturehandler.react
+
+import com.swmansion.gesturehandler.core.FlingGestureHandler
+import com.swmansion.gesturehandler.core.GestureHandler
+import com.swmansion.gesturehandler.core.HoverGestureHandler
+import com.swmansion.gesturehandler.core.LongPressGestureHandler
+import com.swmansion.gesturehandler.core.ManualGestureHandler
+import com.swmansion.gesturehandler.core.NativeViewGestureHandler
+import com.swmansion.gesturehandler.core.PanGestureHandler
+import com.swmansion.gesturehandler.core.PinchGestureHandler
+import com.swmansion.gesturehandler.core.RotationGestureHandler
+import com.swmansion.gesturehandler.core.TapGestureHandler
+
+object RNGestureHandlerFactoryUtil {
+  private val handlerFactories = arrayOf<GestureHandler.Factory<*>>(
+    NativeViewGestureHandler.Factory(),
+    TapGestureHandler.Factory(),
+    LongPressGestureHandler.Factory(),
+    PanGestureHandler.Factory(),
+    PinchGestureHandler.Factory(),
+    RotationGestureHandler.Factory(),
+    FlingGestureHandler.Factory(),
+    ManualGestureHandler.Factory(),
+    HoverGestureHandler.Factory(),
+  )
+
+  @Suppress("UNCHECKED_CAST")
+  fun <T : GestureHandler> findFactoryForHandler(handler: GestureHandler): GestureHandler.Factory<GestureHandler>? =
+    handlerFactories.firstOrNull { it.type == handler.javaClass } as GestureHandler.Factory<GestureHandler>?
+
+  @Suppress("UNCHECKED_CAST")
+  fun <T : GestureHandler> findFactoryForName(handlerName: String): GestureHandler.Factory<GestureHandler>? =
+    handlerFactories.firstOrNull { it.name == handlerName } as GestureHandler.Factory<GestureHandler>?
+}
diff --git a/node_modules/react-native-gesture-handler/android/svg/src/main/java/com/swmansion/gesturehandler/RNSVGHitTester.kt b/node_modules/react-native-gesture-handler/android/svg/src/main/java/com/swmansion/gesturehandler/RNSVGHitTester.kt
new file mode 100644
index 0000000..2a4f600
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/android/svg/src/main/java/com/swmansion/gesturehandler/RNSVGHitTester.kt
@@ -0,0 +1,65 @@
+package com.swmansion.gesturehandler
+
+import android.view.View
+import androidx.core.view.children
+import com.horcrux.svg.SvgView
+import com.horcrux.svg.VirtualView
+
+class RNSVGHitTester {
+  companion object {
+    private fun getRootSvgView(view: View): SvgView {
+      var rootSvgView: SvgView
+
+      rootSvgView = if (view is VirtualView) {
+        view.svgView!!
+      } else {
+        view as SvgView
+      }
+
+      while (isSvgElement(rootSvgView.parent)) {
+        rootSvgView = if (rootSvgView.parent is VirtualView) {
+          (rootSvgView.parent as VirtualView).svgView!!
+        } else {
+          rootSvgView.parent as SvgView
+        }
+      }
+
+      return rootSvgView
+    }
+
+    fun isSvgElement(view: Any): Boolean = (view is VirtualView || view is SvgView)
+
+    fun hitTest(view: View, posX: Float, posY: Float): Boolean {
+      val rootSvgView = getRootSvgView(view)
+      val viewLocation = intArrayOf(0, 0)
+      val rootLocation = intArrayOf(0, 0)
+
+      view.getLocationOnScreen(viewLocation)
+      rootSvgView.getLocationOnScreen(rootLocation)
+
+      // convert View-relative coordinates into SvgView-relative coordinates
+      val rootX = posX + viewLocation[0] - rootLocation[0]
+      val rootY = posY + viewLocation[1] - rootLocation[1]
+
+      val pressedId = rootSvgView.reactTagForTouch(rootX, rootY)
+      val hasBeenPressed = view.id == pressedId
+
+      // hitTest(view, ...) should only be called after isSvgElement(view) returns true
+      // Consequently, `view` will always be either SvgView or VirtualView
+
+      val pressIsInBounds =
+        posX in 0.0..view.width.toDouble() &&
+          posY in 0.0..view.height.toDouble()
+
+      if (view is SvgView) {
+        val childrenIds = view.children.map { it.id }
+
+        val hasChildBeenPressed = pressedId in childrenIds
+
+        return (hasBeenPressed || hasChildBeenPressed) && pressIsInBounds
+      }
+
+      return hasBeenPressed && pressIsInBounds
+    }
+  }
+}
diff --git a/node_modules/react-native-gesture-handler/lib/commonjs/components/Pressable/StateMachine.js b/node_modules/react-native-gesture-handler/lib/commonjs/components/Pressable/StateMachine.js
new file mode 100644
index 0000000..b3ddb06
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/commonjs/components/Pressable/StateMachine.js
@@ -0,0 +1,44 @@
+"use strict";
+
+Object.defineProperty(exports, "__esModule", {
+  value: true
+});
+exports.PressableStateMachine = void 0;
+class PressableStateMachine {
+  constructor() {
+    this.states = null;
+    this.currentStepIndex = 0;
+    this.eventPayload = null;
+  }
+  setStates(states) {
+    this.states = states;
+  }
+  reset() {
+    this.currentStepIndex = 0;
+    this.eventPayload = null;
+  }
+  handleEvent(eventName, eventPayload) {
+    if (!this.states) {
+      return;
+    }
+    const step = this.states[this.currentStepIndex];
+    this.eventPayload = eventPayload || this.eventPayload;
+    if (step.eventName !== eventName) {
+      if (this.currentStepIndex > 0) {
+        // retry with position at index 0
+        this.reset();
+        this.handleEvent(eventName, eventPayload);
+      }
+      return;
+    }
+    if (this.eventPayload && step.callback) {
+      step.callback(this.eventPayload);
+    }
+    this.currentStepIndex++;
+    if (this.currentStepIndex === this.states.length) {
+      this.reset();
+    }
+  }
+}
+exports.PressableStateMachine = PressableStateMachine;
+//# sourceMappingURL=StateMachine.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/commonjs/components/Pressable/StateMachine.js.map b/node_modules/react-native-gesture-handler/lib/commonjs/components/Pressable/StateMachine.js.map
new file mode 100644
index 0000000..6c33e0d
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/commonjs/components/Pressable/StateMachine.js.map
@@ -0,0 +1 @@
+{"version":3,"names":["PressableStateMachine","constructor","states","currentStepIndex","eventPayload","setStates","reset","handleEvent","eventName","step","callback","length","exports"],"sourceRoot":"../../../../src","sources":["components/Pressable/StateMachine.tsx"],"mappings":";;;;;;AAOA,MAAMA,qBAAqB,CAAC;EAK1BC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACC,MAAM,GAAG,IAAI;IAClB,IAAI,CAACC,gBAAgB,GAAG,CAAC;IACzB,IAAI,CAACC,YAAY,GAAG,IAAI;EAC1B;EAEOC,SAASA,CAACH,MAAyB,EAAE;IAC1C,IAAI,CAACA,MAAM,GAAGA,MAAM;EACtB;EAEOI,KAAKA,CAAA,EAAG;IACb,IAAI,CAACH,gBAAgB,GAAG,CAAC;IACzB,IAAI,CAACC,YAAY,GAAG,IAAI;EAC1B;EAEOG,WAAWA,CAACC,SAAiB,EAAEJ,YAA6B,EAAE;IACnE,IAAI,CAAC,IAAI,CAACF,MAAM,EAAE;MAChB;IACF;IAEA,MAAMO,IAAI,GAAG,IAAI,CAACP,MAAM,CAAC,IAAI,CAACC,gBAAgB,CAAC;IAC/C,IAAI,CAACC,YAAY,GAAGA,YAAY,IAAI,IAAI,CAACA,YAAY;IAErD,IAAIK,IAAI,CAACD,SAAS,KAAKA,SAAS,EAAE;MAChC,IAAI,IAAI,CAACL,gBAAgB,GAAG,CAAC,EAAE;QAC7B;QACA,IAAI,CAACG,KAAK,CAAC,CAAC;QACZ,IAAI,CAACC,WAAW,CAACC,SAAS,EAAEJ,YAAY,CAAC;MAC3C;MACA;IACF;IAEA,IAAI,IAAI,CAACA,YAAY,IAAIK,IAAI,CAACC,QAAQ,EAAE;MACtCD,IAAI,CAACC,QAAQ,CAAC,IAAI,CAACN,YAAY,CAAC;IAClC;IAEA,IAAI,CAACD,gBAAgB,EAAE;IAEvB,IAAI,IAAI,CAACA,gBAAgB,KAAK,IAAI,CAACD,MAAM,CAACS,MAAM,EAAE;MAChD,IAAI,CAACL,KAAK,CAAC,CAAC;IACd;EACF;AACF;AAACM,OAAA,CAAAZ,qBAAA,GAAAA,qBAAA","ignoreList":[]}
diff --git a/node_modules/react-native-gesture-handler/lib/commonjs/components/Pressable/stateDefinitions.js b/node_modules/react-native-gesture-handler/lib/commonjs/components/Pressable/stateDefinitions.js
new file mode 100644
index 0000000..19a264b
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/commonjs/components/Pressable/stateDefinitions.js
@@ -0,0 +1,87 @@
+"use strict";
+
+Object.defineProperty(exports, "__esModule", {
+  value: true
+});
+exports.StateMachineEvent = void 0;
+exports.getStatesConfig = getStatesConfig;
+var _reactNative = require("react-native");
+let StateMachineEvent = exports.StateMachineEvent = /*#__PURE__*/function (StateMachineEvent) {
+  StateMachineEvent["NATIVE_BEGIN"] = "nativeBegin";
+  StateMachineEvent["NATIVE_START"] = "nativeStart";
+  StateMachineEvent["FINALIZE"] = "finalize";
+  StateMachineEvent["LONG_PRESS_TOUCHES_DOWN"] = "longPressTouchesDown";
+  return StateMachineEvent;
+}({});
+function getAndroidStatesConfig(handlePressIn, handlePressOut) {
+  return [{
+    eventName: StateMachineEvent.NATIVE_BEGIN
+  }, {
+    eventName: StateMachineEvent.LONG_PRESS_TOUCHES_DOWN,
+    callback: handlePressIn
+  }, {
+    eventName: StateMachineEvent.FINALIZE,
+    callback: handlePressOut
+  }];
+}
+function getIosStatesConfig(handlePressIn, handlePressOut) {
+  return [{
+    eventName: StateMachineEvent.LONG_PRESS_TOUCHES_DOWN
+  }, {
+    eventName: StateMachineEvent.NATIVE_START,
+    callback: handlePressIn
+  }, {
+    eventName: StateMachineEvent.FINALIZE,
+    callback: handlePressOut
+  }];
+}
+function getWebStatesConfig(handlePressIn, handlePressOut) {
+  return [{
+    eventName: StateMachineEvent.NATIVE_BEGIN
+  }, {
+    eventName: StateMachineEvent.NATIVE_START
+  }, {
+    eventName: StateMachineEvent.LONG_PRESS_TOUCHES_DOWN,
+    callback: handlePressIn
+  }, {
+    eventName: StateMachineEvent.FINALIZE,
+    callback: handlePressOut
+  }];
+}
+function getMacosStatesConfig(handlePressIn, handlePressOut) {
+  return [{
+    eventName: StateMachineEvent.LONG_PRESS_TOUCHES_DOWN
+  }, {
+    eventName: StateMachineEvent.NATIVE_BEGIN,
+    callback: handlePressIn
+  }, {
+    eventName: StateMachineEvent.NATIVE_START
+  }, {
+    eventName: StateMachineEvent.FINALIZE,
+    callback: handlePressOut
+  }];
+}
+function getUniversalStatesConfig(handlePressIn, handlePressOut) {
+  return [{
+    eventName: StateMachineEvent.FINALIZE,
+    callback: event => {
+      handlePressIn(event);
+      handlePressOut(event);
+    }
+  }];
+}
+function getStatesConfig(handlePressIn, handlePressOut) {
+  if (_reactNative.Platform.OS === 'android') {
+    return getAndroidStatesConfig(handlePressIn, handlePressOut);
+  } else if (_reactNative.Platform.OS === 'ios') {
+    return getIosStatesConfig(handlePressIn, handlePressOut);
+  } else if (_reactNative.Platform.OS === 'web') {
+    return getWebStatesConfig(handlePressIn, handlePressOut);
+  } else if (_reactNative.Platform.OS === 'macos') {
+    return getMacosStatesConfig(handlePressIn, handlePressOut);
+  } else {
+    // Unknown platform - using minimal universal setup.
+    return getUniversalStatesConfig(handlePressIn, handlePressOut);
+  }
+}
+//# sourceMappingURL=stateDefinitions.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/commonjs/components/Pressable/stateDefinitions.js.map b/node_modules/react-native-gesture-handler/lib/commonjs/components/Pressable/stateDefinitions.js.map
new file mode 100644
index 0000000..71f999e
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/commonjs/components/Pressable/stateDefinitions.js.map
@@ -0,0 +1 @@
+{"version":3,"names":["_reactNative","require","StateMachineEvent","exports","getAndroidStatesConfig","handlePressIn","handlePressOut","eventName","NATIVE_BEGIN","LONG_PRESS_TOUCHES_DOWN","callback","FINALIZE","getIosStatesConfig","NATIVE_START","getWebStatesConfig","getMacosStatesConfig","getUniversalStatesConfig","event","getStatesConfig","Platform","OS"],"sourceRoot":"../../../../src","sources":["components/Pressable/stateDefinitions.ts"],"mappings":"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","ignoreList":[]}
diff --git a/node_modules/react-native-gesture-handler/lib/commonjs/components/ReanimatedSwipeable.js.map b/node_modules/react-native-gesture-handler/lib/commonjs/components/ReanimatedSwipeable.js.map
deleted file mode 100644
index 995f29b..0000000
--- a/node_modules/react-native-gesture-handler/lib/commonjs/components/ReanimatedSwipeable.js.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"sources":["ReanimatedSwipeable.tsx"],"names":["DRAG_TOSS","SwipeDirection","Swipeable","props","ref","defaultProps","friction","overshootFriction","dragOffset","enableTrackpadTwoFingerGesture","leftThreshold","rightThreshold","enabled","containerStyle","childrenContainerStyle","animationOptions","overshootLeft","overshootRight","testID","children","dragOffsetFromLeftEdge","dragOffsetFromRightEdge","onSwipeableOpenStartDrag","onSwipeableCloseStartDrag","onSwipeableWillOpen","onSwipeableWillClose","onSwipeableOpen","onSwipeableClose","renderLeftActions","renderRightActions","simultaneousWithExternalGesture","remainingProps","rowState","userDrag","appliedTranslation","rowWidth","leftWidth","rightWidth","showLeftProgress","showRightProgress","updateAnimatedEvent","shouldOvershootLeft","value","shouldOvershootRight","startOffset","offsetDrag","dispatchImmediateEvents","fromValue","toValue","RIGHT","LEFT","dispatchEndEvents","animateRow","velocityX","translationSpringConfig","mass","damping","stiffness","velocity","overshootClamping","reduceMotion","ReduceMotion","System","isClosing","moveToRight","usedWidth","progressSpringConfig","restDisplacementThreshold","restSpeedThreshold","frozenRowState","isFinished","progressTarget","Math","sign","max","leftLayoutRef","leftWrapperLayoutRef","rightLayoutRef","updateElementWidths","leftLayout","leftWrapperLayout","rightLayout","pageX","swipeableMethods","close","_WORKLET","openLeft","openRight","reset","onRowLayout","nativeEvent","layout","width","leftActionAnimation","opacity","leftElement","styles","leftActions","rightActionAnimation","rightElement","rightActions","handleRelease","event","translationX","leftThresholdProp","rightThresholdProp","dragStarted","tapGesture","tap","Gesture","Tap","shouldCancelWhenOutside","onStart","Array","isArray","panGesture","pan","Pan","activeOffsetX","onUpdate","direction","onEnd","onFinalize","animatedStyle","transform","translateX","pointerEvents","swipeableComponent","container","StyleSheet","create","overflow","absoluteFillObject","flexDirection","I18nManager","isRTL"],"mappings":"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","sourcesContent":["// Similarily to the DrawerLayout component this deserves to be put in a\n// separate repo. Although, keeping it here for the time being will allow us to\n// move faster and fix possible issues quicker\n\nimport React, {\n  ForwardedRef,\n  forwardRef,\n  useCallback,\n  useImperativeHandle,\n  useMemo,\n} from 'react';\nimport { GestureRef } from '../handlers/gestures/gesture';\nimport { GestureObjects as Gesture } from '../handlers/gestures/gestureObjects';\nimport { GestureDetector } from '../handlers/gestures/GestureDetector';\nimport {\n  GestureStateChangeEvent,\n  GestureUpdateEvent,\n} from '../handlers/gestureHandlerCommon';\nimport type { PanGestureHandlerProps } from '../handlers/PanGestureHandler';\nimport type { PanGestureHandlerEventPayload } from '../handlers/GestureHandlerEventPayload';\nimport Animated, {\n  ReduceMotion,\n  SharedValue,\n  interpolate,\n  measure,\n  runOnJS,\n  runOnUI,\n  useAnimatedRef,\n  useAnimatedStyle,\n  useSharedValue,\n  withSpring,\n} from 'react-native-reanimated';\nimport {\n  I18nManager,\n  LayoutChangeEvent,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nconst DRAG_TOSS = 0.05;\n\ntype SwipeableExcludes = Exclude<\n  keyof PanGestureHandlerProps,\n  'onGestureEvent' | 'onHandlerStateChange'\n>;\n\nenum SwipeDirection {\n  LEFT = 'left',\n  RIGHT = 'right',\n}\n\nexport interface SwipeableProps\n  extends Pick<PanGestureHandlerProps, SwipeableExcludes> {\n  /**\n   * Enables two-finger gestures on supported devices, for example iPads with\n   * trackpads. If not enabled the gesture will require click + drag, with\n   * `enableTrackpadTwoFingerGesture` swiping with two fingers will also trigger\n   * the gesture.\n   */\n  enableTrackpadTwoFingerGesture?: boolean;\n\n  /**\n   * Specifies how much the visual interaction will be delayed compared to the\n   * gesture distance. e.g. value of 1 will indicate that the swipeable panel\n   * should exactly follow the gesture, 2 means it is going to be two times\n   * \"slower\".\n   */\n  friction?: number;\n\n  /**\n   * Distance from the left edge at which released panel will animate to the\n   * open state (or the open panel will animate into the closed state). By\n   * default it's a half of the panel's width.\n   */\n  leftThreshold?: number;\n\n  /**\n   * Distance from the right edge at which released panel will animate to the\n   * open state (or the open panel will animate into the closed state). By\n   * default it's a half of the panel's width.\n   */\n  rightThreshold?: number;\n\n  /**\n   * Distance that the panel must be dragged from the left edge to be considered\n   * a swipe. The default value is 10.\n   */\n  dragOffsetFromLeftEdge?: number;\n\n  /**\n   * Distance that the panel must be dragged from the right edge to be considered\n   * a swipe. The default value is 10.\n   */\n  dragOffsetFromRightEdge?: number;\n\n  /**\n   * Value indicating if the swipeable panel can be pulled further than the left\n   * actions panel's width. It is set to true by default as long as the left\n   * panel render method is present.\n   */\n  overshootLeft?: boolean;\n\n  /**\n   * Value indicating if the swipeable panel can be pulled further than the\n   * right actions panel's width. It is set to true by default as long as the\n   * right panel render method is present.\n   */\n  overshootRight?: boolean;\n\n  /**\n   * Specifies how much the visual interaction will be delayed compared to the\n   * gesture distance at overshoot. Default value is 1, it mean no friction, for\n   * a native feel, try 8 or above.\n   */\n  overshootFriction?: number;\n\n  /**\n   * Called when action panel gets open (either right or left).\n   */\n  onSwipeableOpen?: (\n    direction: SwipeDirection.LEFT | SwipeDirection.RIGHT\n  ) => void;\n\n  /**\n   * Called when action panel is closed.\n   */\n  onSwipeableClose?: (\n    direction: SwipeDirection.LEFT | SwipeDirection.RIGHT\n  ) => void;\n\n  /**\n   * Called when action panel starts animating on open (either right or left).\n   */\n  onSwipeableWillOpen?: (\n    direction: SwipeDirection.LEFT | SwipeDirection.RIGHT\n  ) => void;\n\n  /**\n   * Called when action panel starts animating on close.\n   */\n  onSwipeableWillClose?: (\n    direction: SwipeDirection.LEFT | SwipeDirection.RIGHT\n  ) => void;\n\n  /**\n   * Called when action panel starts being shown on dragging to open.\n   */\n  onSwipeableOpenStartDrag?: (\n    direction: SwipeDirection.LEFT | SwipeDirection.RIGHT\n  ) => void;\n\n  /**\n   * Called when action panel starts being shown on dragging to close.\n   */\n  onSwipeableCloseStartDrag?: (\n    direction: SwipeDirection.LEFT | SwipeDirection.RIGHT\n  ) => void;\n\n  /**\n   * `progress`: Equals `0` when `swipeable` is closed, `1` when `swipeable` is opened.\n   *  - When the element overshoots it's opened position the value tends towards `Infinity`.\n   *  - Goes back to `1` when `swipeable` is released.\n   *\n   * `translation`: a horizontal offset of the `swipeable` relative to its closed position.\\\n   * `swipeableMethods`: provides an object exposing methods for controlling the `swipeable`.\n   *\n   * To support `rtl` flexbox layouts use `flexDirection` styling.\n   * */\n  renderLeftActions?: (\n    progress: SharedValue<number>,\n    translation: SharedValue<number>,\n    swipeableMethods: SwipeableMethods\n  ) => React.ReactNode;\n\n  /**\n   * `progress`: Equals `0` when `swipeable` is closed, `1` when `swipeable` is opened.\n   *  - When the element overshoots it's opened position the value tends towards `Infinity`.\n   *  - Goes back to `1` when `swipeable` is released.\n   *\n   * `translation`: a horizontal offset of the `swipeable` relative to its closed position.\\\n   * `swipeableMethods`: provides an object exposing methods for controlling the `swipeable`.\n   *\n   * To support `rtl` flexbox layouts use `flexDirection` styling.\n   * */\n  renderRightActions?: (\n    progress: SharedValue<number>,\n    translation: SharedValue<number>,\n    swipeableMethods: SwipeableMethods\n  ) => React.ReactNode;\n\n  animationOptions?: Record<string, unknown>;\n\n  /**\n   * Style object for the container (`Animated.View`), for example to override\n   * `overflow: 'hidden'`.\n   */\n  containerStyle?: StyleProp<ViewStyle>;\n\n  /**\n   * Style object for the children container (`Animated.View`), for example to\n   * apply `flex: 1`\n   */\n  childrenContainerStyle?: StyleProp<ViewStyle>;\n\n  /**\n   * A gesture object or an array of gesture objects containing the configuration and callbacks to be\n   * used with the swipeable's gesture handler.\n   */\n  simultaneousWithExternalGesture?:\n    | Exclude<GestureRef, number>\n    | Exclude<GestureRef, number>[];\n}\n\nexport interface SwipeableMethods {\n  close: () => void;\n  openLeft: () => void;\n  openRight: () => void;\n  reset: () => void;\n}\n\nconst Swipeable = forwardRef<SwipeableMethods, SwipeableProps>(\n  function Swipeable(\n    props: SwipeableProps,\n    ref: ForwardedRef<SwipeableMethods>\n  ) {\n    const defaultProps = {\n      friction: 1,\n      overshootFriction: 1,\n      dragOffset: 10,\n      enableTrackpadTwoFingerGesture: false,\n    };\n\n    const {\n      leftThreshold,\n      rightThreshold,\n      enabled,\n      containerStyle,\n      childrenContainerStyle,\n      animationOptions,\n      overshootLeft,\n      overshootRight,\n      testID,\n      children,\n      enableTrackpadTwoFingerGesture = defaultProps.enableTrackpadTwoFingerGesture,\n      dragOffsetFromLeftEdge = defaultProps.dragOffset,\n      dragOffsetFromRightEdge = defaultProps.dragOffset,\n      friction = defaultProps.friction,\n      overshootFriction = defaultProps.overshootFriction,\n      onSwipeableOpenStartDrag,\n      onSwipeableCloseStartDrag,\n      onSwipeableWillOpen,\n      onSwipeableWillClose,\n      onSwipeableOpen,\n      onSwipeableClose,\n      renderLeftActions,\n      renderRightActions,\n      simultaneousWithExternalGesture,\n      ...remainingProps\n    } = props;\n\n    const rowState = useSharedValue<number>(0);\n\n    const userDrag = useSharedValue<number>(0);\n\n    const appliedTranslation = useSharedValue<number>(0);\n\n    const rowWidth = useSharedValue<number>(0);\n    const leftWidth = useSharedValue<number>(0);\n    const rightWidth = useSharedValue<number>(0);\n\n    const showLeftProgress = useSharedValue<number>(0);\n    const showRightProgress = useSharedValue<number>(0);\n\n    const updateAnimatedEvent = useCallback(() => {\n      'worklet';\n\n      const shouldOvershootLeft = overshootLeft ?? leftWidth.value > 0;\n      const shouldOvershootRight = overshootRight ?? rightWidth.value > 0;\n\n      const startOffset =\n        rowState.value === 1\n          ? leftWidth.value\n          : rowState.value === -1\n            ? -rightWidth.value\n            : 0;\n\n      const offsetDrag = userDrag.value / friction + startOffset;\n\n      appliedTranslation.value = interpolate(\n        offsetDrag,\n        [\n          -rightWidth.value - 1,\n          -rightWidth.value,\n          leftWidth.value,\n          leftWidth.value + 1,\n        ],\n        [\n          -rightWidth.value -\n            (shouldOvershootRight ? 1 / overshootFriction : 0),\n          -rightWidth.value,\n          leftWidth.value,\n          leftWidth.value + (shouldOvershootLeft ? 1 / overshootFriction : 0),\n        ]\n      );\n\n      showLeftProgress.value =\n        leftWidth.value > 0\n          ? interpolate(\n              appliedTranslation.value,\n              [-1, 0, leftWidth.value],\n              [0, 0, 1]\n            )\n          : 0;\n\n      showRightProgress.value =\n        rightWidth.value > 0\n          ? interpolate(\n              appliedTranslation.value,\n              [-rightWidth.value, 0, 1],\n              [1, 0, 0]\n            )\n          : 0;\n    }, [\n      appliedTranslation,\n      friction,\n      leftWidth,\n      overshootFriction,\n      rightWidth,\n      rowState,\n      showLeftProgress,\n      showRightProgress,\n      userDrag,\n      overshootLeft,\n      overshootRight,\n    ]);\n\n    const dispatchImmediateEvents = useCallback(\n      (fromValue: number, toValue: number) => {\n        'worklet';\n        if (toValue > 0 && onSwipeableWillOpen) {\n          runOnJS(onSwipeableWillOpen)(SwipeDirection.RIGHT);\n        } else if (toValue < 0 && onSwipeableWillOpen) {\n          runOnJS(onSwipeableWillOpen)(SwipeDirection.LEFT);\n        } else if (onSwipeableWillClose) {\n          runOnJS(onSwipeableWillClose)(\n            fromValue > 0 ? SwipeDirection.LEFT : SwipeDirection.RIGHT\n          );\n        }\n      },\n      [onSwipeableWillClose, onSwipeableWillOpen]\n    );\n\n    const dispatchEndEvents = useCallback(\n      (fromValue: number, toValue: number) => {\n        'worklet';\n        if (toValue > 0 && onSwipeableOpen) {\n          runOnJS(onSwipeableOpen)(SwipeDirection.RIGHT);\n        } else if (toValue < 0 && onSwipeableOpen) {\n          runOnJS(onSwipeableOpen)(SwipeDirection.LEFT);\n        } else if (onSwipeableClose) {\n          runOnJS(onSwipeableClose)(\n            fromValue > 0 ? SwipeDirection.LEFT : SwipeDirection.RIGHT\n          );\n        }\n      },\n      [onSwipeableClose, onSwipeableOpen]\n    );\n\n    const animateRow: (toValue: number, velocityX?: number) => void =\n      useCallback(\n        (toValue: number, velocityX?: number) => {\n          'worklet';\n\n          const translationSpringConfig = {\n            mass: 2,\n            damping: 1000,\n            stiffness: 700,\n            velocity: velocityX,\n            overshootClamping: true,\n            reduceMotion: ReduceMotion.System,\n            ...animationOptions,\n          };\n\n          const isClosing = toValue === 0;\n          const moveToRight = isClosing ? rowState.value < 0 : toValue > 0;\n\n          const usedWidth = isClosing\n            ? moveToRight\n              ? rightWidth.value\n              : leftWidth.value\n            : moveToRight\n              ? leftWidth.value\n              : rightWidth.value;\n\n          const progressSpringConfig = {\n            ...translationSpringConfig,\n            restDisplacementThreshold: 0.01,\n            restSpeedThreshold: 0.01,\n            velocity:\n              velocityX &&\n              interpolate(velocityX, [-usedWidth, usedWidth], [-1, 1]),\n          };\n\n          const frozenRowState = rowState.value;\n\n          appliedTranslation.value = withSpring(\n            toValue,\n            translationSpringConfig,\n            (isFinished) => {\n              if (isFinished) {\n                dispatchEndEvents(frozenRowState, toValue);\n              }\n            }\n          );\n\n          const progressTarget = toValue === 0 ? 0 : 1 * Math.sign(toValue);\n\n          showLeftProgress.value = withSpring(\n            Math.max(progressTarget, 0),\n            progressSpringConfig\n          );\n\n          showRightProgress.value = withSpring(\n            Math.max(-progressTarget, 0),\n            progressSpringConfig\n          );\n\n          dispatchImmediateEvents(frozenRowState, toValue);\n\n          rowState.value = Math.sign(toValue);\n        },\n        [\n          rowState,\n          animationOptions,\n          appliedTranslation,\n          showLeftProgress,\n          leftWidth,\n          showRightProgress,\n          rightWidth,\n          dispatchImmediateEvents,\n          dispatchEndEvents,\n        ]\n      );\n\n    const leftLayoutRef = useAnimatedRef();\n    const leftWrapperLayoutRef = useAnimatedRef();\n    const rightLayoutRef = useAnimatedRef();\n\n    const updateElementWidths = useCallback(() => {\n      'worklet';\n      const leftLayout = measure(leftLayoutRef);\n      const leftWrapperLayout = measure(leftWrapperLayoutRef);\n      const rightLayout = measure(rightLayoutRef);\n      leftWidth.value =\n        (leftLayout?.pageX ?? 0) - (leftWrapperLayout?.pageX ?? 0);\n\n      rightWidth.value =\n        rowWidth.value -\n        (rightLayout?.pageX ?? rowWidth.value) +\n        (leftWrapperLayout?.pageX ?? 0);\n    }, [\n      leftLayoutRef,\n      leftWrapperLayoutRef,\n      rightLayoutRef,\n      leftWidth,\n      rightWidth,\n      rowWidth,\n    ]);\n\n    const swipeableMethods = useMemo<SwipeableMethods>(\n      () => ({\n        close() {\n          'worklet';\n          if (_WORKLET) {\n            animateRow(0);\n            return;\n          }\n          runOnUI(() => {\n            animateRow(0);\n          })();\n        },\n        openLeft() {\n          'worklet';\n          if (_WORKLET) {\n            updateElementWidths();\n            animateRow(leftWidth.value);\n            return;\n          }\n          runOnUI(() => {\n            updateElementWidths();\n            animateRow(leftWidth.value);\n          })();\n        },\n        openRight() {\n          'worklet';\n          if (_WORKLET) {\n            updateElementWidths();\n            animateRow(-rightWidth.value);\n            return;\n          }\n          runOnUI(() => {\n            updateElementWidths();\n            animateRow(-rightWidth.value);\n          })();\n        },\n        reset() {\n          'worklet';\n          userDrag.value = 0;\n          showLeftProgress.value = 0;\n          appliedTranslation.value = 0;\n          rowState.value = 0;\n        },\n      }),\n      [\n        animateRow,\n        updateElementWidths,\n        leftWidth,\n        rightWidth,\n        userDrag,\n        showLeftProgress,\n        appliedTranslation,\n        rowState,\n      ]\n    );\n\n    const onRowLayout = useCallback(\n      ({ nativeEvent }: LayoutChangeEvent) => {\n        rowWidth.value = nativeEvent.layout.width;\n      },\n      [rowWidth]\n    );\n\n    // As stated in `Dimensions.get` docstring, this function should be called on every render\n    // since dimensions may change (e.g. orientation change)\n\n    const leftActionAnimation = useAnimatedStyle(() => {\n      return {\n        opacity: showLeftProgress.value === 0 ? 0 : 1,\n      };\n    });\n\n    const leftElement = useCallback(\n      () => (\n        <Animated.View\n          ref={leftWrapperLayoutRef}\n          style={[styles.leftActions, leftActionAnimation]}>\n          {renderLeftActions?.(\n            showLeftProgress,\n            appliedTranslation,\n            swipeableMethods\n          )}\n          <Animated.View ref={leftLayoutRef} />\n        </Animated.View>\n      ),\n      [\n        appliedTranslation,\n        leftActionAnimation,\n        leftLayoutRef,\n        leftWrapperLayoutRef,\n        renderLeftActions,\n        showLeftProgress,\n        swipeableMethods,\n      ]\n    );\n\n    const rightActionAnimation = useAnimatedStyle(() => {\n      return {\n        opacity: showRightProgress.value === 0 ? 0 : 1,\n      };\n    });\n\n    const rightElement = useCallback(\n      () => (\n        <Animated.View style={[styles.rightActions, rightActionAnimation]}>\n          {renderRightActions?.(\n            showRightProgress,\n            appliedTranslation,\n            swipeableMethods\n          )}\n          <Animated.View ref={rightLayoutRef} />\n        </Animated.View>\n      ),\n      [\n        appliedTranslation,\n        renderRightActions,\n        rightActionAnimation,\n        rightLayoutRef,\n        showRightProgress,\n        swipeableMethods,\n      ]\n    );\n\n    const handleRelease = useCallback(\n      (event: GestureStateChangeEvent<PanGestureHandlerEventPayload>) => {\n        'worklet';\n        const { velocityX } = event;\n        userDrag.value = event.translationX;\n\n        const leftThresholdProp = leftThreshold ?? leftWidth.value / 2;\n        const rightThresholdProp = rightThreshold ?? rightWidth.value / 2;\n\n        const translationX =\n          (userDrag.value + DRAG_TOSS * velocityX) / friction;\n\n        let toValue = 0;\n\n        if (rowState.value === 0) {\n          if (translationX > leftThresholdProp) {\n            toValue = leftWidth.value;\n          } else if (translationX < -rightThresholdProp) {\n            toValue = -rightWidth.value;\n          }\n        } else if (rowState.value === 1) {\n          // Swiped to left\n          if (translationX > -leftThresholdProp) {\n            toValue = leftWidth.value;\n          }\n        } else {\n          // Swiped to right\n          if (translationX < rightThresholdProp) {\n            toValue = -rightWidth.value;\n          }\n        }\n\n        animateRow(toValue, velocityX / friction);\n      },\n      [\n        animateRow,\n        friction,\n        leftThreshold,\n        leftWidth,\n        rightThreshold,\n        rightWidth,\n        rowState,\n        userDrag,\n      ]\n    );\n\n    const close = useCallback(() => {\n      'worklet';\n      animateRow(0);\n    }, [animateRow]);\n\n    const dragStarted = useSharedValue<boolean>(false);\n\n    const tapGesture = useMemo(() => {\n      const tap = Gesture.Tap()\n        .shouldCancelWhenOutside(true)\n        .onStart(() => {\n          if (rowState.value !== 0) {\n            close();\n          }\n        });\n\n      if (!simultaneousWithExternalGesture) {\n        return tap;\n      }\n\n      if (Array.isArray(simultaneousWithExternalGesture)) {\n        tap.simultaneousWithExternalGesture(...simultaneousWithExternalGesture);\n      } else {\n        tap.simultaneousWithExternalGesture(simultaneousWithExternalGesture);\n      }\n\n      return tap;\n    }, [close, rowState, simultaneousWithExternalGesture]);\n\n    const panGesture = useMemo(() => {\n      const pan = Gesture.Pan()\n        .enabled(enabled !== false)\n        .enableTrackpadTwoFingerGesture(enableTrackpadTwoFingerGesture)\n        .activeOffsetX([-dragOffsetFromRightEdge, dragOffsetFromLeftEdge])\n        .onStart(updateElementWidths)\n        .onUpdate(\n          (event: GestureUpdateEvent<PanGestureHandlerEventPayload>) => {\n            userDrag.value = event.translationX;\n\n            const direction =\n              rowState.value === -1\n                ? SwipeDirection.RIGHT\n                : rowState.value === 1\n                  ? SwipeDirection.LEFT\n                  : event.translationX > 0\n                    ? SwipeDirection.RIGHT\n                    : SwipeDirection.LEFT;\n\n            if (!dragStarted.value) {\n              dragStarted.value = true;\n              if (rowState.value === 0 && onSwipeableOpenStartDrag) {\n                runOnJS(onSwipeableOpenStartDrag)(direction);\n              } else if (onSwipeableCloseStartDrag) {\n                runOnJS(onSwipeableCloseStartDrag)(direction);\n              }\n            }\n\n            updateAnimatedEvent();\n          }\n        )\n        .onEnd(\n          (event: GestureStateChangeEvent<PanGestureHandlerEventPayload>) => {\n            handleRelease(event);\n          }\n        )\n        .onFinalize(() => {\n          dragStarted.value = false;\n        });\n\n      if (!simultaneousWithExternalGesture) {\n        return pan;\n      }\n\n      if (Array.isArray(simultaneousWithExternalGesture)) {\n        pan.simultaneousWithExternalGesture(...simultaneousWithExternalGesture);\n      } else {\n        pan.simultaneousWithExternalGesture(simultaneousWithExternalGesture);\n      }\n\n      return pan;\n    }, [\n      dragOffsetFromLeftEdge,\n      dragOffsetFromRightEdge,\n      dragStarted,\n      enableTrackpadTwoFingerGesture,\n      enabled,\n      handleRelease,\n      onSwipeableCloseStartDrag,\n      onSwipeableOpenStartDrag,\n      rowState,\n      updateAnimatedEvent,\n      updateElementWidths,\n      userDrag,\n      simultaneousWithExternalGesture,\n    ]);\n\n    useImperativeHandle(ref, () => swipeableMethods, [swipeableMethods]);\n\n    const animatedStyle = useAnimatedStyle(\n      () => ({\n        transform: [{ translateX: appliedTranslation.value }],\n        pointerEvents: rowState.value === 0 ? 'auto' : 'box-only',\n      }),\n      [appliedTranslation, rowState]\n    );\n\n    const swipeableComponent = (\n      <GestureDetector gesture={panGesture} touchAction=\"pan-y\">\n        <Animated.View\n          {...remainingProps}\n          onLayout={onRowLayout}\n          style={[styles.container, containerStyle]}>\n          {leftElement()}\n          {rightElement()}\n          <GestureDetector gesture={tapGesture} touchAction=\"pan-y\">\n            <Animated.View style={[animatedStyle, childrenContainerStyle]}>\n              {children}\n            </Animated.View>\n          </GestureDetector>\n        </Animated.View>\n      </GestureDetector>\n    );\n\n    return testID ? (\n      <View testID={testID}>{swipeableComponent}</View>\n    ) : (\n      swipeableComponent\n    );\n  }\n);\n\nexport default Swipeable;\nexport type SwipeableRef = ForwardedRef<SwipeableMethods>;\n\nconst styles = StyleSheet.create({\n  container: {\n    overflow: 'hidden',\n  },\n  leftActions: {\n    ...StyleSheet.absoluteFillObject,\n    flexDirection: I18nManager.isRTL ? 'row-reverse' : 'row',\n    overflow: 'hidden',\n  },\n  rightActions: {\n    ...StyleSheet.absoluteFillObject,\n    flexDirection: I18nManager.isRTL ? 'row' : 'row-reverse',\n    overflow: 'hidden',\n  },\n});\n"]}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/commonjs/components/ReanimatedSwipeable.js b/node_modules/react-native-gesture-handler/lib/commonjs/components/ReanimatedSwipeable/ReanimatedSwipeable.js
similarity index 54%
rename from node_modules/react-native-gesture-handler/lib/commonjs/components/ReanimatedSwipeable.js
rename to node_modules/react-native-gesture-handler/lib/commonjs/components/ReanimatedSwipeable/ReanimatedSwipeable.js
index f4ec7af..053051f 100644
--- a/node_modules/react-native-gesture-handler/lib/commonjs/components/ReanimatedSwipeable.js
+++ b/node_modules/react-native-gesture-handler/lib/commonjs/components/ReanimatedSwipeable/ReanimatedSwipeable.js
@@ -4,39 +4,23 @@ Object.defineProperty(exports, "__esModule", {
   value: true
 });
 exports.default = void 0;
-
-var _react = _interopRequireWildcard(require("react"));
-
-var _gestureObjects = require("../handlers/gestures/gestureObjects");
-
-var _GestureDetector = require("../handlers/gestures/GestureDetector");
-
-var _reactNativeReanimated = _interopRequireWildcard(require("react-native-reanimated"));
-
+var _react = require("react");
 var _reactNative = require("react-native");
-
-function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }
-
-function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
-
-function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
-
+var _reactNativeReanimated = _interopRequireWildcard(require("react-native-reanimated"));
+var _ = require(".");
+var _2 = require("../..");
+var _GestureDetector = require("../../handlers/gestures/GestureDetector");
+var _utils = require("../utils");
+var _jsxRuntime = require("react/jsx-runtime");
+function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) "default" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }
 const DRAG_TOSS = 0.05;
-var SwipeDirection;
-
-(function (SwipeDirection) {
-  SwipeDirection["LEFT"] = "left";
-  SwipeDirection["RIGHT"] = "right";
-})(SwipeDirection || (SwipeDirection = {}));
-
-const Swipeable = /*#__PURE__*/(0, _react.forwardRef)(function Swipeable(props, ref) {
-  const defaultProps = {
-    friction: 1,
-    overshootFriction: 1,
-    dragOffset: 10,
-    enableTrackpadTwoFingerGesture: false
-  };
+const DEFAULT_FRICTION = 1;
+const DEFAULT_OVERSHOOT_FRICTION = 1;
+const DEFAULT_DRAG_OFFSET = 10;
+const DEFAULT_ENABLE_TRACKING_TWO_FINGER_GESTURE = false;
+const Swipeable = props => {
   const {
+    ref,
     leftThreshold,
     rightThreshold,
     enabled,
@@ -47,11 +31,11 @@ const Swipeable = /*#__PURE__*/(0, _react.forwardRef)(function Swipeable(props,
     overshootRight,
     testID,
     children,
-    enableTrackpadTwoFingerGesture = defaultProps.enableTrackpadTwoFingerGesture,
-    dragOffsetFromLeftEdge = defaultProps.dragOffset,
-    dragOffsetFromRightEdge = defaultProps.dragOffset,
-    friction = defaultProps.friction,
-    overshootFriction = defaultProps.overshootFriction,
+    enableTrackpadTwoFingerGesture = DEFAULT_ENABLE_TRACKING_TWO_FINGER_GESTURE,
+    dragOffsetFromLeftEdge = DEFAULT_DRAG_OFFSET,
+    dragOffsetFromRightEdge = DEFAULT_DRAG_OFFSET,
+    friction = DEFAULT_FRICTION,
+    overshootFriction = DEFAULT_OVERSHOOT_FRICTION,
     onSwipeableOpenStartDrag,
     onSwipeableCloseStartDrag,
     onSwipeableWillOpen,
@@ -61,8 +45,16 @@ const Swipeable = /*#__PURE__*/(0, _react.forwardRef)(function Swipeable(props,
     renderLeftActions,
     renderRightActions,
     simultaneousWithExternalGesture,
+    requireExternalGestureToFail,
+    blocksExternalGesture,
+    hitSlop,
     ...remainingProps
   } = props;
+  const relationProps = (0, _react.useMemo)(() => ({
+    simultaneousWithExternalGesture,
+    requireExternalGestureToFail,
+    blocksExternalGesture
+  }), [blocksExternalGesture, requireExternalGestureToFail, simultaneousWithExternalGesture]);
   const rowState = (0, _reactNativeReanimated.useSharedValue)(0);
   const userDrag = (0, _reactNativeReanimated.useSharedValue)(0);
   const appliedTranslation = (0, _reactNativeReanimated.useSharedValue)(0);
@@ -74,8 +66,8 @@ const Swipeable = /*#__PURE__*/(0, _react.forwardRef)(function Swipeable(props,
   const updateAnimatedEvent = (0, _react.useCallback)(() => {
     'worklet';
 
-    const shouldOvershootLeft = overshootLeft !== null && overshootLeft !== void 0 ? overshootLeft : leftWidth.value > 0;
-    const shouldOvershootRight = overshootRight !== null && overshootRight !== void 0 ? overshootRight : rightWidth.value > 0;
+    const shouldOvershootLeft = overshootLeft ?? leftWidth.value > 0;
+    const shouldOvershootRight = overshootRight ?? rightWidth.value > 0;
     const startOffset = rowState.value === 1 ? leftWidth.value : rowState.value === -1 ? -rightWidth.value : 0;
     const offsetDrag = userDrag.value / friction + startOffset;
     appliedTranslation.value = (0, _reactNativeReanimated.interpolate)(offsetDrag, [-rightWidth.value - 1, -rightWidth.value, leftWidth.value, leftWidth.value + 1], [-rightWidth.value - (shouldOvershootRight ? 1 / overshootFriction : 0), -rightWidth.value, leftWidth.value, leftWidth.value + (shouldOvershootLeft ? 1 / overshootFriction : 0)]);
@@ -85,23 +77,21 @@ const Swipeable = /*#__PURE__*/(0, _react.forwardRef)(function Swipeable(props,
   const dispatchImmediateEvents = (0, _react.useCallback)((fromValue, toValue) => {
     'worklet';
 
-    if (toValue > 0 && onSwipeableWillOpen) {
-      (0, _reactNativeReanimated.runOnJS)(onSwipeableWillOpen)(SwipeDirection.RIGHT);
-    } else if (toValue < 0 && onSwipeableWillOpen) {
-      (0, _reactNativeReanimated.runOnJS)(onSwipeableWillOpen)(SwipeDirection.LEFT);
-    } else if (onSwipeableWillClose) {
-      (0, _reactNativeReanimated.runOnJS)(onSwipeableWillClose)(fromValue > 0 ? SwipeDirection.LEFT : SwipeDirection.RIGHT);
+    if (onSwipeableWillOpen && toValue !== 0) {
+      (0, _reactNativeReanimated.runOnJS)(onSwipeableWillOpen)(toValue > 0 ? _.SwipeDirection.RIGHT : _.SwipeDirection.LEFT);
+    }
+    if (onSwipeableWillClose && toValue === 0) {
+      (0, _reactNativeReanimated.runOnJS)(onSwipeableWillClose)(fromValue > 0 ? _.SwipeDirection.LEFT : _.SwipeDirection.RIGHT);
     }
   }, [onSwipeableWillClose, onSwipeableWillOpen]);
   const dispatchEndEvents = (0, _react.useCallback)((fromValue, toValue) => {
     'worklet';
 
-    if (toValue > 0 && onSwipeableOpen) {
-      (0, _reactNativeReanimated.runOnJS)(onSwipeableOpen)(SwipeDirection.RIGHT);
-    } else if (toValue < 0 && onSwipeableOpen) {
-      (0, _reactNativeReanimated.runOnJS)(onSwipeableOpen)(SwipeDirection.LEFT);
-    } else if (onSwipeableClose) {
-      (0, _reactNativeReanimated.runOnJS)(onSwipeableClose)(fromValue > 0 ? SwipeDirection.LEFT : SwipeDirection.RIGHT);
+    if (onSwipeableOpen && toValue !== 0) {
+      (0, _reactNativeReanimated.runOnJS)(onSwipeableOpen)(toValue > 0 ? _.SwipeDirection.RIGHT : _.SwipeDirection.LEFT);
+    }
+    if (onSwipeableClose && toValue === 0) {
+      (0, _reactNativeReanimated.runOnJS)(onSwipeableClose)(fromValue > 0 ? _.SwipeDirection.LEFT : _.SwipeDirection.RIGHT);
     }
   }, [onSwipeableClose, onSwipeableOpen]);
   const animateRow = (0, _react.useCallback)((toValue, velocityX) => {
@@ -119,7 +109,8 @@ const Swipeable = /*#__PURE__*/(0, _react.forwardRef)(function Swipeable(props,
     const isClosing = toValue === 0;
     const moveToRight = isClosing ? rowState.value < 0 : toValue > 0;
     const usedWidth = isClosing ? moveToRight ? rightWidth.value : leftWidth.value : moveToRight ? leftWidth.value : rightWidth.value;
-    const progressSpringConfig = { ...translationSpringConfig,
+    const progressSpringConfig = {
+      ...translationSpringConfig,
       restDisplacementThreshold: 0.01,
       restSpeedThreshold: 0.01,
       velocity: velocityX && (0, _reactNativeReanimated.interpolate)(velocityX, [-usedWidth, usedWidth], [-1, 1])
@@ -142,13 +133,11 @@ const Swipeable = /*#__PURE__*/(0, _react.forwardRef)(function Swipeable(props,
   const updateElementWidths = (0, _react.useCallback)(() => {
     'worklet';
 
-    var _leftLayout$pageX, _leftWrapperLayout$pa, _rightLayout$pageX, _leftWrapperLayout$pa2;
-
     const leftLayout = (0, _reactNativeReanimated.measure)(leftLayoutRef);
     const leftWrapperLayout = (0, _reactNativeReanimated.measure)(leftWrapperLayoutRef);
     const rightLayout = (0, _reactNativeReanimated.measure)(rightLayoutRef);
-    leftWidth.value = ((_leftLayout$pageX = leftLayout === null || leftLayout === void 0 ? void 0 : leftLayout.pageX) !== null && _leftLayout$pageX !== void 0 ? _leftLayout$pageX : 0) - ((_leftWrapperLayout$pa = leftWrapperLayout === null || leftWrapperLayout === void 0 ? void 0 : leftWrapperLayout.pageX) !== null && _leftWrapperLayout$pa !== void 0 ? _leftWrapperLayout$pa : 0);
-    rightWidth.value = rowWidth.value - ((_rightLayout$pageX = rightLayout === null || rightLayout === void 0 ? void 0 : rightLayout.pageX) !== null && _rightLayout$pageX !== void 0 ? _rightLayout$pageX : rowWidth.value) + ((_leftWrapperLayout$pa2 = leftWrapperLayout === null || leftWrapperLayout === void 0 ? void 0 : leftWrapperLayout.pageX) !== null && _leftWrapperLayout$pa2 !== void 0 ? _leftWrapperLayout$pa2 : 0);
+    leftWidth.value = (leftLayout?.pageX ?? 0) - (leftWrapperLayout?.pageX ?? 0);
+    rightWidth.value = rowWidth.value - (rightLayout?.pageX ?? rowWidth.value) + (leftWrapperLayout?.pageX ?? 0);
   }, [leftLayoutRef, leftWrapperLayoutRef, rightLayoutRef, leftWidth, rightWidth, rowWidth]);
   const swipeableMethods = (0, _react.useMemo)(() => ({
     close() {
@@ -158,12 +147,10 @@ const Swipeable = /*#__PURE__*/(0, _react.forwardRef)(function Swipeable(props,
         animateRow(0);
         return;
       }
-
       (0, _reactNativeReanimated.runOnUI)(() => {
         animateRow(0);
       })();
     },
-
     openLeft() {
       'worklet';
 
@@ -172,13 +159,11 @@ const Swipeable = /*#__PURE__*/(0, _react.forwardRef)(function Swipeable(props,
         animateRow(leftWidth.value);
         return;
       }
-
       (0, _reactNativeReanimated.runOnUI)(() => {
         updateElementWidths();
         animateRow(leftWidth.value);
       })();
     },
-
     openRight() {
       'worklet';
 
@@ -187,13 +172,11 @@ const Swipeable = /*#__PURE__*/(0, _react.forwardRef)(function Swipeable(props,
         animateRow(-rightWidth.value);
         return;
       }
-
       (0, _reactNativeReanimated.runOnUI)(() => {
         updateElementWidths();
         animateRow(-rightWidth.value);
       })();
     },
-
     reset() {
       'worklet';
 
@@ -202,13 +185,14 @@ const Swipeable = /*#__PURE__*/(0, _react.forwardRef)(function Swipeable(props,
       appliedTranslation.value = 0;
       rowState.value = 0;
     }
-
   }), [animateRow, updateElementWidths, leftWidth, rightWidth, userDrag, showLeftProgress, appliedTranslation, rowState]);
   const onRowLayout = (0, _react.useCallback)(({
     nativeEvent
   }) => {
     rowWidth.value = nativeEvent.layout.width;
-  }, [rowWidth]); // As stated in `Dimensions.get` docstring, this function should be called on every render
+  }, [rowWidth]);
+
+  // As stated in `Dimensions.get` docstring, this function should be called on every render
   // since dimensions may change (e.g. orientation change)
 
   const leftActionAnimation = (0, _reactNativeReanimated.useAnimatedStyle)(() => {
@@ -216,22 +200,24 @@ const Swipeable = /*#__PURE__*/(0, _react.forwardRef)(function Swipeable(props,
       opacity: showLeftProgress.value === 0 ? 0 : 1
     };
   });
-  const leftElement = (0, _react.useCallback)(() => /*#__PURE__*/_react.default.createElement(_reactNativeReanimated.default.View, {
+  const leftElement = (0, _react.useCallback)(() => /*#__PURE__*/(0, _jsxRuntime.jsxs)(_reactNativeReanimated.default.View, {
     ref: leftWrapperLayoutRef,
-    style: [styles.leftActions, leftActionAnimation]
-  }, renderLeftActions === null || renderLeftActions === void 0 ? void 0 : renderLeftActions(showLeftProgress, appliedTranslation, swipeableMethods), /*#__PURE__*/_react.default.createElement(_reactNativeReanimated.default.View, {
-    ref: leftLayoutRef
-  })), [appliedTranslation, leftActionAnimation, leftLayoutRef, leftWrapperLayoutRef, renderLeftActions, showLeftProgress, swipeableMethods]);
+    style: [styles.leftActions, leftActionAnimation],
+    children: [renderLeftActions?.(showLeftProgress, appliedTranslation, swipeableMethods), /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactNativeReanimated.default.View, {
+      ref: leftLayoutRef
+    })]
+  }), [appliedTranslation, leftActionAnimation, leftLayoutRef, leftWrapperLayoutRef, renderLeftActions, showLeftProgress, swipeableMethods]);
   const rightActionAnimation = (0, _reactNativeReanimated.useAnimatedStyle)(() => {
     return {
       opacity: showRightProgress.value === 0 ? 0 : 1
     };
   });
-  const rightElement = (0, _react.useCallback)(() => /*#__PURE__*/_react.default.createElement(_reactNativeReanimated.default.View, {
-    style: [styles.rightActions, rightActionAnimation]
-  }, renderRightActions === null || renderRightActions === void 0 ? void 0 : renderRightActions(showRightProgress, appliedTranslation, swipeableMethods), /*#__PURE__*/_react.default.createElement(_reactNativeReanimated.default.View, {
-    ref: rightLayoutRef
-  })), [appliedTranslation, renderRightActions, rightActionAnimation, rightLayoutRef, showRightProgress, swipeableMethods]);
+  const rightElement = (0, _react.useCallback)(() => /*#__PURE__*/(0, _jsxRuntime.jsxs)(_reactNativeReanimated.default.View, {
+    style: [styles.rightActions, rightActionAnimation],
+    children: [renderRightActions?.(showRightProgress, appliedTranslation, swipeableMethods), /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactNativeReanimated.default.View, {
+      ref: rightLayoutRef
+    })]
+  }), [appliedTranslation, renderRightActions, rightActionAnimation, rightLayoutRef, showRightProgress, swipeableMethods]);
   const handleRelease = (0, _react.useCallback)(event => {
     'worklet';
 
@@ -239,11 +225,10 @@ const Swipeable = /*#__PURE__*/(0, _react.forwardRef)(function Swipeable(props,
       velocityX
     } = event;
     userDrag.value = event.translationX;
-    const leftThresholdProp = leftThreshold !== null && leftThreshold !== void 0 ? leftThreshold : leftWidth.value / 2;
-    const rightThresholdProp = rightThreshold !== null && rightThreshold !== void 0 ? rightThreshold : rightWidth.value / 2;
+    const leftThresholdProp = leftThreshold ?? leftWidth.value / 2;
+    const rightThresholdProp = rightThreshold ?? rightWidth.value / 2;
     const translationX = (userDrag.value + DRAG_TOSS * velocityX) / friction;
     let toValue = 0;
-
     if (rowState.value === 0) {
       if (translationX > leftThresholdProp) {
         toValue = leftWidth.value;
@@ -261,7 +246,6 @@ const Swipeable = /*#__PURE__*/(0, _react.forwardRef)(function Swipeable(props,
         toValue = -rightWidth.value;
       }
     }
-
     animateRow(toValue, velocityX / friction);
   }, [animateRow, friction, leftThreshold, leftWidth, rightThreshold, rightWidth, rowState, userDrag]);
   const close = (0, _react.useCallback)(() => {
@@ -271,58 +255,39 @@ const Swipeable = /*#__PURE__*/(0, _react.forwardRef)(function Swipeable(props,
   }, [animateRow]);
   const dragStarted = (0, _reactNativeReanimated.useSharedValue)(false);
   const tapGesture = (0, _react.useMemo)(() => {
-    const tap = _gestureObjects.GestureObjects.Tap().shouldCancelWhenOutside(true).onStart(() => {
+    const tap = _2.Gesture.Tap().shouldCancelWhenOutside(true).onStart(() => {
       if (rowState.value !== 0) {
         close();
       }
     });
-
-    if (!simultaneousWithExternalGesture) {
-      return tap;
-    }
-
-    if (Array.isArray(simultaneousWithExternalGesture)) {
-      tap.simultaneousWithExternalGesture(...simultaneousWithExternalGesture);
-    } else {
-      tap.simultaneousWithExternalGesture(simultaneousWithExternalGesture);
-    }
-
+    Object.entries(relationProps).forEach(([relationName, relation]) => {
+      (0, _utils.applyRelationProp)(tap, relationName, relation);
+    });
     return tap;
-  }, [close, rowState, simultaneousWithExternalGesture]);
+  }, [close, relationProps, rowState]);
   const panGesture = (0, _react.useMemo)(() => {
-    const pan = _gestureObjects.GestureObjects.Pan().enabled(enabled !== false).enableTrackpadTwoFingerGesture(enableTrackpadTwoFingerGesture).activeOffsetX([-dragOffsetFromRightEdge, dragOffsetFromLeftEdge]).onStart(updateElementWidths).onUpdate(event => {
+    const pan = _2.Gesture.Pan().enabled(enabled !== false).enableTrackpadTwoFingerGesture(enableTrackpadTwoFingerGesture).activeOffsetX([-dragOffsetFromRightEdge, dragOffsetFromLeftEdge]).onStart(updateElementWidths).onUpdate(event => {
       userDrag.value = event.translationX;
-      const direction = rowState.value === -1 ? SwipeDirection.RIGHT : rowState.value === 1 ? SwipeDirection.LEFT : event.translationX > 0 ? SwipeDirection.RIGHT : SwipeDirection.LEFT;
-
+      const direction = rowState.value === -1 ? _.SwipeDirection.RIGHT : rowState.value === 1 ? _.SwipeDirection.LEFT : event.translationX > 0 ? _.SwipeDirection.RIGHT : _.SwipeDirection.LEFT;
       if (!dragStarted.value) {
         dragStarted.value = true;
-
         if (rowState.value === 0 && onSwipeableOpenStartDrag) {
           (0, _reactNativeReanimated.runOnJS)(onSwipeableOpenStartDrag)(direction);
         } else if (onSwipeableCloseStartDrag) {
           (0, _reactNativeReanimated.runOnJS)(onSwipeableCloseStartDrag)(direction);
         }
       }
-
       updateAnimatedEvent();
     }).onEnd(event => {
       handleRelease(event);
     }).onFinalize(() => {
       dragStarted.value = false;
     });
-
-    if (!simultaneousWithExternalGesture) {
-      return pan;
-    }
-
-    if (Array.isArray(simultaneousWithExternalGesture)) {
-      pan.simultaneousWithExternalGesture(...simultaneousWithExternalGesture);
-    } else {
-      pan.simultaneousWithExternalGesture(simultaneousWithExternalGesture);
-    }
-
+    Object.entries(relationProps).forEach(([relationName, relation]) => {
+      (0, _utils.applyRelationProp)(pan, relationName, relation);
+    });
     return pan;
-  }, [dragOffsetFromLeftEdge, dragOffsetFromRightEdge, dragStarted, enableTrackpadTwoFingerGesture, enabled, handleRelease, onSwipeableCloseStartDrag, onSwipeableOpenStartDrag, rowState, updateAnimatedEvent, updateElementWidths, userDrag, simultaneousWithExternalGesture]);
+  }, [enabled, enableTrackpadTwoFingerGesture, dragOffsetFromRightEdge, dragOffsetFromLeftEdge, updateElementWidths, relationProps, userDrag, rowState, dragStarted, updateAnimatedEvent, onSwipeableOpenStartDrag, onSwipeableCloseStartDrag, handleRelease]);
   (0, _react.useImperativeHandle)(ref, () => swipeableMethods, [swipeableMethods]);
   const animatedStyle = (0, _reactNativeReanimated.useAnimatedStyle)(() => ({
     transform: [{
@@ -330,36 +295,41 @@ const Swipeable = /*#__PURE__*/(0, _react.forwardRef)(function Swipeable(props,
     }],
     pointerEvents: rowState.value === 0 ? 'auto' : 'box-only'
   }), [appliedTranslation, rowState]);
-
-  const swipeableComponent = /*#__PURE__*/_react.default.createElement(_GestureDetector.GestureDetector, {
+  const swipeableComponent = /*#__PURE__*/(0, _jsxRuntime.jsx)(_GestureDetector.GestureDetector, {
     gesture: panGesture,
-    touchAction: "pan-y"
-  }, /*#__PURE__*/_react.default.createElement(_reactNativeReanimated.default.View, _extends({}, remainingProps, {
-    onLayout: onRowLayout,
-    style: [styles.container, containerStyle]
-  }), leftElement(), rightElement(), /*#__PURE__*/_react.default.createElement(_GestureDetector.GestureDetector, {
-    gesture: tapGesture,
-    touchAction: "pan-y"
-  }, /*#__PURE__*/_react.default.createElement(_reactNativeReanimated.default.View, {
-    style: [animatedStyle, childrenContainerStyle]
-  }, children))));
-
-  return testID ? /*#__PURE__*/_react.default.createElement(_reactNative.View, {
-    testID: testID
-  }, swipeableComponent) : swipeableComponent;
-});
-var _default = Swipeable;
-exports.default = _default;
-
+    touchAction: "pan-y",
+    children: /*#__PURE__*/(0, _jsxRuntime.jsxs)(_reactNativeReanimated.default.View, {
+      ...remainingProps,
+      onLayout: onRowLayout,
+      hitSlop: hitSlop ?? undefined,
+      style: [styles.container, containerStyle],
+      children: [leftElement(), rightElement(), /*#__PURE__*/(0, _jsxRuntime.jsx)(_GestureDetector.GestureDetector, {
+        gesture: tapGesture,
+        touchAction: "pan-y",
+        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactNativeReanimated.default.View, {
+          style: [animatedStyle, childrenContainerStyle],
+          children: children
+        })
+      })]
+    })
+  });
+  return testID ? /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactNative.View, {
+    testID: testID,
+    children: swipeableComponent
+  }) : swipeableComponent;
+};
+var _default = exports.default = Swipeable;
 const styles = _reactNative.StyleSheet.create({
   container: {
     overflow: 'hidden'
   },
-  leftActions: { ..._reactNative.StyleSheet.absoluteFillObject,
+  leftActions: {
+    ..._reactNative.StyleSheet.absoluteFillObject,
     flexDirection: _reactNative.I18nManager.isRTL ? 'row-reverse' : 'row',
     overflow: 'hidden'
   },
-  rightActions: { ..._reactNative.StyleSheet.absoluteFillObject,
+  rightActions: {
+    ..._reactNative.StyleSheet.absoluteFillObject,
     flexDirection: _reactNative.I18nManager.isRTL ? 'row' : 'row-reverse',
     overflow: 'hidden'
   }
diff --git a/node_modules/react-native-gesture-handler/lib/commonjs/components/ReanimatedSwipeable/ReanimatedSwipeable.js.map b/node_modules/react-native-gesture-handler/lib/commonjs/components/ReanimatedSwipeable/ReanimatedSwipeable.js.map
new file mode 100644
index 0000000..1665a9f
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/commonjs/components/ReanimatedSwipeable/ReanimatedSwipeable.js.map
@@ -0,0 +1 @@
+{"version":3,"names":["_react","require","_reactNative","_reactNativeReanimated","_interopRequireWildcard","_","_2","_GestureDetector","_utils","_jsxRuntime","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","DRAG_TOSS","DEFAULT_FRICTION","DEFAULT_OVERSHOOT_FRICTION","DEFAULT_DRAG_OFFSET","DEFAULT_ENABLE_TRACKING_TWO_FINGER_GESTURE","Swipeable","props","ref","leftThreshold","rightThreshold","enabled","containerStyle","childrenContainerStyle","animationOptions","overshootLeft","overshootRight","testID","children","enableTrackpadTwoFingerGesture","dragOffsetFromLeftEdge","dragOffsetFromRightEdge","friction","overshootFriction","onSwipeableOpenStartDrag","onSwipeableCloseStartDrag","onSwipeableWillOpen","onSwipeableWillClose","onSwipeableOpen","onSwipeableClose","renderLeftActions","renderRightActions","simultaneousWithExternalGesture","requireExternalGestureToFail","blocksExternalGesture","hitSlop","remainingProps","relationProps","useMemo","rowState","useSharedValue","userDrag","appliedTranslation","rowWidth","leftWidth","rightWidth","showLeftProgress","showRightProgress","updateAnimatedEvent","useCallback","shouldOvershootLeft","value","shouldOvershootRight","startOffset","offsetDrag","interpolate","dispatchImmediateEvents","fromValue","toValue","runOnJS","SwipeDirection","RIGHT","LEFT","dispatchEndEvents","animateRow","velocityX","translationSpringConfig","mass","damping","stiffness","velocity","overshootClamping","reduceMotion","ReduceMotion","System","isClosing","moveToRight","usedWidth","progressSpringConfig","restDisplacementThreshold","restSpeedThreshold","frozenRowState","withSpring","isFinished","progressTarget","Math","sign","max","leftLayoutRef","useAnimatedRef","leftWrapperLayoutRef","rightLayoutRef","updateElementWidths","leftLayout","measure","leftWrapperLayout","rightLayout","pageX","swipeableMethods","close","_WORKLET","runOnUI","openLeft","openRight","reset","onRowLayout","nativeEvent","layout","width","leftActionAnimation","useAnimatedStyle","opacity","leftElement","jsxs","View","style","styles","leftActions","jsx","rightActionAnimation","rightElement","rightActions","handleRelease","event","translationX","leftThresholdProp","rightThresholdProp","dragStarted","tapGesture","tap","Gesture","Tap","shouldCancelWhenOutside","onStart","entries","forEach","relationName","relation","applyRelationProp","panGesture","pan","Pan","activeOffsetX","onUpdate","direction","onEnd","onFinalize","useImperativeHandle","animatedStyle","transform","translateX","pointerEvents","swipeableComponent","GestureDetector","gesture","touchAction","onLayout","undefined","container","_default","exports","StyleSheet","create","overflow","absoluteFillObject","flexDirection","I18nManager","isRTL"],"sourceRoot":"../../../../src","sources":["components/ReanimatedSwipeable/ReanimatedSwipeable.tsx"],"mappings":"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","ignoreList":[]}
diff --git a/node_modules/react-native-gesture-handler/lib/commonjs/components/ReanimatedSwipeable/ReanimatedSwipeableProps.js b/node_modules/react-native-gesture-handler/lib/commonjs/components/ReanimatedSwipeable/ReanimatedSwipeableProps.js
new file mode 100644
index 0000000..509b293
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/commonjs/components/ReanimatedSwipeable/ReanimatedSwipeableProps.js
@@ -0,0 +1,12 @@
+"use strict";
+
+Object.defineProperty(exports, "__esModule", {
+  value: true
+});
+exports.SwipeDirection = void 0;
+let SwipeDirection = exports.SwipeDirection = /*#__PURE__*/function (SwipeDirection) {
+  SwipeDirection["LEFT"] = "left";
+  SwipeDirection["RIGHT"] = "right";
+  return SwipeDirection;
+}({});
+//# sourceMappingURL=ReanimatedSwipeableProps.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/commonjs/components/ReanimatedSwipeable/ReanimatedSwipeableProps.js.map b/node_modules/react-native-gesture-handler/lib/commonjs/components/ReanimatedSwipeable/ReanimatedSwipeableProps.js.map
new file mode 100644
index 0000000..40f67f7
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/commonjs/components/ReanimatedSwipeable/ReanimatedSwipeableProps.js.map
@@ -0,0 +1 @@
+{"version":3,"names":["SwipeDirection","exports"],"sourceRoot":"../../../../src","sources":["components/ReanimatedSwipeable/ReanimatedSwipeableProps.ts"],"mappings":";;;;;;IAWYA,cAAc,GAAAC,OAAA,CAAAD,cAAA,0BAAdA,cAAc;EAAdA,cAAc;EAAdA,cAAc;EAAA,OAAdA,cAAc;AAAA","ignoreList":[]}
diff --git a/node_modules/react-native-gesture-handler/lib/commonjs/components/ReanimatedSwipeable/index.js b/node_modules/react-native-gesture-handler/lib/commonjs/components/ReanimatedSwipeable/index.js
new file mode 100644
index 0000000..5065a99
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/commonjs/components/ReanimatedSwipeable/index.js
@@ -0,0 +1,21 @@
+"use strict";
+
+Object.defineProperty(exports, "__esModule", {
+  value: true
+});
+Object.defineProperty(exports, "SwipeDirection", {
+  enumerable: true,
+  get: function () {
+    return _ReanimatedSwipeableProps.SwipeDirection;
+  }
+});
+Object.defineProperty(exports, "default", {
+  enumerable: true,
+  get: function () {
+    return _ReanimatedSwipeable.default;
+  }
+});
+var _ReanimatedSwipeableProps = require("./ReanimatedSwipeableProps");
+var _ReanimatedSwipeable = _interopRequireDefault(require("./ReanimatedSwipeable"));
+function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
+//# sourceMappingURL=index.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/commonjs/components/ReanimatedSwipeable/index.js.map b/node_modules/react-native-gesture-handler/lib/commonjs/components/ReanimatedSwipeable/index.js.map
new file mode 100644
index 0000000..526655a
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/commonjs/components/ReanimatedSwipeable/index.js.map
@@ -0,0 +1 @@
+{"version":3,"names":["_ReanimatedSwipeableProps","require","_ReanimatedSwipeable","_interopRequireDefault","e","__esModule","default"],"sourceRoot":"../../../../src","sources":["components/ReanimatedSwipeable/index.ts"],"mappings":";;;;;;;;;;;;;;;;;AAAA,IAAAA,yBAAA,GAAAC,OAAA;AAKA,IAAAC,oBAAA,GAAAC,sBAAA,CAAAF,OAAA;AAAgD,SAAAE,uBAAAC,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAE,OAAA,EAAAF,CAAA","ignoreList":[]}
diff --git a/node_modules/react-native-gesture-handler/lib/commonjs/components/utils.js b/node_modules/react-native-gesture-handler/lib/commonjs/components/utils.js
new file mode 100644
index 0000000..c9d9902
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/commonjs/components/utils.js
@@ -0,0 +1,17 @@
+"use strict";
+
+Object.defineProperty(exports, "__esModule", {
+  value: true
+});
+exports.applyRelationProp = applyRelationProp;
+function applyRelationProp(gesture, relationPropName, relationProp) {
+  if (!relationProp) {
+    return;
+  }
+  if (Array.isArray(relationProp)) {
+    gesture[relationPropName](...relationProp);
+  } else {
+    gesture[relationPropName](relationProp);
+  }
+}
+//# sourceMappingURL=utils.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/commonjs/components/utils.js.map b/node_modules/react-native-gesture-handler/lib/commonjs/components/utils.js.map
new file mode 100644
index 0000000..02a895c
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/commonjs/components/utils.js.map
@@ -0,0 +1 @@
+{"version":3,"names":["applyRelationProp","gesture","relationPropName","relationProp","Array","isArray"],"sourceRoot":"../../../src","sources":["components/utils.ts"],"mappings":";;;;;;AAWO,SAASA,iBAAiBA,CAC/BC,OAAyB,EACzBC,gBAAkC,EAClCC,YAA8B,EAC9B;EACA,IAAI,CAACA,YAAY,EAAE;IACjB;EACF;EAEA,IAAIC,KAAK,CAACC,OAAO,CAACF,YAAY,CAAC,EAAE;IAC/BF,OAAO,CAACC,gBAAgB,CAAC,CAAC,GAAGC,YAAY,CAAC;EAC5C,CAAC,MAAM;IACLF,OAAO,CAACC,gBAAgB,CAAC,CAACC,YAAY,CAAC;EACzC;AACF","ignoreList":[]}
diff --git a/node_modules/react-native-gesture-handler/lib/commonjs/getReactNativeVersion.js b/node_modules/react-native-gesture-handler/lib/commonjs/getReactNativeVersion.js
deleted file mode 100644
index 591a376..0000000
--- a/node_modules/react-native-gesture-handler/lib/commonjs/getReactNativeVersion.js
+++ /dev/null
@@ -1,22 +0,0 @@
-"use strict";
-
-Object.defineProperty(exports, "__esModule", {
-  value: true
-});
-exports.getReactNativeVersion = getReactNativeVersion;
-
-var _package = _interopRequireDefault(require("react-native/package.json"));
-
-function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
-
-const [majorStr, minorStr] = _package.default.version.split('.');
-
-const REACT_NATIVE_VERSION = {
-  major: parseInt(majorStr, 10),
-  minor: parseInt(minorStr, 10)
-};
-
-function getReactNativeVersion() {
-  return REACT_NATIVE_VERSION;
-}
-//# sourceMappingURL=getReactNativeVersion.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/commonjs/getReactNativeVersion.js.map b/node_modules/react-native-gesture-handler/lib/commonjs/getReactNativeVersion.js.map
deleted file mode 100644
index a20425a..0000000
--- a/node_modules/react-native-gesture-handler/lib/commonjs/getReactNativeVersion.js.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"sources":["getReactNativeVersion.ts"],"names":["majorStr","minorStr","pack","version","split","REACT_NATIVE_VERSION","major","parseInt","minor","getReactNativeVersion"],"mappings":";;;;;;;AAAA;;;;AAEA,MAAM,CAACA,QAAD,EAAWC,QAAX,IAAuBC,iBAAKC,OAAL,CAAaC,KAAb,CAAmB,GAAnB,CAA7B;;AACA,MAAMC,oBAAoB,GAAG;AAC3BC,EAAAA,KAAK,EAAEC,QAAQ,CAACP,QAAD,EAAW,EAAX,CADY;AAE3BQ,EAAAA,KAAK,EAAED,QAAQ,CAACN,QAAD,EAAW,EAAX;AAFY,CAA7B;;AAKO,SAASQ,qBAAT,GAAiC;AACtC,SAAOJ,oBAAP;AACD","sourcesContent":["import pack from 'react-native/package.json';\n\nconst [majorStr, minorStr] = pack.version.split('.');\nconst REACT_NATIVE_VERSION = {\n  major: parseInt(majorStr, 10),\n  minor: parseInt(minorStr, 10),\n};\n\nexport function getReactNativeVersion() {\n  return REACT_NATIVE_VERSION;\n}\n"]}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/commonjs/getReactNativeVersion.web.js b/node_modules/react-native-gesture-handler/lib/commonjs/getReactNativeVersion.web.js
deleted file mode 100644
index dbc026c..0000000
--- a/node_modules/react-native-gesture-handler/lib/commonjs/getReactNativeVersion.web.js
+++ /dev/null
@@ -1,11 +0,0 @@
-"use strict";
-
-Object.defineProperty(exports, "__esModule", {
-  value: true
-});
-exports.getReactNativeVersion = getReactNativeVersion;
-
-function getReactNativeVersion() {
-  throw new Error('getReactNativeVersion is not supported on web');
-}
-//# sourceMappingURL=getReactNativeVersion.web.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/commonjs/getReactNativeVersion.web.js.map b/node_modules/react-native-gesture-handler/lib/commonjs/getReactNativeVersion.web.js.map
deleted file mode 100644
index ea93642..0000000
--- a/node_modules/react-native-gesture-handler/lib/commonjs/getReactNativeVersion.web.js.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"sources":["getReactNativeVersion.web.ts"],"names":["getReactNativeVersion","Error"],"mappings":";;;;;;;AAAO,SAASA,qBAAT,GAAiC;AACtC,QAAM,IAAIC,KAAJ,CAAU,+CAAV,CAAN;AACD","sourcesContent":["export function getReactNativeVersion() {\n  throw new Error('getReactNativeVersion is not supported on web');\n}\n"]}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/commonjs/handlers/NativeViewGestureHandler.js b/node_modules/react-native-gesture-handler/lib/commonjs/handlers/NativeViewGestureHandler.js
deleted file mode 100644
index cecec80..0000000
--- a/node_modules/react-native-gesture-handler/lib/commonjs/handlers/NativeViewGestureHandler.js
+++ /dev/null
@@ -1,35 +0,0 @@
-"use strict";
-
-Object.defineProperty(exports, "__esModule", {
-  value: true
-});
-exports.NativeViewGestureHandler = exports.nativeViewHandlerName = exports.nativeViewProps = exports.nativeViewGestureHandlerProps = void 0;
-
-var _createHandler = _interopRequireDefault(require("./createHandler"));
-
-var _gestureHandlerCommon = require("./gestureHandlerCommon");
-
-function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
-
-const nativeViewGestureHandlerProps = ['shouldActivateOnStart', 'disallowInterruption'];
-exports.nativeViewGestureHandlerProps = nativeViewGestureHandlerProps;
-const nativeViewProps = [..._gestureHandlerCommon.baseGestureHandlerProps, ...nativeViewGestureHandlerProps];
-exports.nativeViewProps = nativeViewProps;
-const nativeViewHandlerName = 'NativeViewGestureHandler';
-/**
- * @deprecated NativeViewGestureHandler will be removed in the future version of Gesture Handler. Use `Gesture.Native()` instead.
- */
-
-exports.nativeViewHandlerName = nativeViewHandlerName;
-
-/**
- * @deprecated NativeViewGestureHandler will be removed in the future version of Gesture Handler. Use `Gesture.Native()` instead.
- */
-// eslint-disable-next-line @typescript-eslint/no-redeclare -- backward compatibility; see description on the top of gestureHandlerCommon.ts file
-const NativeViewGestureHandler = (0, _createHandler.default)({
-  name: nativeViewHandlerName,
-  allowedProps: nativeViewProps,
-  config: {}
-});
-exports.NativeViewGestureHandler = NativeViewGestureHandler;
-//# sourceMappingURL=NativeViewGestureHandler.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/commonjs/handlers/NativeViewGestureHandler.js.map b/node_modules/react-native-gesture-handler/lib/commonjs/handlers/NativeViewGestureHandler.js.map
deleted file mode 100644
index 926ff07..0000000
--- a/node_modules/react-native-gesture-handler/lib/commonjs/handlers/NativeViewGestureHandler.js.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"sources":["NativeViewGestureHandler.ts"],"names":["nativeViewGestureHandlerProps","nativeViewProps","baseGestureHandlerProps","nativeViewHandlerName","NativeViewGestureHandler","name","allowedProps","config"],"mappings":";;;;;;;AACA;;AACA;;;;AAKO,MAAMA,6BAA6B,GAAG,CAC3C,uBAD2C,EAE3C,sBAF2C,CAAtC;;AA4BA,MAAMC,eAAe,GAAG,CAC7B,GAAGC,6CAD0B,EAE7B,GAAGF,6BAF0B,CAAxB;;AAKA,MAAMG,qBAAqB,GAAG,0BAA9B;AAEP;AACA;AACA;;;;AAGA;AACA;AACA;AACA;AACO,MAAMC,wBAAwB,GAAG,4BAGtC;AACAC,EAAAA,IAAI,EAAEF,qBADN;AAEAG,EAAAA,YAAY,EAAEL,eAFd;AAGAM,EAAAA,MAAM,EAAE;AAHR,CAHsC,CAAjC","sourcesContent":["import type { NativeViewGestureHandlerPayload } from './GestureHandlerEventPayload';\nimport createHandler from './createHandler';\nimport {\n  BaseGestureHandlerProps,\n  baseGestureHandlerProps,\n} from './gestureHandlerCommon';\n\nexport const nativeViewGestureHandlerProps = [\n  'shouldActivateOnStart',\n  'disallowInterruption',\n] as const;\n\nexport interface NativeViewGestureConfig {\n  /**\n   * Android only.\n   *\n   * Determines whether the handler should check for an existing touch event on\n   * instantiation.\n   */\n  shouldActivateOnStart?: boolean;\n\n  /**\n   * When `true`, cancels all other gesture handlers when this\n   * `NativeViewGestureHandler` receives an `ACTIVE` state event.\n   */\n  disallowInterruption?: boolean;\n}\n\n/**\n * @deprecated NativeViewGestureHandler will be removed in the future version of Gesture Handler. Use `Gesture.Native()` instead.\n */\nexport interface NativeViewGestureHandlerProps\n  extends BaseGestureHandlerProps<NativeViewGestureHandlerPayload>,\n    NativeViewGestureConfig {}\n\nexport const nativeViewProps = [\n  ...baseGestureHandlerProps,\n  ...nativeViewGestureHandlerProps,\n] as const;\n\nexport const nativeViewHandlerName = 'NativeViewGestureHandler';\n\n/**\n * @deprecated NativeViewGestureHandler will be removed in the future version of Gesture Handler. Use `Gesture.Native()` instead.\n */\nexport type NativeViewGestureHandler = typeof NativeViewGestureHandler;\n\n/**\n * @deprecated NativeViewGestureHandler will be removed in the future version of Gesture Handler. Use `Gesture.Native()` instead.\n */\n// eslint-disable-next-line @typescript-eslint/no-redeclare -- backward compatibility; see description on the top of gestureHandlerCommon.ts file\nexport const NativeViewGestureHandler = createHandler<\n  NativeViewGestureHandlerProps,\n  NativeViewGestureHandlerPayload\n>({\n  name: nativeViewHandlerName,\n  allowedProps: nativeViewProps,\n  config: {},\n});\n"]}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/commonjs/handlers/NativeViewGestureHandler.ts b/node_modules/react-native-gesture-handler/lib/commonjs/handlers/NativeViewGestureHandler.ts
new file mode 100644
index 0000000..1271e26
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/commonjs/handlers/NativeViewGestureHandler.ts
@@ -0,0 +1,59 @@
+import type { NativeViewGestureHandlerPayload } from './GestureHandlerEventPayload';
+import createHandler from './createHandler';
+import {
+  BaseGestureHandlerProps,
+  baseGestureHandlerProps,
+} from './gestureHandlerCommon';
+
+export const nativeViewGestureHandlerProps = [
+  'shouldActivateOnStart',
+  'disallowInterruption',
+] as const;
+
+export interface NativeViewGestureConfig {
+  /**
+   * Android only.
+   *
+   * Determines whether the handler should check for an existing touch event on
+   * instantiation.
+   */
+  shouldActivateOnStart?: boolean;
+
+  /**
+   * When `true`, cancels all other gesture handlers when this
+   * `NativeViewGestureHandler` receives an `ACTIVE` state event.
+   */
+  disallowInterruption?: boolean;
+}
+
+/**
+ * @deprecated NativeViewGestureHandler will be removed in the future version of Gesture Handler. Use `Gesture.Native()` instead.
+ */
+export interface NativeViewGestureHandlerProps
+  extends BaseGestureHandlerProps<NativeViewGestureHandlerPayload>,
+    NativeViewGestureConfig {}
+
+export const nativeViewProps = [
+  ...baseGestureHandlerProps,
+  ...nativeViewGestureHandlerProps,
+] as const;
+
+export const nativeViewHandlerName = 'NativeViewGestureHandler';
+
+/**
+ * @deprecated NativeViewGestureHandler will be removed in the future version of Gesture Handler. Use `Gesture.Native()` instead.
+ */
+export type NativeViewGestureHandler = typeof NativeViewGestureHandler;
+
+/**
+ * @deprecated NativeViewGestureHandler will be removed in the future version of Gesture Handler. Use `Gesture.Native()` instead.
+ */
+// eslint-disable-next-line @typescript-eslint/no-redeclare -- backward compatibility; see description on the top of gestureHandlerCommon.ts file
+export const NativeViewGestureHandler = createHandler<
+  NativeViewGestureHandlerProps,
+  NativeViewGestureHandlerPayload
+>({
+  name: nativeViewHandlerName,
+  allowedProps: nativeViewProps,
+  config: {},
+});
diff --git a/node_modules/react-native-gesture-handler/lib/commonjs/handlers/gestures/nativeGesture.js b/node_modules/react-native-gesture-handler/lib/commonjs/handlers/gestures/nativeGesture.js
deleted file mode 100644
index 05c60d4..0000000
--- a/node_modules/react-native-gesture-handler/lib/commonjs/handlers/gestures/nativeGesture.js
+++ /dev/null
@@ -1,44 +0,0 @@
-"use strict";
-
-Object.defineProperty(exports, "__esModule", {
-  value: true
-});
-exports.NativeGesture = void 0;
-
-var _gesture = require("./gesture");
-
-function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
-
-class NativeGesture extends _gesture.BaseGesture {
-  constructor() {
-    super();
-
-    _defineProperty(this, "config", {});
-
-    this.handlerName = 'NativeViewGestureHandler';
-  }
-  /**
-   * When true, underlying handler will activate unconditionally when in `BEGAN` or `UNDETERMINED` state.
-   * @param value
-   */
-
-
-  shouldActivateOnStart(value) {
-    this.config.shouldActivateOnStart = value;
-    return this;
-  }
-  /**
-   * When true, cancels all other gesture handlers when this `NativeViewGestureHandler` receives an `ACTIVE` state event.
-   * @param value
-   */
-
-
-  disallowInterruption(value) {
-    this.config.disallowInterruption = value;
-    return this;
-  }
-
-}
-
-exports.NativeGesture = NativeGesture;
-//# sourceMappingURL=nativeGesture.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/commonjs/handlers/gestures/nativeGesture.js.map b/node_modules/react-native-gesture-handler/lib/commonjs/handlers/gestures/nativeGesture.js.map
deleted file mode 100644
index 1904215..0000000
--- a/node_modules/react-native-gesture-handler/lib/commonjs/handlers/gestures/nativeGesture.js.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"sources":["nativeGesture.ts"],"names":["NativeGesture","BaseGesture","constructor","handlerName","shouldActivateOnStart","value","config","disallowInterruption"],"mappings":";;;;;;;AAAA;;;;AAIO,MAAMA,aAAN,SAA4BC,oBAA5B,CAAyE;AAG9EC,EAAAA,WAAW,GAAG;AACZ;;AADY,oCAF+C,EAE/C;;AAGZ,SAAKC,WAAL,GAAmB,0BAAnB;AACD;AAED;AACF;AACA;AACA;;;AACEC,EAAAA,qBAAqB,CAACC,KAAD,EAAiB;AACpC,SAAKC,MAAL,CAAYF,qBAAZ,GAAoCC,KAApC;AACA,WAAO,IAAP;AACD;AAED;AACF;AACA;AACA;;;AACEE,EAAAA,oBAAoB,CAACF,KAAD,EAAiB;AACnC,SAAKC,MAAL,CAAYC,oBAAZ,GAAmCF,KAAnC;AACA,WAAO,IAAP;AACD;;AAzB6E","sourcesContent":["import { BaseGestureConfig, BaseGesture } from './gesture';\nimport { NativeViewGestureConfig } from '../NativeViewGestureHandler';\nimport type { NativeViewGestureHandlerPayload } from '../GestureHandlerEventPayload';\n\nexport class NativeGesture extends BaseGesture<NativeViewGestureHandlerPayload> {\n  public config: BaseGestureConfig & NativeViewGestureConfig = {};\n\n  constructor() {\n    super();\n\n    this.handlerName = 'NativeViewGestureHandler';\n  }\n\n  /**\n   * When true, underlying handler will activate unconditionally when in `BEGAN` or `UNDETERMINED` state.\n   * @param value\n   */\n  shouldActivateOnStart(value: boolean) {\n    this.config.shouldActivateOnStart = value;\n    return this;\n  }\n\n  /**\n   * When true, cancels all other gesture handlers when this `NativeViewGestureHandler` receives an `ACTIVE` state event.\n   * @param value\n   */\n  disallowInterruption(value: boolean) {\n    this.config.disallowInterruption = value;\n    return this;\n  }\n}\n\nexport type NativeGestureType = InstanceType<typeof NativeGesture>;\n"]}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/module/handlers/gestures/nativeGesture.js b/node_modules/react-native-gesture-handler/lib/commonjs/handlers/gestures/nativeGesture.ts
similarity index 50%
rename from node_modules/react-native-gesture-handler/lib/module/handlers/gestures/nativeGesture.js
rename to node_modules/react-native-gesture-handler/lib/commonjs/handlers/gestures/nativeGesture.ts
index 8e1b252..b8b00ab 100644
--- a/node_modules/react-native-gesture-handler/lib/module/handlers/gestures/nativeGesture.js
+++ b/node_modules/react-native-gesture-handler/lib/commonjs/handlers/gestures/nativeGesture.ts
@@ -1,34 +1,33 @@
-function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
+import { BaseGestureConfig, BaseGesture } from './gesture';
+import { NativeViewGestureConfig } from '../NativeViewGestureHandler';
+import type { NativeViewGestureHandlerPayload } from '../GestureHandlerEventPayload';
+
+export class NativeGesture extends BaseGesture<NativeViewGestureHandlerPayload> {
+  public config: BaseGestureConfig & NativeViewGestureConfig = {};
 
-import { BaseGesture } from './gesture';
-export class NativeGesture extends BaseGesture {
   constructor() {
     super();
 
-    _defineProperty(this, "config", {});
-
     this.handlerName = 'NativeViewGestureHandler';
   }
+
   /**
    * When true, underlying handler will activate unconditionally when in `BEGAN` or `UNDETERMINED` state.
    * @param value
    */
-
-
-  shouldActivateOnStart(value) {
+  shouldActivateOnStart(value: boolean) {
     this.config.shouldActivateOnStart = value;
     return this;
   }
+
   /**
    * When true, cancels all other gesture handlers when this `NativeViewGestureHandler` receives an `ACTIVE` state event.
    * @param value
    */
-
-
-  disallowInterruption(value) {
+  disallowInterruption(value: boolean) {
     this.config.disallowInterruption = value;
     return this;
   }
-
 }
-//# sourceMappingURL=nativeGesture.js.map
\ No newline at end of file
+
+export type NativeGestureType = InstanceType<typeof NativeGesture>;
diff --git a/node_modules/react-native-gesture-handler/lib/commonjs/mocks.js.map b/node_modules/react-native-gesture-handler/lib/commonjs/mocks.js.map
deleted file mode 100644
index 2c4a62d..0000000
--- a/node_modules/react-native-gesture-handler/lib/commonjs/mocks.js.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"sources":["mocks.tsx"],"names":["NOOP","PanGestureHandler","View","attachGestureHandler","createGestureHandler","dropGestureHandler","updateGestureHandler","flushOperations","install","NativeViewGestureHandler","TapGestureHandler","ForceTouchGestureHandler","LongPressGestureHandler","PinchGestureHandler","RotationGestureHandler","FlingGestureHandler","RawButton","enabled","rest","BaseButton","RectButton","BorderlessButton","TouchableNativeFeedback","TouchableHighlight","TouchableOpacity","TouchableWithoutFeedback","ScrollView","FlatList","Switch","TextInput","DrawerLayoutAndroid","Directions","State"],"mappings":";;;;;;;AAAA;;AACA;;AAYA;;AACA;;;;;;AAEA,MAAMA,IAAI,GAAG,MAAM,CACjB;AACD,CAFD;;AAGA,MAAMC,iBAAiB,GAAGC,iBAA1B;AACA,MAAMC,oBAAoB,GAAGH,IAA7B;AACA,MAAMI,oBAAoB,GAAGJ,IAA7B;AACA,MAAMK,kBAAkB,GAAGL,IAA3B;AACA,MAAMM,oBAAoB,GAAGN,IAA7B;AACA,MAAMO,eAAe,GAAGP,IAAxB;AACA,MAAMQ,OAAO,GAAGR,IAAhB;AACA,MAAMS,wBAAwB,GAAGP,iBAAjC;AACA,MAAMQ,iBAAiB,GAAGR,iBAA1B;AACA,MAAMS,wBAAwB,GAAGT,iBAAjC;AACA,MAAMU,uBAAuB,GAAGV,iBAAhC;AACA,MAAMW,mBAAmB,GAAGX,iBAA5B;AACA,MAAMY,sBAAsB,GAAGZ,iBAA/B;AACA,MAAMa,mBAAmB,GAAGb,iBAA5B;;AACA,MAAMc,SAAS,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAW,KAAGC;AAAd,CAAD,kBAChB,6BAAC,oCAAD;AAAyB,EAAA,QAAQ,EAAE,CAACD;AAApC,GAAiDC,IAAjD,gBACE,6BAAC,iBAAD,OADF,CADF;;AAKA,MAAMC,UAAU,GAAGH,SAAnB;AACA,MAAMI,UAAU,GAAGJ,SAAnB;AACA,MAAMK,gBAAgB,GAAGC,oCAAzB;eAEe;AACbC,EAAAA,kBAAkB,EAAlBA,+BADa;AAEbD,EAAAA,uBAAuB,EAAvBA,oCAFa;AAGbE,EAAAA,gBAAgB,EAAhBA,6BAHa;AAIbC,EAAAA,wBAAwB,EAAxBA,qCAJa;AAKbC,EAAAA,UAAU,EAAVA,uBALa;AAMbC,EAAAA,QAAQ,EAARA,qBANa;AAObC,EAAAA,MAAM,EAANA,mBAPa;AAQbC,EAAAA,SAAS,EAATA,sBARa;AASbC,EAAAA,mBAAmB,EAAnBA,gCATa;AAUbrB,EAAAA,wBAVa;AAWbC,EAAAA,iBAXa;AAYbC,EAAAA,wBAZa;AAabC,EAAAA,uBAba;AAcbC,EAAAA,mBAda;AAebC,EAAAA,sBAfa;AAgBbC,EAAAA,mBAhBa;AAiBbC,EAAAA,SAjBa;AAkBbG,EAAAA,UAlBa;AAmBbC,EAAAA,UAnBa;AAoBbC,EAAAA,gBApBa;AAqBbpB,EAAAA,iBArBa;AAsBbE,EAAAA,oBAtBa;AAuBbC,EAAAA,oBAvBa;AAwBbC,EAAAA,kBAxBa;AAyBbC,EAAAA,oBAzBa;AA0BbC,EAAAA,eA1Ba;AA2BbC,EAAAA,OA3Ba;AA4Bb;AACAuB,EAAAA,UAAU,EAAVA,sBA7Ba;AA8BbC,EAAAA,KAAK,EAALA;AA9Ba,C","sourcesContent":["import React from 'react';\nimport {\n  TouchableHighlight,\n  TouchableNativeFeedback,\n  TouchableOpacity,\n  TouchableWithoutFeedback,\n  ScrollView,\n  FlatList,\n  Switch,\n  TextInput,\n  DrawerLayoutAndroid,\n  View,\n} from 'react-native';\nimport { State } from './State';\nimport { Directions } from './Directions';\n\nconst NOOP = () => {\n  // Do nothing\n};\nconst PanGestureHandler = View;\nconst attachGestureHandler = NOOP;\nconst createGestureHandler = NOOP;\nconst dropGestureHandler = NOOP;\nconst updateGestureHandler = NOOP;\nconst flushOperations = NOOP;\nconst install = NOOP;\nconst NativeViewGestureHandler = View;\nconst TapGestureHandler = View;\nconst ForceTouchGestureHandler = View;\nconst LongPressGestureHandler = View;\nconst PinchGestureHandler = View;\nconst RotationGestureHandler = View;\nconst FlingGestureHandler = View;\nconst RawButton = ({ enabled, ...rest }: any) => (\n  <TouchableNativeFeedback disabled={!enabled} {...rest}>\n    <View />\n  </TouchableNativeFeedback>\n);\nconst BaseButton = RawButton;\nconst RectButton = RawButton;\nconst BorderlessButton = TouchableNativeFeedback;\n\nexport default {\n  TouchableHighlight,\n  TouchableNativeFeedback,\n  TouchableOpacity,\n  TouchableWithoutFeedback,\n  ScrollView,\n  FlatList,\n  Switch,\n  TextInput,\n  DrawerLayoutAndroid,\n  NativeViewGestureHandler,\n  TapGestureHandler,\n  ForceTouchGestureHandler,\n  LongPressGestureHandler,\n  PinchGestureHandler,\n  RotationGestureHandler,\n  FlingGestureHandler,\n  RawButton,\n  BaseButton,\n  RectButton,\n  BorderlessButton,\n  PanGestureHandler,\n  attachGestureHandler,\n  createGestureHandler,\n  dropGestureHandler,\n  updateGestureHandler,\n  flushOperations,\n  install,\n  // Probably can be removed\n  Directions,\n  State,\n} as const;\n"]}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/commonjs/mocks/Pressable.js b/node_modules/react-native-gesture-handler/lib/commonjs/mocks/Pressable.js
new file mode 100644
index 0000000..3119292
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/commonjs/mocks/Pressable.js
@@ -0,0 +1,13 @@
+"use strict";
+
+Object.defineProperty(exports, "__esModule", {
+  value: true
+});
+Object.defineProperty(exports, "default", {
+  enumerable: true,
+  get: function () {
+    return _reactNative.Pressable;
+  }
+});
+var _reactNative = require("react-native");
+//# sourceMappingURL=Pressable.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/commonjs/mocks/Pressable.js.map b/node_modules/react-native-gesture-handler/lib/commonjs/mocks/Pressable.js.map
new file mode 100644
index 0000000..9423d9c
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/commonjs/mocks/Pressable.js.map
@@ -0,0 +1 @@
+{"version":3,"names":["_reactNative","require"],"sourceRoot":"../../../src","sources":["mocks/Pressable.tsx"],"mappings":";;;;;;;;;;;AAAA,IAAAA,YAAA,GAAAC,OAAA","ignoreList":[]}
diff --git a/node_modules/react-native-gesture-handler/lib/commonjs/mocks.js b/node_modules/react-native-gesture-handler/lib/commonjs/mocks/mocks.js
similarity index 63%
rename from node_modules/react-native-gesture-handler/lib/commonjs/mocks.js
rename to node_modules/react-native-gesture-handler/lib/commonjs/mocks/mocks.js
index 08805da..d2d034f 100644
--- a/node_modules/react-native-gesture-handler/lib/commonjs/mocks.js
+++ b/node_modules/react-native-gesture-handler/lib/commonjs/mocks/mocks.js
@@ -3,23 +3,16 @@
 Object.defineProperty(exports, "__esModule", {
   value: true
 });
-exports.default = void 0;
-
+exports.default = exports.RectButton = exports.RawButton = exports.BorderlessButton = exports.BaseButton = void 0;
 var _react = _interopRequireDefault(require("react"));
-
 var _reactNative = require("react-native");
-
-var _State = require("./State");
-
-var _Directions = require("./Directions");
-
-function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
-
-function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
-
-const NOOP = () => {// Do nothing
+var _State = require("../State");
+var _Directions = require("../Directions");
+var _jsxRuntime = require("react/jsx-runtime");
+function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
+const NOOP = () => {
+  // Do nothing
 };
-
 const PanGestureHandler = _reactNative.View;
 const attachGestureHandler = NOOP;
 const createGestureHandler = NOOP;
@@ -34,18 +27,19 @@ const LongPressGestureHandler = _reactNative.View;
 const PinchGestureHandler = _reactNative.View;
 const RotationGestureHandler = _reactNative.View;
 const FlingGestureHandler = _reactNative.View;
-
 const RawButton = ({
   enabled,
   ...rest
-}) => /*#__PURE__*/_react.default.createElement(_reactNative.TouchableNativeFeedback, _extends({
-  disabled: !enabled
-}, rest), /*#__PURE__*/_react.default.createElement(_reactNative.View, null));
-
-const BaseButton = RawButton;
-const RectButton = RawButton;
-const BorderlessButton = _reactNative.TouchableNativeFeedback;
-var _default = {
+}) => /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactNative.TouchableNativeFeedback, {
+  disabled: enabled === false,
+  ...rest,
+  children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactNative.View, {})
+});
+exports.RawButton = RawButton;
+const BaseButton = exports.BaseButton = RawButton;
+const RectButton = exports.RectButton = RawButton;
+const BorderlessButton = exports.BorderlessButton = _reactNative.TouchableNativeFeedback;
+var _default = exports.default = {
   TouchableHighlight: _reactNative.TouchableHighlight,
   TouchableNativeFeedback: _reactNative.TouchableNativeFeedback,
   TouchableOpacity: _reactNative.TouchableOpacity,
@@ -62,10 +56,6 @@ var _default = {
   PinchGestureHandler,
   RotationGestureHandler,
   FlingGestureHandler,
-  RawButton,
-  BaseButton,
-  RectButton,
-  BorderlessButton,
   PanGestureHandler,
   attachGestureHandler,
   createGestureHandler,
@@ -77,5 +67,4 @@ var _default = {
   Directions: _Directions.Directions,
   State: _State.State
 };
-exports.default = _default;
 //# sourceMappingURL=mocks.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/commonjs/mocks/mocks.js.map b/node_modules/react-native-gesture-handler/lib/commonjs/mocks/mocks.js.map
new file mode 100644
index 0000000..ea65164
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/commonjs/mocks/mocks.js.map
@@ -0,0 +1 @@
+{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_State","_Directions","_jsxRuntime","e","__esModule","default","NOOP","PanGestureHandler","View","attachGestureHandler","createGestureHandler","dropGestureHandler","updateGestureHandler","flushOperations","install","NativeViewGestureHandler","TapGestureHandler","ForceTouchGestureHandler","LongPressGestureHandler","PinchGestureHandler","RotationGestureHandler","FlingGestureHandler","RawButton","enabled","rest","jsx","TouchableNativeFeedback","disabled","children","exports","BaseButton","RectButton","BorderlessButton","_default","TouchableHighlight","TouchableOpacity","TouchableWithoutFeedback","ScrollView","FlatList","Switch","TextInput","DrawerLayoutAndroid","Directions","State"],"sourceRoot":"../../../src","sources":["mocks/mocks.tsx"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,YAAA,GAAAD,OAAA;AAYA,IAAAE,MAAA,GAAAF,OAAA;AACA,IAAAG,WAAA,GAAAH,OAAA;AAA2C,IAAAI,WAAA,GAAAJ,OAAA;AAAA,SAAAD,uBAAAM,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAE,OAAA,EAAAF,CAAA;AAE3C,MAAMG,IAAI,GAAGA,CAAA,KAAM;EACjB;AAAA,CACD;AACD,MAAMC,iBAAiB,GAAGC,iBAAI;AAC9B,MAAMC,oBAAoB,GAAGH,IAAI;AACjC,MAAMI,oBAAoB,GAAGJ,IAAI;AACjC,MAAMK,kBAAkB,GAAGL,IAAI;AAC/B,MAAMM,oBAAoB,GAAGN,IAAI;AACjC,MAAMO,eAAe,GAAGP,IAAI;AAC5B,MAAMQ,OAAO,GAAGR,IAAI;AACpB,MAAMS,wBAAwB,GAAGP,iBAAI;AACrC,MAAMQ,iBAAiB,GAAGR,iBAAI;AAC9B,MAAMS,wBAAwB,GAAGT,iBAAI;AACrC,MAAMU,uBAAuB,GAAGV,iBAAI;AACpC,MAAMW,mBAAmB,GAAGX,iBAAI;AAChC,MAAMY,sBAAsB,GAAGZ,iBAAI;AACnC,MAAMa,mBAAmB,GAAGb,iBAAI;AACzB,MAAMc,SAAS,GAAGA,CAAC;EAAEC,OAAO;EAAE,GAAGC;AAAU,CAAC,kBACjD,IAAAtB,WAAA,CAAAuB,GAAA,EAAC1B,YAAA,CAAA2B,uBAAuB;EAACC,QAAQ,EAAEJ,OAAO,KAAK,KAAM;EAAA,GAAKC,IAAI;EAAAI,QAAA,eAC5D,IAAA1B,WAAA,CAAAuB,GAAA,EAAC1B,YAAA,CAAAS,IAAI,IAAE;AAAC,CACe,CAC1B;AAACqB,OAAA,CAAAP,SAAA,GAAAA,SAAA;AACK,MAAMQ,UAAU,GAAAD,OAAA,CAAAC,UAAA,GAAGR,SAAS;AAC5B,MAAMS,UAAU,GAAAF,OAAA,CAAAE,UAAA,GAAGT,SAAS;AAC5B,MAAMU,gBAAgB,GAAAH,OAAA,CAAAG,gBAAA,GAAGN,oCAAuB;AAAC,IAAAO,QAAA,GAAAJ,OAAA,CAAAxB,OAAA,GAEzC;EACb6B,kBAAkB,EAAlBA,+BAAkB;EAClBR,uBAAuB,EAAvBA,oCAAuB;EACvBS,gBAAgB,EAAhBA,6BAAgB;EAChBC,wBAAwB,EAAxBA,qCAAwB;EACxBC,UAAU,EAAVA,uBAAU;EACVC,QAAQ,EAARA,qBAAQ;EACRC,MAAM,EAANA,mBAAM;EACNC,SAAS,EAATA,sBAAS;EACTC,mBAAmB,EAAnBA,gCAAmB;EACnB1B,wBAAwB;EACxBC,iBAAiB;EACjBC,wBAAwB;EACxBC,uBAAuB;EACvBC,mBAAmB;EACnBC,sBAAsB;EACtBC,mBAAmB;EACnBd,iBAAiB;EACjBE,oBAAoB;EACpBC,oBAAoB;EACpBC,kBAAkB;EAClBC,oBAAoB;EACpBC,eAAe;EACfC,OAAO;EACP;EACA4B,UAAU,EAAVA,sBAAU;EACVC,KAAK,EAALA;AACF,CAAC","ignoreList":[]}
diff --git a/node_modules/react-native-gesture-handler/lib/commonjs/package.json b/node_modules/react-native-gesture-handler/lib/commonjs/package.json
new file mode 100644
index 0000000..729ac4d
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/commonjs/package.json
@@ -0,0 +1 @@
+{"type":"commonjs"}
diff --git a/node_modules/react-native-gesture-handler/lib/commonjs/specs/NativeRNGestureHandlerModule.js b/node_modules/react-native-gesture-handler/lib/commonjs/specs/NativeRNGestureHandlerModule.js
deleted file mode 100644
index 3c8ae03..0000000
--- a/node_modules/react-native-gesture-handler/lib/commonjs/specs/NativeRNGestureHandlerModule.js
+++ /dev/null
@@ -1,13 +0,0 @@
-"use strict";
-
-Object.defineProperty(exports, "__esModule", {
-  value: true
-});
-exports.default = void 0;
-
-var _reactNative = require("react-native");
-
-var _default = _reactNative.TurboModuleRegistry.getEnforcing('RNGestureHandlerModule');
-
-exports.default = _default;
-//# sourceMappingURL=NativeRNGestureHandlerModule.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/commonjs/specs/NativeRNGestureHandlerModule.js.map b/node_modules/react-native-gesture-handler/lib/commonjs/specs/NativeRNGestureHandlerModule.js.map
deleted file mode 100644
index 04ca4e0..0000000
--- a/node_modules/react-native-gesture-handler/lib/commonjs/specs/NativeRNGestureHandlerModule.js.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"sources":["NativeRNGestureHandlerModule.ts"],"names":["TurboModuleRegistry","getEnforcing"],"mappings":";;;;;;;AAAA;;eAyBeA,iCAAoBC,YAApB,CAAuC,wBAAvC,C","sourcesContent":["import { TurboModuleRegistry, TurboModule } from 'react-native';\nimport { Double } from 'react-native/Libraries/Types/CodegenTypes';\n\nexport interface Spec extends TurboModule {\n  handleSetJSResponder: (tag: Double, blockNativeResponder: boolean) => void;\n  handleClearJSResponder: () => void;\n  createGestureHandler: (\n    handlerName: string,\n    handlerTag: Double,\n    // Record<> is not supported by codegen\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    config: Object\n  ) => void;\n  attachGestureHandler: (\n    handlerTag: Double,\n    newView: Double,\n    actionType: Double\n  ) => void;\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  updateGestureHandler: (handlerTag: Double, newConfig: Object) => void;\n  dropGestureHandler: (handlerTag: Double) => void;\n  install: () => boolean;\n  flushOperations: () => void;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('RNGestureHandlerModule');\n"]}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/commonjs/specs/NativeRNGestureHandlerModule.ts b/node_modules/react-native-gesture-handler/lib/commonjs/specs/NativeRNGestureHandlerModule.ts
new file mode 100644
index 0000000..21b1983
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/commonjs/specs/NativeRNGestureHandlerModule.ts
@@ -0,0 +1,26 @@
+import { TurboModuleRegistry, TurboModule } from 'react-native';
+import { Double } from 'react-native/Libraries/Types/CodegenTypes';
+
+export interface Spec extends TurboModule {
+  handleSetJSResponder: (tag: Double, blockNativeResponder: boolean) => void;
+  handleClearJSResponder: () => void;
+  createGestureHandler: (
+    handlerName: string,
+    handlerTag: Double,
+    // Record<> is not supported by codegen
+    // eslint-disable-next-line @typescript-eslint/ban-types
+    config: Object
+  ) => void;
+  attachGestureHandler: (
+    handlerTag: Double,
+    newView: Double,
+    actionType: Double
+  ) => void;
+  // eslint-disable-next-line @typescript-eslint/ban-types
+  updateGestureHandler: (handlerTag: Double, newConfig: Object) => void;
+  dropGestureHandler: (handlerTag: Double) => void;
+  install: () => boolean;
+  flushOperations: () => void;
+}
+
+export default TurboModuleRegistry.getEnforcing<Spec>('RNGestureHandlerModule');
diff --git a/node_modules/react-native-gesture-handler/lib/commonjs/specs/RNGestureHandlerButtonNativeComponent.js b/node_modules/react-native-gesture-handler/lib/commonjs/specs/RNGestureHandlerButtonNativeComponent.js
deleted file mode 100644
index 34888e0..0000000
--- a/node_modules/react-native-gesture-handler/lib/commonjs/specs/RNGestureHandlerButtonNativeComponent.js
+++ /dev/null
@@ -1,15 +0,0 @@
-"use strict";
-
-Object.defineProperty(exports, "__esModule", {
-  value: true
-});
-exports.default = void 0;
-
-var _codegenNativeComponent = _interopRequireDefault(require("react-native/Libraries/Utilities/codegenNativeComponent"));
-
-function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
-
-var _default = (0, _codegenNativeComponent.default)('RNGestureHandlerButton');
-
-exports.default = _default;
-//# sourceMappingURL=RNGestureHandlerButtonNativeComponent.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/commonjs/specs/RNGestureHandlerButtonNativeComponent.js.map b/node_modules/react-native-gesture-handler/lib/commonjs/specs/RNGestureHandlerButtonNativeComponent.js.map
deleted file mode 100644
index ddd56c8..0000000
--- a/node_modules/react-native-gesture-handler/lib/commonjs/specs/RNGestureHandlerButtonNativeComponent.js.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"sources":["RNGestureHandlerButtonNativeComponent.ts"],"names":[],"mappings":";;;;;;;AAAA;;;;eAqBe,qCAAoC,wBAApC,C","sourcesContent":["import codegenNativeComponent from 'react-native/Libraries/Utilities/codegenNativeComponent';\nimport type {\n  Int32,\n  WithDefault,\n  Float,\n} from 'react-native/Libraries/Types/CodegenTypes';\nimport type { ViewProps, ColorValue } from 'react-native';\n\ninterface NativeProps extends ViewProps {\n  exclusive?: WithDefault<boolean, true>;\n  foreground?: boolean;\n  borderless?: boolean;\n  enabled?: WithDefault<boolean, true>;\n  rippleColor?: ColorValue;\n  rippleRadius?: Int32;\n  touchSoundDisabled?: WithDefault<boolean, false>;\n  borderWidth?: Float;\n  borderColor?: ColorValue;\n  borderStyle?: WithDefault<string, 'solid'>;\n}\n\nexport default codegenNativeComponent<NativeProps>('RNGestureHandlerButton');\n"]}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/commonjs/specs/RNGestureHandlerButtonNativeComponent.ts b/node_modules/react-native-gesture-handler/lib/commonjs/specs/RNGestureHandlerButtonNativeComponent.ts
new file mode 100644
index 0000000..8d4c3da
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/commonjs/specs/RNGestureHandlerButtonNativeComponent.ts
@@ -0,0 +1,22 @@
+import codegenNativeComponent from 'react-native/Libraries/Utilities/codegenNativeComponent';
+import type {
+  Int32,
+  WithDefault,
+  Float,
+} from 'react-native/Libraries/Types/CodegenTypes';
+import type { ViewProps, ColorValue } from 'react-native';
+
+interface NativeProps extends ViewProps {
+  exclusive?: WithDefault<boolean, true>;
+  foreground?: boolean;
+  borderless?: boolean;
+  enabled?: WithDefault<boolean, true>;
+  rippleColor?: ColorValue;
+  rippleRadius?: Int32;
+  touchSoundDisabled?: WithDefault<boolean, false>;
+  borderWidth?: Float;
+  borderColor?: ColorValue;
+  borderStyle?: WithDefault<string, 'solid'>;
+}
+
+export default codegenNativeComponent<NativeProps>('RNGestureHandlerButton');
diff --git a/node_modules/react-native-gesture-handler/lib/commonjs/specs/RNGestureHandlerRootViewNativeComponent.js b/node_modules/react-native-gesture-handler/lib/commonjs/specs/RNGestureHandlerRootViewNativeComponent.js
deleted file mode 100644
index 62d7eaf..0000000
--- a/node_modules/react-native-gesture-handler/lib/commonjs/specs/RNGestureHandlerRootViewNativeComponent.js
+++ /dev/null
@@ -1,15 +0,0 @@
-"use strict";
-
-Object.defineProperty(exports, "__esModule", {
-  value: true
-});
-exports.default = void 0;
-
-var _codegenNativeComponent = _interopRequireDefault(require("react-native/Libraries/Utilities/codegenNativeComponent"));
-
-function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
-
-var _default = (0, _codegenNativeComponent.default)('RNGestureHandlerRootView');
-
-exports.default = _default;
-//# sourceMappingURL=RNGestureHandlerRootViewNativeComponent.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/commonjs/specs/RNGestureHandlerRootViewNativeComponent.js.map b/node_modules/react-native-gesture-handler/lib/commonjs/specs/RNGestureHandlerRootViewNativeComponent.js.map
deleted file mode 100644
index 4cbee5f..0000000
--- a/node_modules/react-native-gesture-handler/lib/commonjs/specs/RNGestureHandlerRootViewNativeComponent.js.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"sources":["RNGestureHandlerRootViewNativeComponent.ts"],"names":[],"mappings":";;;;;;;AAAA;;;;eAKe,qCAAoC,0BAApC,C","sourcesContent":["import codegenNativeComponent from 'react-native/Libraries/Utilities/codegenNativeComponent';\nimport type { ViewProps } from 'react-native';\n\ninterface NativeProps extends ViewProps {}\n\nexport default codegenNativeComponent<NativeProps>('RNGestureHandlerRootView');\n"]}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/commonjs/specs/RNGestureHandlerRootViewNativeComponent.ts b/node_modules/react-native-gesture-handler/lib/commonjs/specs/RNGestureHandlerRootViewNativeComponent.ts
new file mode 100644
index 0000000..e92061f
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/commonjs/specs/RNGestureHandlerRootViewNativeComponent.ts
@@ -0,0 +1,6 @@
+import codegenNativeComponent from 'react-native/Libraries/Utilities/codegenNativeComponent';
+import type { ViewProps } from 'react-native';
+
+interface NativeProps extends ViewProps {}
+
+export default codegenNativeComponent<NativeProps>('RNGestureHandlerRootView');
diff --git a/node_modules/react-native-gesture-handler/lib/commonjs/web/handlers/NativeViewGestureHandler.js b/node_modules/react-native-gesture-handler/lib/commonjs/web/handlers/NativeViewGestureHandler.js
deleted file mode 100644
index 6abde18..0000000
--- a/node_modules/react-native-gesture-handler/lib/commonjs/web/handlers/NativeViewGestureHandler.js
+++ /dev/null
@@ -1,189 +0,0 @@
-"use strict";
-
-Object.defineProperty(exports, "__esModule", {
-  value: true
-});
-exports.default = void 0;
-
-var _reactNative = require("react-native");
-
-var _State = require("../../State");
-
-var _constants = require("../constants");
-
-var _GestureHandler = _interopRequireDefault(require("./GestureHandler"));
-
-function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
-
-function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
-
-class NativeViewGestureHandler extends _GestureHandler.default {
-  constructor(...args) {
-    super(...args);
-
-    _defineProperty(this, "buttonRole", void 0);
-
-    _defineProperty(this, "shouldActivateOnStart", false);
-
-    _defineProperty(this, "disallowInterruption", false);
-
-    _defineProperty(this, "startX", 0);
-
-    _defineProperty(this, "startY", 0);
-
-    _defineProperty(this, "minDistSq", _constants.DEFAULT_TOUCH_SLOP * _constants.DEFAULT_TOUCH_SLOP);
-  }
-
-  init(ref, propsRef) {
-    super.init(ref, propsRef);
-    this.shouldCancelWhenOutside = true;
-
-    if (_reactNative.Platform.OS !== 'web') {
-      return;
-    }
-
-    const view = this.delegate.view;
-    this.restoreViewStyles(view);
-    this.buttonRole = view.getAttribute('role') === 'button';
-  }
-
-  updateGestureConfig({
-    enabled = true,
-    ...props
-  }) {
-    super.updateGestureConfig({
-      enabled: enabled,
-      ...props
-    });
-
-    if (this.config.shouldActivateOnStart !== undefined) {
-      this.shouldActivateOnStart = this.config.shouldActivateOnStart;
-    }
-
-    if (this.config.disallowInterruption !== undefined) {
-      this.disallowInterruption = this.config.disallowInterruption;
-    }
-
-    const view = this.delegate.view;
-    this.restoreViewStyles(view);
-  }
-
-  restoreViewStyles(view) {
-    if (!view) {
-      return;
-    }
-
-    view.style['touchAction'] = 'auto'; // @ts-ignore Turns on defualt touch behavior on Safari
-
-    view.style['WebkitTouchCallout'] = 'auto';
-  }
-
-  onPointerDown(event) {
-    this.tracker.addToTracker(event);
-    super.onPointerDown(event);
-    this.newPointerAction();
-    this.tryToSendTouchEvent(event);
-  }
-
-  onPointerAdd(event) {
-    this.tracker.addToTracker(event);
-    super.onPointerAdd(event);
-    this.newPointerAction();
-  }
-
-  newPointerAction() {
-    const lastCoords = this.tracker.getAbsoluteCoordsAverage();
-    this.startX = lastCoords.x;
-    this.startY = lastCoords.y;
-
-    if (this.state !== _State.State.UNDETERMINED) {
-      return;
-    }
-
-    this.begin();
-    const view = this.delegate.view;
-    const isRNGHText = view.hasAttribute('rnghtext');
-
-    if (this.buttonRole || isRNGHText) {
-      this.activate();
-    }
-  }
-
-  onPointerMove(event) {
-    this.tracker.track(event);
-    const lastCoords = this.tracker.getAbsoluteCoordsAverage();
-    const dx = this.startX - lastCoords.x;
-    const dy = this.startY - lastCoords.y;
-    const distSq = dx * dx + dy * dy;
-
-    if (distSq >= this.minDistSq) {
-      if (this.buttonRole && this.state === _State.State.ACTIVE) {
-        this.cancel();
-      } else if (!this.buttonRole && this.state === _State.State.BEGAN) {
-        this.activate();
-      }
-    }
-  }
-
-  onPointerLeave() {
-    if (this.state === _State.State.BEGAN || this.state === _State.State.ACTIVE) {
-      this.cancel();
-    }
-  }
-
-  onPointerUp(event) {
-    super.onPointerUp(event);
-    this.onUp(event);
-  }
-
-  onPointerRemove(event) {
-    super.onPointerRemove(event);
-    this.onUp(event);
-  }
-
-  onUp(event) {
-    this.tracker.removeFromTracker(event.pointerId);
-
-    if (this.tracker.trackedPointersCount === 0) {
-      if (this.state === _State.State.ACTIVE) {
-        this.end();
-      } else {
-        this.fail();
-      }
-    }
-  }
-
-  shouldRecognizeSimultaneously(handler) {
-    if (super.shouldRecognizeSimultaneously(handler)) {
-      return true;
-    }
-
-    if (handler instanceof NativeViewGestureHandler && handler.state === _State.State.ACTIVE && handler.disallowsInterruption()) {
-      return false;
-    }
-
-    const canBeInterrupted = !this.disallowInterruption;
-
-    if (this.state === _State.State.ACTIVE && handler.state === _State.State.ACTIVE && canBeInterrupted) {
-      return false;
-    }
-
-    return this.state === _State.State.ACTIVE && canBeInterrupted && handler.handlerTag > 0;
-  }
-
-  shouldBeCancelledByOther(_handler) {
-    return !this.disallowInterruption;
-  }
-
-  disallowsInterruption() {
-    return this.disallowInterruption;
-  }
-
-  isButton() {
-    return this.buttonRole;
-  }
-
-}
-
-exports.default = NativeViewGestureHandler;
-//# sourceMappingURL=NativeViewGestureHandler.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/commonjs/web/handlers/NativeViewGestureHandler.js.map b/node_modules/react-native-gesture-handler/lib/commonjs/web/handlers/NativeViewGestureHandler.js.map
deleted file mode 100644
index 08e64c9..0000000
--- a/node_modules/react-native-gesture-handler/lib/commonjs/web/handlers/NativeViewGestureHandler.js.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"sources":["NativeViewGestureHandler.ts"],"names":["NativeViewGestureHandler","GestureHandler","DEFAULT_TOUCH_SLOP","init","ref","propsRef","shouldCancelWhenOutside","Platform","OS","view","delegate","restoreViewStyles","buttonRole","getAttribute","updateGestureConfig","enabled","props","config","shouldActivateOnStart","undefined","disallowInterruption","style","onPointerDown","event","tracker","addToTracker","newPointerAction","tryToSendTouchEvent","onPointerAdd","lastCoords","getAbsoluteCoordsAverage","startX","x","startY","y","state","State","UNDETERMINED","begin","isRNGHText","hasAttribute","activate","onPointerMove","track","dx","dy","distSq","minDistSq","ACTIVE","cancel","BEGAN","onPointerLeave","onPointerUp","onUp","onPointerRemove","removeFromTracker","pointerId","trackedPointersCount","end","fail","shouldRecognizeSimultaneously","handler","disallowsInterruption","canBeInterrupted","handlerTag","shouldBeCancelledByOther","_handler","isButton"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAGA;;;;;;AACe,MAAMA,wBAAN,SAAuCC,uBAAvC,CAAsD;AAAA;AAAA;;AAAA;;AAAA,mDAKnC,KALmC;;AAAA,kDAMpC,KANoC;;AAAA,oCAQlD,CARkD;;AAAA,oCASlD,CATkD;;AAAA,uCAU/CC,gCAAqBA,6BAV0B;AAAA;;AAY5DC,EAAAA,IAAI,CAACC,GAAD,EAAcC,QAAd,EAAwD;AACjE,UAAMF,IAAN,CAAWC,GAAX,EAAgBC,QAAhB;AAEA,SAAKC,uBAAL,GAA+B,IAA/B;;AAEA,QAAIC,sBAASC,EAAT,KAAgB,KAApB,EAA2B;AACzB;AACD;;AAED,UAAMC,IAAI,GAAG,KAAKC,QAAL,CAAcD,IAA3B;AAEA,SAAKE,iBAAL,CAAuBF,IAAvB;AACA,SAAKG,UAAL,GAAkBH,IAAI,CAACI,YAAL,CAAkB,MAAlB,MAA8B,QAAhD;AACD;;AAEMC,EAAAA,mBAAmB,CAAC;AAAEC,IAAAA,OAAO,GAAG,IAAZ;AAAkB,OAAGC;AAArB,GAAD,EAA6C;AACrE,UAAMF,mBAAN,CAA0B;AAAEC,MAAAA,OAAO,EAAEA,OAAX;AAAoB,SAAGC;AAAvB,KAA1B;;AAEA,QAAI,KAAKC,MAAL,CAAYC,qBAAZ,KAAsCC,SAA1C,EAAqD;AACnD,WAAKD,qBAAL,GAA6B,KAAKD,MAAL,CAAYC,qBAAzC;AACD;;AACD,QAAI,KAAKD,MAAL,CAAYG,oBAAZ,KAAqCD,SAAzC,EAAoD;AAClD,WAAKC,oBAAL,GAA4B,KAAKH,MAAL,CAAYG,oBAAxC;AACD;;AAED,UAAMX,IAAI,GAAG,KAAKC,QAAL,CAAcD,IAA3B;AACA,SAAKE,iBAAL,CAAuBF,IAAvB;AACD;;AAEOE,EAAAA,iBAAiB,CAACF,IAAD,EAAoB;AAC3C,QAAI,CAACA,IAAL,EAAW;AACT;AACD;;AAEDA,IAAAA,IAAI,CAACY,KAAL,CAAW,aAAX,IAA4B,MAA5B,CAL2C,CAM3C;;AACAZ,IAAAA,IAAI,CAACY,KAAL,CAAW,oBAAX,IAAmC,MAAnC;AACD;;AAESC,EAAAA,aAAa,CAACC,KAAD,EAA4B;AACjD,SAAKC,OAAL,CAAaC,YAAb,CAA0BF,KAA1B;AACA,UAAMD,aAAN,CAAoBC,KAApB;AACA,SAAKG,gBAAL;AAEA,SAAKC,mBAAL,CAAyBJ,KAAzB;AACD;;AAESK,EAAAA,YAAY,CAACL,KAAD,EAA4B;AAChD,SAAKC,OAAL,CAAaC,YAAb,CAA0BF,KAA1B;AACA,UAAMK,YAAN,CAAmBL,KAAnB;AACA,SAAKG,gBAAL;AACD;;AAEOA,EAAAA,gBAAgB,GAAS;AAC/B,UAAMG,UAAU,GAAG,KAAKL,OAAL,CAAaM,wBAAb,EAAnB;AACA,SAAKC,MAAL,GAAcF,UAAU,CAACG,CAAzB;AACA,SAAKC,MAAL,GAAcJ,UAAU,CAACK,CAAzB;;AAEA,QAAI,KAAKC,KAAL,KAAeC,aAAMC,YAAzB,EAAuC;AACrC;AACD;;AAED,SAAKC,KAAL;AAEA,UAAM7B,IAAI,GAAG,KAAKC,QAAL,CAAcD,IAA3B;AACA,UAAM8B,UAAU,GAAG9B,IAAI,CAAC+B,YAAL,CAAkB,UAAlB,CAAnB;;AAEA,QAAI,KAAK5B,UAAL,IAAmB2B,UAAvB,EAAmC;AACjC,WAAKE,QAAL;AACD;AACF;;AAESC,EAAAA,aAAa,CAACnB,KAAD,EAA4B;AACjD,SAAKC,OAAL,CAAamB,KAAb,CAAmBpB,KAAnB;AAEA,UAAMM,UAAU,GAAG,KAAKL,OAAL,CAAaM,wBAAb,EAAnB;AACA,UAAMc,EAAE,GAAG,KAAKb,MAAL,GAAcF,UAAU,CAACG,CAApC;AACA,UAAMa,EAAE,GAAG,KAAKZ,MAAL,GAAcJ,UAAU,CAACK,CAApC;AACA,UAAMY,MAAM,GAAGF,EAAE,GAAGA,EAAL,GAAUC,EAAE,GAAGA,EAA9B;;AAEA,QAAIC,MAAM,IAAI,KAAKC,SAAnB,EAA8B;AAC5B,UAAI,KAAKnC,UAAL,IAAmB,KAAKuB,KAAL,KAAeC,aAAMY,MAA5C,EAAoD;AAClD,aAAKC,MAAL;AACD,OAFD,MAEO,IAAI,CAAC,KAAKrC,UAAN,IAAoB,KAAKuB,KAAL,KAAeC,aAAMc,KAA7C,EAAoD;AACzD,aAAKT,QAAL;AACD;AACF;AACF;;AAESU,EAAAA,cAAc,GAAS;AAC/B,QAAI,KAAKhB,KAAL,KAAeC,aAAMc,KAArB,IAA8B,KAAKf,KAAL,KAAeC,aAAMY,MAAvD,EAA+D;AAC7D,WAAKC,MAAL;AACD;AACF;;AAESG,EAAAA,WAAW,CAAC7B,KAAD,EAA4B;AAC/C,UAAM6B,WAAN,CAAkB7B,KAAlB;AACA,SAAK8B,IAAL,CAAU9B,KAAV;AACD;;AAES+B,EAAAA,eAAe,CAAC/B,KAAD,EAA4B;AACnD,UAAM+B,eAAN,CAAsB/B,KAAtB;AACA,SAAK8B,IAAL,CAAU9B,KAAV;AACD;;AAEO8B,EAAAA,IAAI,CAAC9B,KAAD,EAA4B;AACtC,SAAKC,OAAL,CAAa+B,iBAAb,CAA+BhC,KAAK,CAACiC,SAArC;;AAEA,QAAI,KAAKhC,OAAL,CAAaiC,oBAAb,KAAsC,CAA1C,EAA6C;AAC3C,UAAI,KAAKtB,KAAL,KAAeC,aAAMY,MAAzB,EAAiC;AAC/B,aAAKU,GAAL;AACD,OAFD,MAEO;AACL,aAAKC,IAAL;AACD;AACF;AACF;;AAEMC,EAAAA,6BAA6B,CAACC,OAAD,EAAmC;AACrE,QAAI,MAAMD,6BAAN,CAAoCC,OAApC,CAAJ,EAAkD;AAChD,aAAO,IAAP;AACD;;AAED,QACEA,OAAO,YAAY7D,wBAAnB,IACA6D,OAAO,CAAC1B,KAAR,KAAkBC,aAAMY,MADxB,IAEAa,OAAO,CAACC,qBAAR,EAHF,EAIE;AACA,aAAO,KAAP;AACD;;AAED,UAAMC,gBAAgB,GAAG,CAAC,KAAK3C,oBAA/B;;AAEA,QACE,KAAKe,KAAL,KAAeC,aAAMY,MAArB,IACAa,OAAO,CAAC1B,KAAR,KAAkBC,aAAMY,MADxB,IAEAe,gBAHF,EAIE;AACA,aAAO,KAAP;AACD;;AAED,WACE,KAAK5B,KAAL,KAAeC,aAAMY,MAArB,IAA+Be,gBAA/B,IAAmDF,OAAO,CAACG,UAAR,GAAqB,CAD1E;AAGD;;AAEMC,EAAAA,wBAAwB,CAACC,QAAD,EAAoC;AACjE,WAAO,CAAC,KAAK9C,oBAAb;AACD;;AAEM0C,EAAAA,qBAAqB,GAAY;AACtC,WAAO,KAAK1C,oBAAZ;AACD;;AAEM+C,EAAAA,QAAQ,GAAY;AACzB,WAAO,KAAKvD,UAAZ;AACD;;AAvKkE","sourcesContent":["import { Platform } from 'react-native';\nimport { State } from '../../State';\nimport { DEFAULT_TOUCH_SLOP } from '../constants';\nimport { AdaptedEvent, Config } from '../interfaces';\n\nimport GestureHandler from './GestureHandler';\nexport default class NativeViewGestureHandler extends GestureHandler {\n  private buttonRole!: boolean;\n\n  // TODO: Implement logic for activation on start\n  // @ts-ignore Logic yet to be implemented\n  private shouldActivateOnStart = false;\n  private disallowInterruption = false;\n\n  private startX = 0;\n  private startY = 0;\n  private minDistSq = DEFAULT_TOUCH_SLOP * DEFAULT_TOUCH_SLOP;\n\n  public init(ref: number, propsRef: React.RefObject<unknown>): void {\n    super.init(ref, propsRef);\n\n    this.shouldCancelWhenOutside = true;\n\n    if (Platform.OS !== 'web') {\n      return;\n    }\n\n    const view = this.delegate.view as HTMLElement;\n\n    this.restoreViewStyles(view);\n    this.buttonRole = view.getAttribute('role') === 'button';\n  }\n\n  public updateGestureConfig({ enabled = true, ...props }: Config): void {\n    super.updateGestureConfig({ enabled: enabled, ...props });\n\n    if (this.config.shouldActivateOnStart !== undefined) {\n      this.shouldActivateOnStart = this.config.shouldActivateOnStart;\n    }\n    if (this.config.disallowInterruption !== undefined) {\n      this.disallowInterruption = this.config.disallowInterruption;\n    }\n\n    const view = this.delegate.view as HTMLElement;\n    this.restoreViewStyles(view);\n  }\n\n  private restoreViewStyles(view: HTMLElement) {\n    if (!view) {\n      return;\n    }\n\n    view.style['touchAction'] = 'auto';\n    // @ts-ignore Turns on defualt touch behavior on Safari\n    view.style['WebkitTouchCallout'] = 'auto';\n  }\n\n  protected onPointerDown(event: AdaptedEvent): void {\n    this.tracker.addToTracker(event);\n    super.onPointerDown(event);\n    this.newPointerAction();\n\n    this.tryToSendTouchEvent(event);\n  }\n\n  protected onPointerAdd(event: AdaptedEvent): void {\n    this.tracker.addToTracker(event);\n    super.onPointerAdd(event);\n    this.newPointerAction();\n  }\n\n  private newPointerAction(): void {\n    const lastCoords = this.tracker.getAbsoluteCoordsAverage();\n    this.startX = lastCoords.x;\n    this.startY = lastCoords.y;\n\n    if (this.state !== State.UNDETERMINED) {\n      return;\n    }\n\n    this.begin();\n\n    const view = this.delegate.view as HTMLElement;\n    const isRNGHText = view.hasAttribute('rnghtext');\n\n    if (this.buttonRole || isRNGHText) {\n      this.activate();\n    }\n  }\n\n  protected onPointerMove(event: AdaptedEvent): void {\n    this.tracker.track(event);\n\n    const lastCoords = this.tracker.getAbsoluteCoordsAverage();\n    const dx = this.startX - lastCoords.x;\n    const dy = this.startY - lastCoords.y;\n    const distSq = dx * dx + dy * dy;\n\n    if (distSq >= this.minDistSq) {\n      if (this.buttonRole && this.state === State.ACTIVE) {\n        this.cancel();\n      } else if (!this.buttonRole && this.state === State.BEGAN) {\n        this.activate();\n      }\n    }\n  }\n\n  protected onPointerLeave(): void {\n    if (this.state === State.BEGAN || this.state === State.ACTIVE) {\n      this.cancel();\n    }\n  }\n\n  protected onPointerUp(event: AdaptedEvent): void {\n    super.onPointerUp(event);\n    this.onUp(event);\n  }\n\n  protected onPointerRemove(event: AdaptedEvent): void {\n    super.onPointerRemove(event);\n    this.onUp(event);\n  }\n\n  private onUp(event: AdaptedEvent): void {\n    this.tracker.removeFromTracker(event.pointerId);\n\n    if (this.tracker.trackedPointersCount === 0) {\n      if (this.state === State.ACTIVE) {\n        this.end();\n      } else {\n        this.fail();\n      }\n    }\n  }\n\n  public shouldRecognizeSimultaneously(handler: GestureHandler): boolean {\n    if (super.shouldRecognizeSimultaneously(handler)) {\n      return true;\n    }\n\n    if (\n      handler instanceof NativeViewGestureHandler &&\n      handler.state === State.ACTIVE &&\n      handler.disallowsInterruption()\n    ) {\n      return false;\n    }\n\n    const canBeInterrupted = !this.disallowInterruption;\n\n    if (\n      this.state === State.ACTIVE &&\n      handler.state === State.ACTIVE &&\n      canBeInterrupted\n    ) {\n      return false;\n    }\n\n    return (\n      this.state === State.ACTIVE && canBeInterrupted && handler.handlerTag > 0\n    );\n  }\n\n  public shouldBeCancelledByOther(_handler: GestureHandler): boolean {\n    return !this.disallowInterruption;\n  }\n\n  public disallowsInterruption(): boolean {\n    return this.disallowInterruption;\n  }\n\n  public isButton(): boolean {\n    return this.buttonRole;\n  }\n}\n"]}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/module/web/handlers/NativeViewGestureHandler.js b/node_modules/react-native-gesture-handler/lib/commonjs/web/handlers/NativeViewGestureHandler.ts
similarity index 59%
rename from node_modules/react-native-gesture-handler/lib/module/web/handlers/NativeViewGestureHandler.js
rename to node_modules/react-native-gesture-handler/lib/commonjs/web/handlers/NativeViewGestureHandler.ts
index a6e6d5c..75ea19b 100644
--- a/node_modules/react-native-gesture-handler/lib/module/web/handlers/NativeViewGestureHandler.js
+++ b/node_modules/react-native-gesture-handler/lib/commonjs/web/handlers/NativeViewGestureHandler.ts
@@ -1,84 +1,75 @@
-function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
-
 import { Platform } from 'react-native';
 import { State } from '../../State';
 import { DEFAULT_TOUCH_SLOP } from '../constants';
+import { AdaptedEvent, Config } from '../interfaces';
+
 import GestureHandler from './GestureHandler';
 export default class NativeViewGestureHandler extends GestureHandler {
-  constructor(...args) {
-    super(...args);
-
-    _defineProperty(this, "buttonRole", void 0);
-
-    _defineProperty(this, "shouldActivateOnStart", false);
+  private buttonRole!: boolean;
 
-    _defineProperty(this, "disallowInterruption", false);
+  // TODO: Implement logic for activation on start
+  // @ts-ignore Logic yet to be implemented
+  private shouldActivateOnStart = false;
+  private disallowInterruption = false;
 
-    _defineProperty(this, "startX", 0);
+  private startX = 0;
+  private startY = 0;
+  private minDistSq = DEFAULT_TOUCH_SLOP * DEFAULT_TOUCH_SLOP;
 
-    _defineProperty(this, "startY", 0);
-
-    _defineProperty(this, "minDistSq", DEFAULT_TOUCH_SLOP * DEFAULT_TOUCH_SLOP);
-  }
-
-  init(ref, propsRef) {
+  public init(ref: number, propsRef: React.RefObject<unknown>): void {
     super.init(ref, propsRef);
+
     this.shouldCancelWhenOutside = true;
 
     if (Platform.OS !== 'web') {
       return;
     }
 
-    const view = this.delegate.view;
+    const view = this.delegate.view as HTMLElement;
+
     this.restoreViewStyles(view);
     this.buttonRole = view.getAttribute('role') === 'button';
   }
 
-  updateGestureConfig({
-    enabled = true,
-    ...props
-  }) {
-    super.updateGestureConfig({
-      enabled: enabled,
-      ...props
-    });
+  public updateGestureConfig({ enabled = true, ...props }: Config): void {
+    super.updateGestureConfig({ enabled: enabled, ...props });
 
     if (this.config.shouldActivateOnStart !== undefined) {
       this.shouldActivateOnStart = this.config.shouldActivateOnStart;
     }
-
     if (this.config.disallowInterruption !== undefined) {
       this.disallowInterruption = this.config.disallowInterruption;
     }
 
-    const view = this.delegate.view;
+    const view = this.delegate.view as HTMLElement;
     this.restoreViewStyles(view);
   }
 
-  restoreViewStyles(view) {
+  private restoreViewStyles(view: HTMLElement) {
     if (!view) {
       return;
     }
 
-    view.style['touchAction'] = 'auto'; // @ts-ignore Turns on defualt touch behavior on Safari
-
+    view.style['touchAction'] = 'auto';
+    // @ts-ignore Turns on defualt touch behavior on Safari
     view.style['WebkitTouchCallout'] = 'auto';
   }
 
-  onPointerDown(event) {
+  protected onPointerDown(event: AdaptedEvent): void {
     this.tracker.addToTracker(event);
     super.onPointerDown(event);
     this.newPointerAction();
+
     this.tryToSendTouchEvent(event);
   }
 
-  onPointerAdd(event) {
+  protected onPointerAdd(event: AdaptedEvent): void {
     this.tracker.addToTracker(event);
     super.onPointerAdd(event);
     this.newPointerAction();
   }
 
-  newPointerAction() {
+  private newPointerAction(): void {
     const lastCoords = this.tracker.getAbsoluteCoordsAverage();
     this.startX = lastCoords.x;
     this.startY = lastCoords.y;
@@ -88,7 +79,8 @@ export default class NativeViewGestureHandler extends GestureHandler {
     }
 
     this.begin();
-    const view = this.delegate.view;
+
+    const view = this.delegate.view as HTMLElement;
     const isRNGHText = view.hasAttribute('rnghtext');
 
     if (this.buttonRole || isRNGHText) {
@@ -96,8 +88,9 @@ export default class NativeViewGestureHandler extends GestureHandler {
     }
   }
 
-  onPointerMove(event) {
+  protected onPointerMove(event: AdaptedEvent): void {
     this.tracker.track(event);
+
     const lastCoords = this.tracker.getAbsoluteCoordsAverage();
     const dx = this.startX - lastCoords.x;
     const dy = this.startY - lastCoords.y;
@@ -112,23 +105,23 @@ export default class NativeViewGestureHandler extends GestureHandler {
     }
   }
 
-  onPointerLeave() {
+  protected onPointerLeave(): void {
     if (this.state === State.BEGAN || this.state === State.ACTIVE) {
       this.cancel();
     }
   }
 
-  onPointerUp(event) {
+  protected onPointerUp(event: AdaptedEvent): void {
     super.onPointerUp(event);
     this.onUp(event);
   }
 
-  onPointerRemove(event) {
+  protected onPointerRemove(event: AdaptedEvent): void {
     super.onPointerRemove(event);
     this.onUp(event);
   }
 
-  onUp(event) {
+  private onUp(event: AdaptedEvent): void {
     this.tracker.removeFromTracker(event.pointerId);
 
     if (this.tracker.trackedPointersCount === 0) {
@@ -140,35 +133,43 @@ export default class NativeViewGestureHandler extends GestureHandler {
     }
   }
 
-  shouldRecognizeSimultaneously(handler) {
+  public shouldRecognizeSimultaneously(handler: GestureHandler): boolean {
     if (super.shouldRecognizeSimultaneously(handler)) {
       return true;
     }
 
-    if (handler instanceof NativeViewGestureHandler && handler.state === State.ACTIVE && handler.disallowsInterruption()) {
+    if (
+      handler instanceof NativeViewGestureHandler &&
+      handler.state === State.ACTIVE &&
+      handler.disallowsInterruption()
+    ) {
       return false;
     }
 
     const canBeInterrupted = !this.disallowInterruption;
 
-    if (this.state === State.ACTIVE && handler.state === State.ACTIVE && canBeInterrupted) {
+    if (
+      this.state === State.ACTIVE &&
+      handler.state === State.ACTIVE &&
+      canBeInterrupted
+    ) {
       return false;
     }
 
-    return this.state === State.ACTIVE && canBeInterrupted && handler.handlerTag > 0;
+    return (
+      this.state === State.ACTIVE && canBeInterrupted && handler.handlerTag > 0
+    );
   }
 
-  shouldBeCancelledByOther(_handler) {
+  public shouldBeCancelledByOther(_handler: GestureHandler): boolean {
     return !this.disallowInterruption;
   }
 
-  disallowsInterruption() {
+  public disallowsInterruption(): boolean {
     return this.disallowInterruption;
   }
 
-  isButton() {
+  public isButton(): boolean {
     return this.buttonRole;
   }
-
 }
-//# sourceMappingURL=NativeViewGestureHandler.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/commonjs/web_hammer/NativeViewGestureHandler.js b/node_modules/react-native-gesture-handler/lib/commonjs/web_hammer/NativeViewGestureHandler.js
deleted file mode 100644
index 524cb01..0000000
--- a/node_modules/react-native-gesture-handler/lib/commonjs/web_hammer/NativeViewGestureHandler.js
+++ /dev/null
@@ -1,66 +0,0 @@
-"use strict";
-
-Object.defineProperty(exports, "__esModule", {
-  value: true
-});
-exports.default = void 0;
-
-var _DiscreteGestureHandler = _interopRequireDefault(require("./DiscreteGestureHandler"));
-
-var NodeManager = _interopRequireWildcard(require("./NodeManager"));
-
-var _PressGestureHandler = _interopRequireDefault(require("./PressGestureHandler"));
-
-var _utils = require("./utils");
-
-function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }
-
-function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
-
-function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
-
-class NativeViewGestureHandler extends _PressGestureHandler.default {
-  get isNative() {
-    return true;
-  }
-
-  onRawEvent(ev) {
-    super.onRawEvent(ev);
-
-    if (!ev.isFinal) {
-      // if (this.ref instanceof ScrollView) {
-      if ((0, _utils.TEST_MIN_IF_NOT_NAN)((0, _utils.VEC_LEN_SQ)({
-        x: ev.deltaX,
-        y: ev.deltaY
-      }), 10)) {
-        // @ts-ignore FIXME(TS) config type
-        if (this.config.disallowInterruption) {
-          const gestures = Object.values(NodeManager.getNodes()).filter(gesture => {
-            const {
-              handlerTag,
-              view,
-              isGestureRunning
-            } = gesture;
-            return (// Check if this gesture isn't self
-              handlerTag !== this.handlerTag && // Ensure the gesture needs to be cancelled
-              isGestureRunning && // ScrollView can cancel discrete gestures like taps and presses
-              gesture instanceof _DiscreteGestureHandler.default && // Ensure a view exists and is a child of the current view
-              view && // @ts-ignore FIXME(TS) view type
-              this.view.contains(view)
-            );
-          }); // Cancel all of the gestures that passed the filter
-
-          for (const gesture of gestures) {
-            // TODO: Bacon: Send some cached event.
-            gesture.forceInvalidate(ev);
-          }
-        }
-      }
-    }
-  }
-
-}
-
-var _default = NativeViewGestureHandler;
-exports.default = _default;
-//# sourceMappingURL=NativeViewGestureHandler.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/commonjs/web_hammer/NativeViewGestureHandler.js.map b/node_modules/react-native-gesture-handler/lib/commonjs/web_hammer/NativeViewGestureHandler.js.map
deleted file mode 100644
index 1ae5654..0000000
--- a/node_modules/react-native-gesture-handler/lib/commonjs/web_hammer/NativeViewGestureHandler.js.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"sources":["NativeViewGestureHandler.ts"],"names":["NativeViewGestureHandler","PressGestureHandler","isNative","onRawEvent","ev","isFinal","x","deltaX","y","deltaY","config","disallowInterruption","gestures","Object","values","NodeManager","getNodes","filter","gesture","handlerTag","view","isGestureRunning","DiscreteGestureHandler","contains","forceInvalidate"],"mappings":";;;;;;;AAAA;;AAEA;;AACA;;AACA;;;;;;;;AAEA,MAAMA,wBAAN,SAAuCC,4BAAvC,CAA2D;AAC7C,MAARC,QAAQ,GAAG;AACb,WAAO,IAAP;AACD;;AAEDC,EAAAA,UAAU,CAACC,EAAD,EAAqB;AAC7B,UAAMD,UAAN,CAAiBC,EAAjB;;AACA,QAAI,CAACA,EAAE,CAACC,OAAR,EAAiB;AACf;AACA,UAAI,gCAAoB,uBAAW;AAAEC,QAAAA,CAAC,EAAEF,EAAE,CAACG,MAAR;AAAgBC,QAAAA,CAAC,EAAEJ,EAAE,CAACK;AAAtB,OAAX,CAApB,EAAgE,EAAhE,CAAJ,EAAyE;AACvE;AACA,YAAI,KAAKC,MAAL,CAAYC,oBAAhB,EAAsC;AACpC,gBAAMC,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAcC,WAAW,CAACC,QAAZ,EAAd,EAAsCC,MAAtC,CACdC,OAAD,IAAa;AACX,kBAAM;AAAEC,cAAAA,UAAF;AAAcC,cAAAA,IAAd;AAAoBC,cAAAA;AAApB,gBAAyCH,OAA/C;AACA,mBACE;AACAC,cAAAA,UAAU,KAAK,KAAKA,UAApB,IACA;AACAE,cAAAA,gBAFA,IAGA;AACAH,cAAAA,OAAO,YAAYI,+BAJnB,IAKA;AACAF,cAAAA,IANA,IAOA;AACA,mBAAKA,IAAL,CAAUG,QAAV,CAAmBH,IAAnB;AAVF;AAYD,WAfc,CAAjB,CADoC,CAkBpC;;AACA,eAAK,MAAMF,OAAX,IAAsBN,QAAtB,EAAgC;AAC9B;AACAM,YAAAA,OAAO,CAACM,eAAR,CAAwBpB,EAAxB;AACD;AACF;AACF;AACF;AACF;;AArCwD;;eAwC5CJ,wB","sourcesContent":["import DiscreteGestureHandler from './DiscreteGestureHandler';\nimport { HammerInputExt } from './GestureHandler';\nimport * as NodeManager from './NodeManager';\nimport PressGestureHandler from './PressGestureHandler';\nimport { TEST_MIN_IF_NOT_NAN, VEC_LEN_SQ } from './utils';\n\nclass NativeViewGestureHandler extends PressGestureHandler {\n  get isNative() {\n    return true;\n  }\n\n  onRawEvent(ev: HammerInputExt) {\n    super.onRawEvent(ev);\n    if (!ev.isFinal) {\n      // if (this.ref instanceof ScrollView) {\n      if (TEST_MIN_IF_NOT_NAN(VEC_LEN_SQ({ x: ev.deltaX, y: ev.deltaY }), 10)) {\n        // @ts-ignore FIXME(TS) config type\n        if (this.config.disallowInterruption) {\n          const gestures = Object.values(NodeManager.getNodes()).filter(\n            (gesture) => {\n              const { handlerTag, view, isGestureRunning } = gesture;\n              return (\n                // Check if this gesture isn't self\n                handlerTag !== this.handlerTag &&\n                // Ensure the gesture needs to be cancelled\n                isGestureRunning &&\n                // ScrollView can cancel discrete gestures like taps and presses\n                gesture instanceof DiscreteGestureHandler &&\n                // Ensure a view exists and is a child of the current view\n                view &&\n                // @ts-ignore FIXME(TS) view type\n                this.view.contains(view)\n              );\n            }\n          );\n          // Cancel all of the gestures that passed the filter\n          for (const gesture of gestures) {\n            // TODO: Bacon: Send some cached event.\n            gesture.forceInvalidate(ev);\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default NativeViewGestureHandler;\n"]}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/commonjs/web_hammer/NativeViewGestureHandler.ts b/node_modules/react-native-gesture-handler/lib/commonjs/web_hammer/NativeViewGestureHandler.ts
new file mode 100644
index 0000000..7deb5bd
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/commonjs/web_hammer/NativeViewGestureHandler.ts
@@ -0,0 +1,47 @@
+import DiscreteGestureHandler from './DiscreteGestureHandler';
+import { HammerInputExt } from './GestureHandler';
+import * as NodeManager from './NodeManager';
+import PressGestureHandler from './PressGestureHandler';
+import { TEST_MIN_IF_NOT_NAN, VEC_LEN_SQ } from './utils';
+
+class NativeViewGestureHandler extends PressGestureHandler {
+  get isNative() {
+    return true;
+  }
+
+  onRawEvent(ev: HammerInputExt) {
+    super.onRawEvent(ev);
+    if (!ev.isFinal) {
+      // if (this.ref instanceof ScrollView) {
+      if (TEST_MIN_IF_NOT_NAN(VEC_LEN_SQ({ x: ev.deltaX, y: ev.deltaY }), 10)) {
+        // @ts-ignore FIXME(TS) config type
+        if (this.config.disallowInterruption) {
+          const gestures = Object.values(NodeManager.getNodes()).filter(
+            (gesture) => {
+              const { handlerTag, view, isGestureRunning } = gesture;
+              return (
+                // Check if this gesture isn't self
+                handlerTag !== this.handlerTag &&
+                // Ensure the gesture needs to be cancelled
+                isGestureRunning &&
+                // ScrollView can cancel discrete gestures like taps and presses
+                gesture instanceof DiscreteGestureHandler &&
+                // Ensure a view exists and is a child of the current view
+                view &&
+                // @ts-ignore FIXME(TS) view type
+                this.view.contains(view)
+              );
+            }
+          );
+          // Cancel all of the gestures that passed the filter
+          for (const gesture of gestures) {
+            // TODO: Bacon: Send some cached event.
+            gesture.forceInvalidate(ev);
+          }
+        }
+      }
+    }
+  }
+}
+
+export default NativeViewGestureHandler;
diff --git a/node_modules/react-native-gesture-handler/lib/module/components/Pressable/StateMachine.js b/node_modules/react-native-gesture-handler/lib/module/components/Pressable/StateMachine.js
new file mode 100644
index 0000000..ed5b214
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/module/components/Pressable/StateMachine.js
@@ -0,0 +1,40 @@
+"use strict";
+
+class PressableStateMachine {
+  constructor() {
+    this.states = null;
+    this.currentStepIndex = 0;
+    this.eventPayload = null;
+  }
+  setStates(states) {
+    this.states = states;
+  }
+  reset() {
+    this.currentStepIndex = 0;
+    this.eventPayload = null;
+  }
+  handleEvent(eventName, eventPayload) {
+    if (!this.states) {
+      return;
+    }
+    const step = this.states[this.currentStepIndex];
+    this.eventPayload = eventPayload || this.eventPayload;
+    if (step.eventName !== eventName) {
+      if (this.currentStepIndex > 0) {
+        // retry with position at index 0
+        this.reset();
+        this.handleEvent(eventName, eventPayload);
+      }
+      return;
+    }
+    if (this.eventPayload && step.callback) {
+      step.callback(this.eventPayload);
+    }
+    this.currentStepIndex++;
+    if (this.currentStepIndex === this.states.length) {
+      this.reset();
+    }
+  }
+}
+export { PressableStateMachine };
+//# sourceMappingURL=StateMachine.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/module/components/Pressable/StateMachine.js.map b/node_modules/react-native-gesture-handler/lib/module/components/Pressable/StateMachine.js.map
new file mode 100644
index 0000000..f0429a3
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/module/components/Pressable/StateMachine.js.map
@@ -0,0 +1 @@
+{"version":3,"names":["PressableStateMachine","constructor","states","currentStepIndex","eventPayload","setStates","reset","handleEvent","eventName","step","callback","length"],"sourceRoot":"../../../../src","sources":["components/Pressable/StateMachine.tsx"],"mappings":";;AAOA,MAAMA,qBAAqB,CAAC;EAK1BC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACC,MAAM,GAAG,IAAI;IAClB,IAAI,CAACC,gBAAgB,GAAG,CAAC;IACzB,IAAI,CAACC,YAAY,GAAG,IAAI;EAC1B;EAEOC,SAASA,CAACH,MAAyB,EAAE;IAC1C,IAAI,CAACA,MAAM,GAAGA,MAAM;EACtB;EAEOI,KAAKA,CAAA,EAAG;IACb,IAAI,CAACH,gBAAgB,GAAG,CAAC;IACzB,IAAI,CAACC,YAAY,GAAG,IAAI;EAC1B;EAEOG,WAAWA,CAACC,SAAiB,EAAEJ,YAA6B,EAAE;IACnE,IAAI,CAAC,IAAI,CAACF,MAAM,EAAE;MAChB;IACF;IAEA,MAAMO,IAAI,GAAG,IAAI,CAACP,MAAM,CAAC,IAAI,CAACC,gBAAgB,CAAC;IAC/C,IAAI,CAACC,YAAY,GAAGA,YAAY,IAAI,IAAI,CAACA,YAAY;IAErD,IAAIK,IAAI,CAACD,SAAS,KAAKA,SAAS,EAAE;MAChC,IAAI,IAAI,CAACL,gBAAgB,GAAG,CAAC,EAAE;QAC7B;QACA,IAAI,CAACG,KAAK,CAAC,CAAC;QACZ,IAAI,CAACC,WAAW,CAACC,SAAS,EAAEJ,YAAY,CAAC;MAC3C;MACA;IACF;IAEA,IAAI,IAAI,CAACA,YAAY,IAAIK,IAAI,CAACC,QAAQ,EAAE;MACtCD,IAAI,CAACC,QAAQ,CAAC,IAAI,CAACN,YAAY,CAAC;IAClC;IAEA,IAAI,CAACD,gBAAgB,EAAE;IAEvB,IAAI,IAAI,CAACA,gBAAgB,KAAK,IAAI,CAACD,MAAM,CAACS,MAAM,EAAE;MAChD,IAAI,CAACL,KAAK,CAAC,CAAC;IACd;EACF;AACF;AAEA,SAASN,qBAAqB","ignoreList":[]}
diff --git a/node_modules/react-native-gesture-handler/lib/module/components/Pressable/stateDefinitions.js b/node_modules/react-native-gesture-handler/lib/module/components/Pressable/stateDefinitions.js
new file mode 100644
index 0000000..ad72703
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/module/components/Pressable/stateDefinitions.js
@@ -0,0 +1,82 @@
+"use strict";
+
+import { Platform } from 'react-native';
+export let StateMachineEvent = /*#__PURE__*/function (StateMachineEvent) {
+  StateMachineEvent["NATIVE_BEGIN"] = "nativeBegin";
+  StateMachineEvent["NATIVE_START"] = "nativeStart";
+  StateMachineEvent["FINALIZE"] = "finalize";
+  StateMachineEvent["LONG_PRESS_TOUCHES_DOWN"] = "longPressTouchesDown";
+  return StateMachineEvent;
+}({});
+function getAndroidStatesConfig(handlePressIn, handlePressOut) {
+  return [{
+    eventName: StateMachineEvent.NATIVE_BEGIN
+  }, {
+    eventName: StateMachineEvent.LONG_PRESS_TOUCHES_DOWN,
+    callback: handlePressIn
+  }, {
+    eventName: StateMachineEvent.FINALIZE,
+    callback: handlePressOut
+  }];
+}
+function getIosStatesConfig(handlePressIn, handlePressOut) {
+  return [{
+    eventName: StateMachineEvent.LONG_PRESS_TOUCHES_DOWN
+  }, {
+    eventName: StateMachineEvent.NATIVE_START,
+    callback: handlePressIn
+  }, {
+    eventName: StateMachineEvent.FINALIZE,
+    callback: handlePressOut
+  }];
+}
+function getWebStatesConfig(handlePressIn, handlePressOut) {
+  return [{
+    eventName: StateMachineEvent.NATIVE_BEGIN
+  }, {
+    eventName: StateMachineEvent.NATIVE_START
+  }, {
+    eventName: StateMachineEvent.LONG_PRESS_TOUCHES_DOWN,
+    callback: handlePressIn
+  }, {
+    eventName: StateMachineEvent.FINALIZE,
+    callback: handlePressOut
+  }];
+}
+function getMacosStatesConfig(handlePressIn, handlePressOut) {
+  return [{
+    eventName: StateMachineEvent.LONG_PRESS_TOUCHES_DOWN
+  }, {
+    eventName: StateMachineEvent.NATIVE_BEGIN,
+    callback: handlePressIn
+  }, {
+    eventName: StateMachineEvent.NATIVE_START
+  }, {
+    eventName: StateMachineEvent.FINALIZE,
+    callback: handlePressOut
+  }];
+}
+function getUniversalStatesConfig(handlePressIn, handlePressOut) {
+  return [{
+    eventName: StateMachineEvent.FINALIZE,
+    callback: event => {
+      handlePressIn(event);
+      handlePressOut(event);
+    }
+  }];
+}
+export function getStatesConfig(handlePressIn, handlePressOut) {
+  if (Platform.OS === 'android') {
+    return getAndroidStatesConfig(handlePressIn, handlePressOut);
+  } else if (Platform.OS === 'ios') {
+    return getIosStatesConfig(handlePressIn, handlePressOut);
+  } else if (Platform.OS === 'web') {
+    return getWebStatesConfig(handlePressIn, handlePressOut);
+  } else if (Platform.OS === 'macos') {
+    return getMacosStatesConfig(handlePressIn, handlePressOut);
+  } else {
+    // Unknown platform - using minimal universal setup.
+    return getUniversalStatesConfig(handlePressIn, handlePressOut);
+  }
+}
+//# sourceMappingURL=stateDefinitions.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/module/components/Pressable/stateDefinitions.js.map b/node_modules/react-native-gesture-handler/lib/module/components/Pressable/stateDefinitions.js.map
new file mode 100644
index 0000000..214b6be
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/module/components/Pressable/stateDefinitions.js.map
@@ -0,0 +1 @@
+{"version":3,"names":["Platform","StateMachineEvent","getAndroidStatesConfig","handlePressIn","handlePressOut","eventName","NATIVE_BEGIN","LONG_PRESS_TOUCHES_DOWN","callback","FINALIZE","getIosStatesConfig","NATIVE_START","getWebStatesConfig","getMacosStatesConfig","getUniversalStatesConfig","event","getStatesConfig","OS"],"sourceRoot":"../../../../src","sources":["components/Pressable/stateDefinitions.ts"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,cAAc;AAIvC,WAAYC,iBAAiB,0BAAjBA,iBAAiB;EAAjBA,iBAAiB;EAAjBA,iBAAiB;EAAjBA,iBAAiB;EAAjBA,iBAAiB;EAAA,OAAjBA,iBAAiB;AAAA;AAO7B,SAASC,sBAAsBA,CAC7BC,aAA8C,EAC9CC,cAA+C,EAC/C;EACA,OAAO,CACL;IACEC,SAAS,EAAEJ,iBAAiB,CAACK;EAC/B,CAAC,EACD;IACED,SAAS,EAAEJ,iBAAiB,CAACM,uBAAuB;IACpDC,QAAQ,EAAEL;EACZ,CAAC,EACD;IACEE,SAAS,EAAEJ,iBAAiB,CAACQ,QAAQ;IACrCD,QAAQ,EAAEJ;EACZ,CAAC,CACF;AACH;AAEA,SAASM,kBAAkBA,CACzBP,aAA8C,EAC9CC,cAA+C,EAC/C;EACA,OAAO,CACL;IACEC,SAAS,EAAEJ,iBAAiB,CAACM;EAC/B,CAAC,EACD;IACEF,SAAS,EAAEJ,iBAAiB,CAACU,YAAY;IACzCH,QAAQ,EAAEL;EACZ,CAAC,EACD;IACEE,SAAS,EAAEJ,iBAAiB,CAACQ,QAAQ;IACrCD,QAAQ,EAAEJ;EACZ,CAAC,CACF;AACH;AAEA,SAASQ,kBAAkBA,CACzBT,aAA8C,EAC9CC,cAA+C,EAC/C;EACA,OAAO,CACL;IACEC,SAAS,EAAEJ,iBAAiB,CAACK;EAC/B,CAAC,EACD;IACED,SAAS,EAAEJ,iBAAiB,CAACU;EAC/B,CAAC,EACD;IACEN,SAAS,EAAEJ,iBAAiB,CAACM,uBAAuB;IACpDC,QAAQ,EAAEL;EACZ,CAAC,EACD;IACEE,SAAS,EAAEJ,iBAAiB,CAACQ,QAAQ;IACrCD,QAAQ,EAAEJ;EACZ,CAAC,CACF;AACH;AAEA,SAASS,oBAAoBA,CAC3BV,aAA8C,EAC9CC,cAA+C,EAC/C;EACA,OAAO,CACL;IACEC,SAAS,EAAEJ,iBAAiB,CAACM;EAC/B,CAAC,EACD;IACEF,SAAS,EAAEJ,iBAAiB,CAACK,YAAY;IACzCE,QAAQ,EAAEL;EACZ,CAAC,EACD;IACEE,SAAS,EAAEJ,iBAAiB,CAACU;EAC/B,CAAC,EACD;IACEN,SAAS,EAAEJ,iBAAiB,CAACQ,QAAQ;IACrCD,QAAQ,EAAEJ;EACZ,CAAC,CACF;AACH;AAEA,SAASU,wBAAwBA,CAC/BX,aAA8C,EAC9CC,cAA+C,EAC/C;EACA,OAAO,CACL;IACEC,SAAS,EAAEJ,iBAAiB,CAACQ,QAAQ;IACrCD,QAAQ,EAAGO,KAAqB,IAAK;MACnCZ,aAAa,CAACY,KAAK,CAAC;MACpBX,cAAc,CAACW,KAAK,CAAC;IACvB;EACF,CAAC,CACF;AACH;AAEA,OAAO,SAASC,eAAeA,CAC7Bb,aAA8C,EAC9CC,cAA+C,EAC5B;EACnB,IAAIJ,QAAQ,CAACiB,EAAE,KAAK,SAAS,EAAE;IAC7B,OAAOf,sBAAsB,CAACC,aAAa,EAAEC,cAAc,CAAC;EAC9D,CAAC,MAAM,IAAIJ,QAAQ,CAACiB,EAAE,KAAK,KAAK,EAAE;IAChC,OAAOP,kBAAkB,CAACP,aAAa,EAAEC,cAAc,CAAC;EAC1D,CAAC,MAAM,IAAIJ,QAAQ,CAACiB,EAAE,KAAK,KAAK,EAAE;IAChC,OAAOL,kBAAkB,CAACT,aAAa,EAAEC,cAAc,CAAC;EAC1D,CAAC,MAAM,IAAIJ,QAAQ,CAACiB,EAAE,KAAK,OAAO,EAAE;IAClC,OAAOJ,oBAAoB,CAACV,aAAa,EAAEC,cAAc,CAAC;EAC5D,CAAC,MAAM;IACL;IACA,OAAOU,wBAAwB,CAACX,aAAa,EAAEC,cAAc,CAAC;EAChE;AACF","ignoreList":[]}
diff --git a/node_modules/react-native-gesture-handler/lib/module/components/ReanimatedSwipeable.js.map b/node_modules/react-native-gesture-handler/lib/module/components/ReanimatedSwipeable.js.map
deleted file mode 100644
index 6d3be6c..0000000
--- a/node_modules/react-native-gesture-handler/lib/module/components/ReanimatedSwipeable.js.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"sources":["ReanimatedSwipeable.tsx"],"names":["React","forwardRef","useCallback","useImperativeHandle","useMemo","GestureObjects","Gesture","GestureDetector","Animated","ReduceMotion","interpolate","measure","runOnJS","runOnUI","useAnimatedRef","useAnimatedStyle","useSharedValue","withSpring","I18nManager","StyleSheet","View","DRAG_TOSS","SwipeDirection","Swipeable","props","ref","defaultProps","friction","overshootFriction","dragOffset","enableTrackpadTwoFingerGesture","leftThreshold","rightThreshold","enabled","containerStyle","childrenContainerStyle","animationOptions","overshootLeft","overshootRight","testID","children","dragOffsetFromLeftEdge","dragOffsetFromRightEdge","onSwipeableOpenStartDrag","onSwipeableCloseStartDrag","onSwipeableWillOpen","onSwipeableWillClose","onSwipeableOpen","onSwipeableClose","renderLeftActions","renderRightActions","simultaneousWithExternalGesture","remainingProps","rowState","userDrag","appliedTranslation","rowWidth","leftWidth","rightWidth","showLeftProgress","showRightProgress","updateAnimatedEvent","shouldOvershootLeft","value","shouldOvershootRight","startOffset","offsetDrag","dispatchImmediateEvents","fromValue","toValue","RIGHT","LEFT","dispatchEndEvents","animateRow","velocityX","translationSpringConfig","mass","damping","stiffness","velocity","overshootClamping","reduceMotion","System","isClosing","moveToRight","usedWidth","progressSpringConfig","restDisplacementThreshold","restSpeedThreshold","frozenRowState","isFinished","progressTarget","Math","sign","max","leftLayoutRef","leftWrapperLayoutRef","rightLayoutRef","updateElementWidths","leftLayout","leftWrapperLayout","rightLayout","pageX","swipeableMethods","close","_WORKLET","openLeft","openRight","reset","onRowLayout","nativeEvent","layout","width","leftActionAnimation","opacity","leftElement","styles","leftActions","rightActionAnimation","rightElement","rightActions","handleRelease","event","translationX","leftThresholdProp","rightThresholdProp","dragStarted","tapGesture","tap","Tap","shouldCancelWhenOutside","onStart","Array","isArray","panGesture","pan","Pan","activeOffsetX","onUpdate","direction","onEnd","onFinalize","animatedStyle","transform","translateX","pointerEvents","swipeableComponent","container","create","overflow","absoluteFillObject","flexDirection","isRTL"],"mappings":"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","sourcesContent":["// Similarily to the DrawerLayout component this deserves to be put in a\n// separate repo. Although, keeping it here for the time being will allow us to\n// move faster and fix possible issues quicker\n\nimport React, {\n  ForwardedRef,\n  forwardRef,\n  useCallback,\n  useImperativeHandle,\n  useMemo,\n} from 'react';\nimport { GestureRef } from '../handlers/gestures/gesture';\nimport { GestureObjects as Gesture } from '../handlers/gestures/gestureObjects';\nimport { GestureDetector } from '../handlers/gestures/GestureDetector';\nimport {\n  GestureStateChangeEvent,\n  GestureUpdateEvent,\n} from '../handlers/gestureHandlerCommon';\nimport type { PanGestureHandlerProps } from '../handlers/PanGestureHandler';\nimport type { PanGestureHandlerEventPayload } from '../handlers/GestureHandlerEventPayload';\nimport Animated, {\n  ReduceMotion,\n  SharedValue,\n  interpolate,\n  measure,\n  runOnJS,\n  runOnUI,\n  useAnimatedRef,\n  useAnimatedStyle,\n  useSharedValue,\n  withSpring,\n} from 'react-native-reanimated';\nimport {\n  I18nManager,\n  LayoutChangeEvent,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nconst DRAG_TOSS = 0.05;\n\ntype SwipeableExcludes = Exclude<\n  keyof PanGestureHandlerProps,\n  'onGestureEvent' | 'onHandlerStateChange'\n>;\n\nenum SwipeDirection {\n  LEFT = 'left',\n  RIGHT = 'right',\n}\n\nexport interface SwipeableProps\n  extends Pick<PanGestureHandlerProps, SwipeableExcludes> {\n  /**\n   * Enables two-finger gestures on supported devices, for example iPads with\n   * trackpads. If not enabled the gesture will require click + drag, with\n   * `enableTrackpadTwoFingerGesture` swiping with two fingers will also trigger\n   * the gesture.\n   */\n  enableTrackpadTwoFingerGesture?: boolean;\n\n  /**\n   * Specifies how much the visual interaction will be delayed compared to the\n   * gesture distance. e.g. value of 1 will indicate that the swipeable panel\n   * should exactly follow the gesture, 2 means it is going to be two times\n   * \"slower\".\n   */\n  friction?: number;\n\n  /**\n   * Distance from the left edge at which released panel will animate to the\n   * open state (or the open panel will animate into the closed state). By\n   * default it's a half of the panel's width.\n   */\n  leftThreshold?: number;\n\n  /**\n   * Distance from the right edge at which released panel will animate to the\n   * open state (or the open panel will animate into the closed state). By\n   * default it's a half of the panel's width.\n   */\n  rightThreshold?: number;\n\n  /**\n   * Distance that the panel must be dragged from the left edge to be considered\n   * a swipe. The default value is 10.\n   */\n  dragOffsetFromLeftEdge?: number;\n\n  /**\n   * Distance that the panel must be dragged from the right edge to be considered\n   * a swipe. The default value is 10.\n   */\n  dragOffsetFromRightEdge?: number;\n\n  /**\n   * Value indicating if the swipeable panel can be pulled further than the left\n   * actions panel's width. It is set to true by default as long as the left\n   * panel render method is present.\n   */\n  overshootLeft?: boolean;\n\n  /**\n   * Value indicating if the swipeable panel can be pulled further than the\n   * right actions panel's width. It is set to true by default as long as the\n   * right panel render method is present.\n   */\n  overshootRight?: boolean;\n\n  /**\n   * Specifies how much the visual interaction will be delayed compared to the\n   * gesture distance at overshoot. Default value is 1, it mean no friction, for\n   * a native feel, try 8 or above.\n   */\n  overshootFriction?: number;\n\n  /**\n   * Called when action panel gets open (either right or left).\n   */\n  onSwipeableOpen?: (\n    direction: SwipeDirection.LEFT | SwipeDirection.RIGHT\n  ) => void;\n\n  /**\n   * Called when action panel is closed.\n   */\n  onSwipeableClose?: (\n    direction: SwipeDirection.LEFT | SwipeDirection.RIGHT\n  ) => void;\n\n  /**\n   * Called when action panel starts animating on open (either right or left).\n   */\n  onSwipeableWillOpen?: (\n    direction: SwipeDirection.LEFT | SwipeDirection.RIGHT\n  ) => void;\n\n  /**\n   * Called when action panel starts animating on close.\n   */\n  onSwipeableWillClose?: (\n    direction: SwipeDirection.LEFT | SwipeDirection.RIGHT\n  ) => void;\n\n  /**\n   * Called when action panel starts being shown on dragging to open.\n   */\n  onSwipeableOpenStartDrag?: (\n    direction: SwipeDirection.LEFT | SwipeDirection.RIGHT\n  ) => void;\n\n  /**\n   * Called when action panel starts being shown on dragging to close.\n   */\n  onSwipeableCloseStartDrag?: (\n    direction: SwipeDirection.LEFT | SwipeDirection.RIGHT\n  ) => void;\n\n  /**\n   * `progress`: Equals `0` when `swipeable` is closed, `1` when `swipeable` is opened.\n   *  - When the element overshoots it's opened position the value tends towards `Infinity`.\n   *  - Goes back to `1` when `swipeable` is released.\n   *\n   * `translation`: a horizontal offset of the `swipeable` relative to its closed position.\\\n   * `swipeableMethods`: provides an object exposing methods for controlling the `swipeable`.\n   *\n   * To support `rtl` flexbox layouts use `flexDirection` styling.\n   * */\n  renderLeftActions?: (\n    progress: SharedValue<number>,\n    translation: SharedValue<number>,\n    swipeableMethods: SwipeableMethods\n  ) => React.ReactNode;\n\n  /**\n   * `progress`: Equals `0` when `swipeable` is closed, `1` when `swipeable` is opened.\n   *  - When the element overshoots it's opened position the value tends towards `Infinity`.\n   *  - Goes back to `1` when `swipeable` is released.\n   *\n   * `translation`: a horizontal offset of the `swipeable` relative to its closed position.\\\n   * `swipeableMethods`: provides an object exposing methods for controlling the `swipeable`.\n   *\n   * To support `rtl` flexbox layouts use `flexDirection` styling.\n   * */\n  renderRightActions?: (\n    progress: SharedValue<number>,\n    translation: SharedValue<number>,\n    swipeableMethods: SwipeableMethods\n  ) => React.ReactNode;\n\n  animationOptions?: Record<string, unknown>;\n\n  /**\n   * Style object for the container (`Animated.View`), for example to override\n   * `overflow: 'hidden'`.\n   */\n  containerStyle?: StyleProp<ViewStyle>;\n\n  /**\n   * Style object for the children container (`Animated.View`), for example to\n   * apply `flex: 1`\n   */\n  childrenContainerStyle?: StyleProp<ViewStyle>;\n\n  /**\n   * A gesture object or an array of gesture objects containing the configuration and callbacks to be\n   * used with the swipeable's gesture handler.\n   */\n  simultaneousWithExternalGesture?:\n    | Exclude<GestureRef, number>\n    | Exclude<GestureRef, number>[];\n}\n\nexport interface SwipeableMethods {\n  close: () => void;\n  openLeft: () => void;\n  openRight: () => void;\n  reset: () => void;\n}\n\nconst Swipeable = forwardRef<SwipeableMethods, SwipeableProps>(\n  function Swipeable(\n    props: SwipeableProps,\n    ref: ForwardedRef<SwipeableMethods>\n  ) {\n    const defaultProps = {\n      friction: 1,\n      overshootFriction: 1,\n      dragOffset: 10,\n      enableTrackpadTwoFingerGesture: false,\n    };\n\n    const {\n      leftThreshold,\n      rightThreshold,\n      enabled,\n      containerStyle,\n      childrenContainerStyle,\n      animationOptions,\n      overshootLeft,\n      overshootRight,\n      testID,\n      children,\n      enableTrackpadTwoFingerGesture = defaultProps.enableTrackpadTwoFingerGesture,\n      dragOffsetFromLeftEdge = defaultProps.dragOffset,\n      dragOffsetFromRightEdge = defaultProps.dragOffset,\n      friction = defaultProps.friction,\n      overshootFriction = defaultProps.overshootFriction,\n      onSwipeableOpenStartDrag,\n      onSwipeableCloseStartDrag,\n      onSwipeableWillOpen,\n      onSwipeableWillClose,\n      onSwipeableOpen,\n      onSwipeableClose,\n      renderLeftActions,\n      renderRightActions,\n      simultaneousWithExternalGesture,\n      ...remainingProps\n    } = props;\n\n    const rowState = useSharedValue<number>(0);\n\n    const userDrag = useSharedValue<number>(0);\n\n    const appliedTranslation = useSharedValue<number>(0);\n\n    const rowWidth = useSharedValue<number>(0);\n    const leftWidth = useSharedValue<number>(0);\n    const rightWidth = useSharedValue<number>(0);\n\n    const showLeftProgress = useSharedValue<number>(0);\n    const showRightProgress = useSharedValue<number>(0);\n\n    const updateAnimatedEvent = useCallback(() => {\n      'worklet';\n\n      const shouldOvershootLeft = overshootLeft ?? leftWidth.value > 0;\n      const shouldOvershootRight = overshootRight ?? rightWidth.value > 0;\n\n      const startOffset =\n        rowState.value === 1\n          ? leftWidth.value\n          : rowState.value === -1\n            ? -rightWidth.value\n            : 0;\n\n      const offsetDrag = userDrag.value / friction + startOffset;\n\n      appliedTranslation.value = interpolate(\n        offsetDrag,\n        [\n          -rightWidth.value - 1,\n          -rightWidth.value,\n          leftWidth.value,\n          leftWidth.value + 1,\n        ],\n        [\n          -rightWidth.value -\n            (shouldOvershootRight ? 1 / overshootFriction : 0),\n          -rightWidth.value,\n          leftWidth.value,\n          leftWidth.value + (shouldOvershootLeft ? 1 / overshootFriction : 0),\n        ]\n      );\n\n      showLeftProgress.value =\n        leftWidth.value > 0\n          ? interpolate(\n              appliedTranslation.value,\n              [-1, 0, leftWidth.value],\n              [0, 0, 1]\n            )\n          : 0;\n\n      showRightProgress.value =\n        rightWidth.value > 0\n          ? interpolate(\n              appliedTranslation.value,\n              [-rightWidth.value, 0, 1],\n              [1, 0, 0]\n            )\n          : 0;\n    }, [\n      appliedTranslation,\n      friction,\n      leftWidth,\n      overshootFriction,\n      rightWidth,\n      rowState,\n      showLeftProgress,\n      showRightProgress,\n      userDrag,\n      overshootLeft,\n      overshootRight,\n    ]);\n\n    const dispatchImmediateEvents = useCallback(\n      (fromValue: number, toValue: number) => {\n        'worklet';\n        if (toValue > 0 && onSwipeableWillOpen) {\n          runOnJS(onSwipeableWillOpen)(SwipeDirection.RIGHT);\n        } else if (toValue < 0 && onSwipeableWillOpen) {\n          runOnJS(onSwipeableWillOpen)(SwipeDirection.LEFT);\n        } else if (onSwipeableWillClose) {\n          runOnJS(onSwipeableWillClose)(\n            fromValue > 0 ? SwipeDirection.LEFT : SwipeDirection.RIGHT\n          );\n        }\n      },\n      [onSwipeableWillClose, onSwipeableWillOpen]\n    );\n\n    const dispatchEndEvents = useCallback(\n      (fromValue: number, toValue: number) => {\n        'worklet';\n        if (toValue > 0 && onSwipeableOpen) {\n          runOnJS(onSwipeableOpen)(SwipeDirection.RIGHT);\n        } else if (toValue < 0 && onSwipeableOpen) {\n          runOnJS(onSwipeableOpen)(SwipeDirection.LEFT);\n        } else if (onSwipeableClose) {\n          runOnJS(onSwipeableClose)(\n            fromValue > 0 ? SwipeDirection.LEFT : SwipeDirection.RIGHT\n          );\n        }\n      },\n      [onSwipeableClose, onSwipeableOpen]\n    );\n\n    const animateRow: (toValue: number, velocityX?: number) => void =\n      useCallback(\n        (toValue: number, velocityX?: number) => {\n          'worklet';\n\n          const translationSpringConfig = {\n            mass: 2,\n            damping: 1000,\n            stiffness: 700,\n            velocity: velocityX,\n            overshootClamping: true,\n            reduceMotion: ReduceMotion.System,\n            ...animationOptions,\n          };\n\n          const isClosing = toValue === 0;\n          const moveToRight = isClosing ? rowState.value < 0 : toValue > 0;\n\n          const usedWidth = isClosing\n            ? moveToRight\n              ? rightWidth.value\n              : leftWidth.value\n            : moveToRight\n              ? leftWidth.value\n              : rightWidth.value;\n\n          const progressSpringConfig = {\n            ...translationSpringConfig,\n            restDisplacementThreshold: 0.01,\n            restSpeedThreshold: 0.01,\n            velocity:\n              velocityX &&\n              interpolate(velocityX, [-usedWidth, usedWidth], [-1, 1]),\n          };\n\n          const frozenRowState = rowState.value;\n\n          appliedTranslation.value = withSpring(\n            toValue,\n            translationSpringConfig,\n            (isFinished) => {\n              if (isFinished) {\n                dispatchEndEvents(frozenRowState, toValue);\n              }\n            }\n          );\n\n          const progressTarget = toValue === 0 ? 0 : 1 * Math.sign(toValue);\n\n          showLeftProgress.value = withSpring(\n            Math.max(progressTarget, 0),\n            progressSpringConfig\n          );\n\n          showRightProgress.value = withSpring(\n            Math.max(-progressTarget, 0),\n            progressSpringConfig\n          );\n\n          dispatchImmediateEvents(frozenRowState, toValue);\n\n          rowState.value = Math.sign(toValue);\n        },\n        [\n          rowState,\n          animationOptions,\n          appliedTranslation,\n          showLeftProgress,\n          leftWidth,\n          showRightProgress,\n          rightWidth,\n          dispatchImmediateEvents,\n          dispatchEndEvents,\n        ]\n      );\n\n    const leftLayoutRef = useAnimatedRef();\n    const leftWrapperLayoutRef = useAnimatedRef();\n    const rightLayoutRef = useAnimatedRef();\n\n    const updateElementWidths = useCallback(() => {\n      'worklet';\n      const leftLayout = measure(leftLayoutRef);\n      const leftWrapperLayout = measure(leftWrapperLayoutRef);\n      const rightLayout = measure(rightLayoutRef);\n      leftWidth.value =\n        (leftLayout?.pageX ?? 0) - (leftWrapperLayout?.pageX ?? 0);\n\n      rightWidth.value =\n        rowWidth.value -\n        (rightLayout?.pageX ?? rowWidth.value) +\n        (leftWrapperLayout?.pageX ?? 0);\n    }, [\n      leftLayoutRef,\n      leftWrapperLayoutRef,\n      rightLayoutRef,\n      leftWidth,\n      rightWidth,\n      rowWidth,\n    ]);\n\n    const swipeableMethods = useMemo<SwipeableMethods>(\n      () => ({\n        close() {\n          'worklet';\n          if (_WORKLET) {\n            animateRow(0);\n            return;\n          }\n          runOnUI(() => {\n            animateRow(0);\n          })();\n        },\n        openLeft() {\n          'worklet';\n          if (_WORKLET) {\n            updateElementWidths();\n            animateRow(leftWidth.value);\n            return;\n          }\n          runOnUI(() => {\n            updateElementWidths();\n            animateRow(leftWidth.value);\n          })();\n        },\n        openRight() {\n          'worklet';\n          if (_WORKLET) {\n            updateElementWidths();\n            animateRow(-rightWidth.value);\n            return;\n          }\n          runOnUI(() => {\n            updateElementWidths();\n            animateRow(-rightWidth.value);\n          })();\n        },\n        reset() {\n          'worklet';\n          userDrag.value = 0;\n          showLeftProgress.value = 0;\n          appliedTranslation.value = 0;\n          rowState.value = 0;\n        },\n      }),\n      [\n        animateRow,\n        updateElementWidths,\n        leftWidth,\n        rightWidth,\n        userDrag,\n        showLeftProgress,\n        appliedTranslation,\n        rowState,\n      ]\n    );\n\n    const onRowLayout = useCallback(\n      ({ nativeEvent }: LayoutChangeEvent) => {\n        rowWidth.value = nativeEvent.layout.width;\n      },\n      [rowWidth]\n    );\n\n    // As stated in `Dimensions.get` docstring, this function should be called on every render\n    // since dimensions may change (e.g. orientation change)\n\n    const leftActionAnimation = useAnimatedStyle(() => {\n      return {\n        opacity: showLeftProgress.value === 0 ? 0 : 1,\n      };\n    });\n\n    const leftElement = useCallback(\n      () => (\n        <Animated.View\n          ref={leftWrapperLayoutRef}\n          style={[styles.leftActions, leftActionAnimation]}>\n          {renderLeftActions?.(\n            showLeftProgress,\n            appliedTranslation,\n            swipeableMethods\n          )}\n          <Animated.View ref={leftLayoutRef} />\n        </Animated.View>\n      ),\n      [\n        appliedTranslation,\n        leftActionAnimation,\n        leftLayoutRef,\n        leftWrapperLayoutRef,\n        renderLeftActions,\n        showLeftProgress,\n        swipeableMethods,\n      ]\n    );\n\n    const rightActionAnimation = useAnimatedStyle(() => {\n      return {\n        opacity: showRightProgress.value === 0 ? 0 : 1,\n      };\n    });\n\n    const rightElement = useCallback(\n      () => (\n        <Animated.View style={[styles.rightActions, rightActionAnimation]}>\n          {renderRightActions?.(\n            showRightProgress,\n            appliedTranslation,\n            swipeableMethods\n          )}\n          <Animated.View ref={rightLayoutRef} />\n        </Animated.View>\n      ),\n      [\n        appliedTranslation,\n        renderRightActions,\n        rightActionAnimation,\n        rightLayoutRef,\n        showRightProgress,\n        swipeableMethods,\n      ]\n    );\n\n    const handleRelease = useCallback(\n      (event: GestureStateChangeEvent<PanGestureHandlerEventPayload>) => {\n        'worklet';\n        const { velocityX } = event;\n        userDrag.value = event.translationX;\n\n        const leftThresholdProp = leftThreshold ?? leftWidth.value / 2;\n        const rightThresholdProp = rightThreshold ?? rightWidth.value / 2;\n\n        const translationX =\n          (userDrag.value + DRAG_TOSS * velocityX) / friction;\n\n        let toValue = 0;\n\n        if (rowState.value === 0) {\n          if (translationX > leftThresholdProp) {\n            toValue = leftWidth.value;\n          } else if (translationX < -rightThresholdProp) {\n            toValue = -rightWidth.value;\n          }\n        } else if (rowState.value === 1) {\n          // Swiped to left\n          if (translationX > -leftThresholdProp) {\n            toValue = leftWidth.value;\n          }\n        } else {\n          // Swiped to right\n          if (translationX < rightThresholdProp) {\n            toValue = -rightWidth.value;\n          }\n        }\n\n        animateRow(toValue, velocityX / friction);\n      },\n      [\n        animateRow,\n        friction,\n        leftThreshold,\n        leftWidth,\n        rightThreshold,\n        rightWidth,\n        rowState,\n        userDrag,\n      ]\n    );\n\n    const close = useCallback(() => {\n      'worklet';\n      animateRow(0);\n    }, [animateRow]);\n\n    const dragStarted = useSharedValue<boolean>(false);\n\n    const tapGesture = useMemo(() => {\n      const tap = Gesture.Tap()\n        .shouldCancelWhenOutside(true)\n        .onStart(() => {\n          if (rowState.value !== 0) {\n            close();\n          }\n        });\n\n      if (!simultaneousWithExternalGesture) {\n        return tap;\n      }\n\n      if (Array.isArray(simultaneousWithExternalGesture)) {\n        tap.simultaneousWithExternalGesture(...simultaneousWithExternalGesture);\n      } else {\n        tap.simultaneousWithExternalGesture(simultaneousWithExternalGesture);\n      }\n\n      return tap;\n    }, [close, rowState, simultaneousWithExternalGesture]);\n\n    const panGesture = useMemo(() => {\n      const pan = Gesture.Pan()\n        .enabled(enabled !== false)\n        .enableTrackpadTwoFingerGesture(enableTrackpadTwoFingerGesture)\n        .activeOffsetX([-dragOffsetFromRightEdge, dragOffsetFromLeftEdge])\n        .onStart(updateElementWidths)\n        .onUpdate(\n          (event: GestureUpdateEvent<PanGestureHandlerEventPayload>) => {\n            userDrag.value = event.translationX;\n\n            const direction =\n              rowState.value === -1\n                ? SwipeDirection.RIGHT\n                : rowState.value === 1\n                  ? SwipeDirection.LEFT\n                  : event.translationX > 0\n                    ? SwipeDirection.RIGHT\n                    : SwipeDirection.LEFT;\n\n            if (!dragStarted.value) {\n              dragStarted.value = true;\n              if (rowState.value === 0 && onSwipeableOpenStartDrag) {\n                runOnJS(onSwipeableOpenStartDrag)(direction);\n              } else if (onSwipeableCloseStartDrag) {\n                runOnJS(onSwipeableCloseStartDrag)(direction);\n              }\n            }\n\n            updateAnimatedEvent();\n          }\n        )\n        .onEnd(\n          (event: GestureStateChangeEvent<PanGestureHandlerEventPayload>) => {\n            handleRelease(event);\n          }\n        )\n        .onFinalize(() => {\n          dragStarted.value = false;\n        });\n\n      if (!simultaneousWithExternalGesture) {\n        return pan;\n      }\n\n      if (Array.isArray(simultaneousWithExternalGesture)) {\n        pan.simultaneousWithExternalGesture(...simultaneousWithExternalGesture);\n      } else {\n        pan.simultaneousWithExternalGesture(simultaneousWithExternalGesture);\n      }\n\n      return pan;\n    }, [\n      dragOffsetFromLeftEdge,\n      dragOffsetFromRightEdge,\n      dragStarted,\n      enableTrackpadTwoFingerGesture,\n      enabled,\n      handleRelease,\n      onSwipeableCloseStartDrag,\n      onSwipeableOpenStartDrag,\n      rowState,\n      updateAnimatedEvent,\n      updateElementWidths,\n      userDrag,\n      simultaneousWithExternalGesture,\n    ]);\n\n    useImperativeHandle(ref, () => swipeableMethods, [swipeableMethods]);\n\n    const animatedStyle = useAnimatedStyle(\n      () => ({\n        transform: [{ translateX: appliedTranslation.value }],\n        pointerEvents: rowState.value === 0 ? 'auto' : 'box-only',\n      }),\n      [appliedTranslation, rowState]\n    );\n\n    const swipeableComponent = (\n      <GestureDetector gesture={panGesture} touchAction=\"pan-y\">\n        <Animated.View\n          {...remainingProps}\n          onLayout={onRowLayout}\n          style={[styles.container, containerStyle]}>\n          {leftElement()}\n          {rightElement()}\n          <GestureDetector gesture={tapGesture} touchAction=\"pan-y\">\n            <Animated.View style={[animatedStyle, childrenContainerStyle]}>\n              {children}\n            </Animated.View>\n          </GestureDetector>\n        </Animated.View>\n      </GestureDetector>\n    );\n\n    return testID ? (\n      <View testID={testID}>{swipeableComponent}</View>\n    ) : (\n      swipeableComponent\n    );\n  }\n);\n\nexport default Swipeable;\nexport type SwipeableRef = ForwardedRef<SwipeableMethods>;\n\nconst styles = StyleSheet.create({\n  container: {\n    overflow: 'hidden',\n  },\n  leftActions: {\n    ...StyleSheet.absoluteFillObject,\n    flexDirection: I18nManager.isRTL ? 'row-reverse' : 'row',\n    overflow: 'hidden',\n  },\n  rightActions: {\n    ...StyleSheet.absoluteFillObject,\n    flexDirection: I18nManager.isRTL ? 'row' : 'row-reverse',\n    overflow: 'hidden',\n  },\n});\n"]}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/module/components/ReanimatedSwipeable.js b/node_modules/react-native-gesture-handler/lib/module/components/ReanimatedSwipeable/ReanimatedSwipeable.js
similarity index 57%
rename from node_modules/react-native-gesture-handler/lib/module/components/ReanimatedSwipeable.js
rename to node_modules/react-native-gesture-handler/lib/module/components/ReanimatedSwipeable/ReanimatedSwipeable.js
index 3833ed6..5d0b9e3 100644
--- a/node_modules/react-native-gesture-handler/lib/module/components/ReanimatedSwipeable.js
+++ b/node_modules/react-native-gesture-handler/lib/module/components/ReanimatedSwipeable/ReanimatedSwipeable.js
@@ -1,29 +1,21 @@
-function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
-
-// Similarily to the DrawerLayout component this deserves to be put in a
-// separate repo. Although, keeping it here for the time being will allow us to
-// move faster and fix possible issues quicker
-import React, { forwardRef, useCallback, useImperativeHandle, useMemo } from 'react';
-import { GestureObjects as Gesture } from '../handlers/gestures/gestureObjects';
-import { GestureDetector } from '../handlers/gestures/GestureDetector';
-import Animated, { ReduceMotion, interpolate, measure, runOnJS, runOnUI, useAnimatedRef, useAnimatedStyle, useSharedValue, withSpring } from 'react-native-reanimated';
-import { I18nManager, StyleSheet, View } from 'react-native';
+"use strict";
+
+import { useMemo, useCallback, useImperativeHandle } from 'react';
+import { View, I18nManager, StyleSheet } from 'react-native';
+import Animated, { useSharedValue, interpolate, runOnJS, ReduceMotion, withSpring, useAnimatedRef, measure, runOnUI, useAnimatedStyle } from 'react-native-reanimated';
+import { SwipeDirection } from '.';
+import { Gesture } from '../..';
+import { GestureDetector } from '../../handlers/gestures/GestureDetector';
+import { applyRelationProp } from '../utils';
+import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
 const DRAG_TOSS = 0.05;
-var SwipeDirection;
-
-(function (SwipeDirection) {
-  SwipeDirection["LEFT"] = "left";
-  SwipeDirection["RIGHT"] = "right";
-})(SwipeDirection || (SwipeDirection = {}));
-
-const Swipeable = /*#__PURE__*/forwardRef(function Swipeable(props, ref) {
-  const defaultProps = {
-    friction: 1,
-    overshootFriction: 1,
-    dragOffset: 10,
-    enableTrackpadTwoFingerGesture: false
-  };
+const DEFAULT_FRICTION = 1;
+const DEFAULT_OVERSHOOT_FRICTION = 1;
+const DEFAULT_DRAG_OFFSET = 10;
+const DEFAULT_ENABLE_TRACKING_TWO_FINGER_GESTURE = false;
+const Swipeable = props => {
   const {
+    ref,
     leftThreshold,
     rightThreshold,
     enabled,
@@ -34,11 +26,11 @@ const Swipeable = /*#__PURE__*/forwardRef(function Swipeable(props, ref) {
     overshootRight,
     testID,
     children,
-    enableTrackpadTwoFingerGesture = defaultProps.enableTrackpadTwoFingerGesture,
-    dragOffsetFromLeftEdge = defaultProps.dragOffset,
-    dragOffsetFromRightEdge = defaultProps.dragOffset,
-    friction = defaultProps.friction,
-    overshootFriction = defaultProps.overshootFriction,
+    enableTrackpadTwoFingerGesture = DEFAULT_ENABLE_TRACKING_TWO_FINGER_GESTURE,
+    dragOffsetFromLeftEdge = DEFAULT_DRAG_OFFSET,
+    dragOffsetFromRightEdge = DEFAULT_DRAG_OFFSET,
+    friction = DEFAULT_FRICTION,
+    overshootFriction = DEFAULT_OVERSHOOT_FRICTION,
     onSwipeableOpenStartDrag,
     onSwipeableCloseStartDrag,
     onSwipeableWillOpen,
@@ -48,8 +40,16 @@ const Swipeable = /*#__PURE__*/forwardRef(function Swipeable(props, ref) {
     renderLeftActions,
     renderRightActions,
     simultaneousWithExternalGesture,
+    requireExternalGestureToFail,
+    blocksExternalGesture,
+    hitSlop,
     ...remainingProps
   } = props;
+  const relationProps = useMemo(() => ({
+    simultaneousWithExternalGesture,
+    requireExternalGestureToFail,
+    blocksExternalGesture
+  }), [blocksExternalGesture, requireExternalGestureToFail, simultaneousWithExternalGesture]);
   const rowState = useSharedValue(0);
   const userDrag = useSharedValue(0);
   const appliedTranslation = useSharedValue(0);
@@ -61,8 +61,8 @@ const Swipeable = /*#__PURE__*/forwardRef(function Swipeable(props, ref) {
   const updateAnimatedEvent = useCallback(() => {
     'worklet';
 
-    const shouldOvershootLeft = overshootLeft !== null && overshootLeft !== void 0 ? overshootLeft : leftWidth.value > 0;
-    const shouldOvershootRight = overshootRight !== null && overshootRight !== void 0 ? overshootRight : rightWidth.value > 0;
+    const shouldOvershootLeft = overshootLeft ?? leftWidth.value > 0;
+    const shouldOvershootRight = overshootRight ?? rightWidth.value > 0;
     const startOffset = rowState.value === 1 ? leftWidth.value : rowState.value === -1 ? -rightWidth.value : 0;
     const offsetDrag = userDrag.value / friction + startOffset;
     appliedTranslation.value = interpolate(offsetDrag, [-rightWidth.value - 1, -rightWidth.value, leftWidth.value, leftWidth.value + 1], [-rightWidth.value - (shouldOvershootRight ? 1 / overshootFriction : 0), -rightWidth.value, leftWidth.value, leftWidth.value + (shouldOvershootLeft ? 1 / overshootFriction : 0)]);
@@ -72,22 +72,20 @@ const Swipeable = /*#__PURE__*/forwardRef(function Swipeable(props, ref) {
   const dispatchImmediateEvents = useCallback((fromValue, toValue) => {
     'worklet';
 
-    if (toValue > 0 && onSwipeableWillOpen) {
-      runOnJS(onSwipeableWillOpen)(SwipeDirection.RIGHT);
-    } else if (toValue < 0 && onSwipeableWillOpen) {
-      runOnJS(onSwipeableWillOpen)(SwipeDirection.LEFT);
-    } else if (onSwipeableWillClose) {
+    if (onSwipeableWillOpen && toValue !== 0) {
+      runOnJS(onSwipeableWillOpen)(toValue > 0 ? SwipeDirection.RIGHT : SwipeDirection.LEFT);
+    }
+    if (onSwipeableWillClose && toValue === 0) {
       runOnJS(onSwipeableWillClose)(fromValue > 0 ? SwipeDirection.LEFT : SwipeDirection.RIGHT);
     }
   }, [onSwipeableWillClose, onSwipeableWillOpen]);
   const dispatchEndEvents = useCallback((fromValue, toValue) => {
     'worklet';
 
-    if (toValue > 0 && onSwipeableOpen) {
-      runOnJS(onSwipeableOpen)(SwipeDirection.RIGHT);
-    } else if (toValue < 0 && onSwipeableOpen) {
-      runOnJS(onSwipeableOpen)(SwipeDirection.LEFT);
-    } else if (onSwipeableClose) {
+    if (onSwipeableOpen && toValue !== 0) {
+      runOnJS(onSwipeableOpen)(toValue > 0 ? SwipeDirection.RIGHT : SwipeDirection.LEFT);
+    }
+    if (onSwipeableClose && toValue === 0) {
       runOnJS(onSwipeableClose)(fromValue > 0 ? SwipeDirection.LEFT : SwipeDirection.RIGHT);
     }
   }, [onSwipeableClose, onSwipeableOpen]);
@@ -106,7 +104,8 @@ const Swipeable = /*#__PURE__*/forwardRef(function Swipeable(props, ref) {
     const isClosing = toValue === 0;
     const moveToRight = isClosing ? rowState.value < 0 : toValue > 0;
     const usedWidth = isClosing ? moveToRight ? rightWidth.value : leftWidth.value : moveToRight ? leftWidth.value : rightWidth.value;
-    const progressSpringConfig = { ...translationSpringConfig,
+    const progressSpringConfig = {
+      ...translationSpringConfig,
       restDisplacementThreshold: 0.01,
       restSpeedThreshold: 0.01,
       velocity: velocityX && interpolate(velocityX, [-usedWidth, usedWidth], [-1, 1])
@@ -129,13 +128,11 @@ const Swipeable = /*#__PURE__*/forwardRef(function Swipeable(props, ref) {
   const updateElementWidths = useCallback(() => {
     'worklet';
 
-    var _leftLayout$pageX, _leftWrapperLayout$pa, _rightLayout$pageX, _leftWrapperLayout$pa2;
-
     const leftLayout = measure(leftLayoutRef);
     const leftWrapperLayout = measure(leftWrapperLayoutRef);
     const rightLayout = measure(rightLayoutRef);
-    leftWidth.value = ((_leftLayout$pageX = leftLayout === null || leftLayout === void 0 ? void 0 : leftLayout.pageX) !== null && _leftLayout$pageX !== void 0 ? _leftLayout$pageX : 0) - ((_leftWrapperLayout$pa = leftWrapperLayout === null || leftWrapperLayout === void 0 ? void 0 : leftWrapperLayout.pageX) !== null && _leftWrapperLayout$pa !== void 0 ? _leftWrapperLayout$pa : 0);
-    rightWidth.value = rowWidth.value - ((_rightLayout$pageX = rightLayout === null || rightLayout === void 0 ? void 0 : rightLayout.pageX) !== null && _rightLayout$pageX !== void 0 ? _rightLayout$pageX : rowWidth.value) + ((_leftWrapperLayout$pa2 = leftWrapperLayout === null || leftWrapperLayout === void 0 ? void 0 : leftWrapperLayout.pageX) !== null && _leftWrapperLayout$pa2 !== void 0 ? _leftWrapperLayout$pa2 : 0);
+    leftWidth.value = (leftLayout?.pageX ?? 0) - (leftWrapperLayout?.pageX ?? 0);
+    rightWidth.value = rowWidth.value - (rightLayout?.pageX ?? rowWidth.value) + (leftWrapperLayout?.pageX ?? 0);
   }, [leftLayoutRef, leftWrapperLayoutRef, rightLayoutRef, leftWidth, rightWidth, rowWidth]);
   const swipeableMethods = useMemo(() => ({
     close() {
@@ -145,12 +142,10 @@ const Swipeable = /*#__PURE__*/forwardRef(function Swipeable(props, ref) {
         animateRow(0);
         return;
       }
-
       runOnUI(() => {
         animateRow(0);
       })();
     },
-
     openLeft() {
       'worklet';
 
@@ -159,13 +154,11 @@ const Swipeable = /*#__PURE__*/forwardRef(function Swipeable(props, ref) {
         animateRow(leftWidth.value);
         return;
       }
-
       runOnUI(() => {
         updateElementWidths();
         animateRow(leftWidth.value);
       })();
     },
-
     openRight() {
       'worklet';
 
@@ -174,13 +167,11 @@ const Swipeable = /*#__PURE__*/forwardRef(function Swipeable(props, ref) {
         animateRow(-rightWidth.value);
         return;
       }
-
       runOnUI(() => {
         updateElementWidths();
         animateRow(-rightWidth.value);
       })();
     },
-
     reset() {
       'worklet';
 
@@ -189,13 +180,14 @@ const Swipeable = /*#__PURE__*/forwardRef(function Swipeable(props, ref) {
       appliedTranslation.value = 0;
       rowState.value = 0;
     }
-
   }), [animateRow, updateElementWidths, leftWidth, rightWidth, userDrag, showLeftProgress, appliedTranslation, rowState]);
   const onRowLayout = useCallback(({
     nativeEvent
   }) => {
     rowWidth.value = nativeEvent.layout.width;
-  }, [rowWidth]); // As stated in `Dimensions.get` docstring, this function should be called on every render
+  }, [rowWidth]);
+
+  // As stated in `Dimensions.get` docstring, this function should be called on every render
   // since dimensions may change (e.g. orientation change)
 
   const leftActionAnimation = useAnimatedStyle(() => {
@@ -203,22 +195,24 @@ const Swipeable = /*#__PURE__*/forwardRef(function Swipeable(props, ref) {
       opacity: showLeftProgress.value === 0 ? 0 : 1
     };
   });
-  const leftElement = useCallback(() => /*#__PURE__*/React.createElement(Animated.View, {
+  const leftElement = useCallback(() => /*#__PURE__*/_jsxs(Animated.View, {
     ref: leftWrapperLayoutRef,
-    style: [styles.leftActions, leftActionAnimation]
-  }, renderLeftActions === null || renderLeftActions === void 0 ? void 0 : renderLeftActions(showLeftProgress, appliedTranslation, swipeableMethods), /*#__PURE__*/React.createElement(Animated.View, {
-    ref: leftLayoutRef
-  })), [appliedTranslation, leftActionAnimation, leftLayoutRef, leftWrapperLayoutRef, renderLeftActions, showLeftProgress, swipeableMethods]);
+    style: [styles.leftActions, leftActionAnimation],
+    children: [renderLeftActions?.(showLeftProgress, appliedTranslation, swipeableMethods), /*#__PURE__*/_jsx(Animated.View, {
+      ref: leftLayoutRef
+    })]
+  }), [appliedTranslation, leftActionAnimation, leftLayoutRef, leftWrapperLayoutRef, renderLeftActions, showLeftProgress, swipeableMethods]);
   const rightActionAnimation = useAnimatedStyle(() => {
     return {
       opacity: showRightProgress.value === 0 ? 0 : 1
     };
   });
-  const rightElement = useCallback(() => /*#__PURE__*/React.createElement(Animated.View, {
-    style: [styles.rightActions, rightActionAnimation]
-  }, renderRightActions === null || renderRightActions === void 0 ? void 0 : renderRightActions(showRightProgress, appliedTranslation, swipeableMethods), /*#__PURE__*/React.createElement(Animated.View, {
-    ref: rightLayoutRef
-  })), [appliedTranslation, renderRightActions, rightActionAnimation, rightLayoutRef, showRightProgress, swipeableMethods]);
+  const rightElement = useCallback(() => /*#__PURE__*/_jsxs(Animated.View, {
+    style: [styles.rightActions, rightActionAnimation],
+    children: [renderRightActions?.(showRightProgress, appliedTranslation, swipeableMethods), /*#__PURE__*/_jsx(Animated.View, {
+      ref: rightLayoutRef
+    })]
+  }), [appliedTranslation, renderRightActions, rightActionAnimation, rightLayoutRef, showRightProgress, swipeableMethods]);
   const handleRelease = useCallback(event => {
     'worklet';
 
@@ -226,11 +220,10 @@ const Swipeable = /*#__PURE__*/forwardRef(function Swipeable(props, ref) {
       velocityX
     } = event;
     userDrag.value = event.translationX;
-    const leftThresholdProp = leftThreshold !== null && leftThreshold !== void 0 ? leftThreshold : leftWidth.value / 2;
-    const rightThresholdProp = rightThreshold !== null && rightThreshold !== void 0 ? rightThreshold : rightWidth.value / 2;
+    const leftThresholdProp = leftThreshold ?? leftWidth.value / 2;
+    const rightThresholdProp = rightThreshold ?? rightWidth.value / 2;
     const translationX = (userDrag.value + DRAG_TOSS * velocityX) / friction;
     let toValue = 0;
-
     if (rowState.value === 0) {
       if (translationX > leftThresholdProp) {
         toValue = leftWidth.value;
@@ -248,7 +241,6 @@ const Swipeable = /*#__PURE__*/forwardRef(function Swipeable(props, ref) {
         toValue = -rightWidth.value;
       }
     }
-
     animateRow(toValue, velocityX / friction);
   }, [animateRow, friction, leftThreshold, leftWidth, rightThreshold, rightWidth, rowState, userDrag]);
   const close = useCallback(() => {
@@ -263,53 +255,34 @@ const Swipeable = /*#__PURE__*/forwardRef(function Swipeable(props, ref) {
         close();
       }
     });
-
-    if (!simultaneousWithExternalGesture) {
-      return tap;
-    }
-
-    if (Array.isArray(simultaneousWithExternalGesture)) {
-      tap.simultaneousWithExternalGesture(...simultaneousWithExternalGesture);
-    } else {
-      tap.simultaneousWithExternalGesture(simultaneousWithExternalGesture);
-    }
-
+    Object.entries(relationProps).forEach(([relationName, relation]) => {
+      applyRelationProp(tap, relationName, relation);
+    });
     return tap;
-  }, [close, rowState, simultaneousWithExternalGesture]);
+  }, [close, relationProps, rowState]);
   const panGesture = useMemo(() => {
     const pan = Gesture.Pan().enabled(enabled !== false).enableTrackpadTwoFingerGesture(enableTrackpadTwoFingerGesture).activeOffsetX([-dragOffsetFromRightEdge, dragOffsetFromLeftEdge]).onStart(updateElementWidths).onUpdate(event => {
       userDrag.value = event.translationX;
       const direction = rowState.value === -1 ? SwipeDirection.RIGHT : rowState.value === 1 ? SwipeDirection.LEFT : event.translationX > 0 ? SwipeDirection.RIGHT : SwipeDirection.LEFT;
-
       if (!dragStarted.value) {
         dragStarted.value = true;
-
         if (rowState.value === 0 && onSwipeableOpenStartDrag) {
           runOnJS(onSwipeableOpenStartDrag)(direction);
         } else if (onSwipeableCloseStartDrag) {
           runOnJS(onSwipeableCloseStartDrag)(direction);
         }
       }
-
       updateAnimatedEvent();
     }).onEnd(event => {
       handleRelease(event);
     }).onFinalize(() => {
       dragStarted.value = false;
     });
-
-    if (!simultaneousWithExternalGesture) {
-      return pan;
-    }
-
-    if (Array.isArray(simultaneousWithExternalGesture)) {
-      pan.simultaneousWithExternalGesture(...simultaneousWithExternalGesture);
-    } else {
-      pan.simultaneousWithExternalGesture(simultaneousWithExternalGesture);
-    }
-
+    Object.entries(relationProps).forEach(([relationName, relation]) => {
+      applyRelationProp(pan, relationName, relation);
+    });
     return pan;
-  }, [dragOffsetFromLeftEdge, dragOffsetFromRightEdge, dragStarted, enableTrackpadTwoFingerGesture, enabled, handleRelease, onSwipeableCloseStartDrag, onSwipeableOpenStartDrag, rowState, updateAnimatedEvent, updateElementWidths, userDrag, simultaneousWithExternalGesture]);
+  }, [enabled, enableTrackpadTwoFingerGesture, dragOffsetFromRightEdge, dragOffsetFromLeftEdge, updateElementWidths, relationProps, userDrag, rowState, dragStarted, updateAnimatedEvent, onSwipeableOpenStartDrag, onSwipeableCloseStartDrag, handleRelease]);
   useImperativeHandle(ref, () => swipeableMethods, [swipeableMethods]);
   const animatedStyle = useAnimatedStyle(() => ({
     transform: [{
@@ -317,32 +290,41 @@ const Swipeable = /*#__PURE__*/forwardRef(function Swipeable(props, ref) {
     }],
     pointerEvents: rowState.value === 0 ? 'auto' : 'box-only'
   }), [appliedTranslation, rowState]);
-  const swipeableComponent = /*#__PURE__*/React.createElement(GestureDetector, {
+  const swipeableComponent = /*#__PURE__*/_jsx(GestureDetector, {
     gesture: panGesture,
-    touchAction: "pan-y"
-  }, /*#__PURE__*/React.createElement(Animated.View, _extends({}, remainingProps, {
-    onLayout: onRowLayout,
-    style: [styles.container, containerStyle]
-  }), leftElement(), rightElement(), /*#__PURE__*/React.createElement(GestureDetector, {
-    gesture: tapGesture,
-    touchAction: "pan-y"
-  }, /*#__PURE__*/React.createElement(Animated.View, {
-    style: [animatedStyle, childrenContainerStyle]
-  }, children))));
-  return testID ? /*#__PURE__*/React.createElement(View, {
-    testID: testID
-  }, swipeableComponent) : swipeableComponent;
-});
+    touchAction: "pan-y",
+    children: /*#__PURE__*/_jsxs(Animated.View, {
+      ...remainingProps,
+      onLayout: onRowLayout,
+      hitSlop: hitSlop ?? undefined,
+      style: [styles.container, containerStyle],
+      children: [leftElement(), rightElement(), /*#__PURE__*/_jsx(GestureDetector, {
+        gesture: tapGesture,
+        touchAction: "pan-y",
+        children: /*#__PURE__*/_jsx(Animated.View, {
+          style: [animatedStyle, childrenContainerStyle],
+          children: children
+        })
+      })]
+    })
+  });
+  return testID ? /*#__PURE__*/_jsx(View, {
+    testID: testID,
+    children: swipeableComponent
+  }) : swipeableComponent;
+};
 export default Swipeable;
 const styles = StyleSheet.create({
   container: {
     overflow: 'hidden'
   },
-  leftActions: { ...StyleSheet.absoluteFillObject,
+  leftActions: {
+    ...StyleSheet.absoluteFillObject,
     flexDirection: I18nManager.isRTL ? 'row-reverse' : 'row',
     overflow: 'hidden'
   },
-  rightActions: { ...StyleSheet.absoluteFillObject,
+  rightActions: {
+    ...StyleSheet.absoluteFillObject,
     flexDirection: I18nManager.isRTL ? 'row' : 'row-reverse',
     overflow: 'hidden'
   }
diff --git a/node_modules/react-native-gesture-handler/lib/module/components/ReanimatedSwipeable/ReanimatedSwipeable.js.map b/node_modules/react-native-gesture-handler/lib/module/components/ReanimatedSwipeable/ReanimatedSwipeable.js.map
new file mode 100644
index 0000000..bfdc863
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/module/components/ReanimatedSwipeable/ReanimatedSwipeable.js.map
@@ -0,0 +1 @@
+{"version":3,"names":["useMemo","useCallback","useImperativeHandle","View","I18nManager","StyleSheet","Animated","useSharedValue","interpolate","runOnJS","ReduceMotion","withSpring","useAnimatedRef","measure","runOnUI","useAnimatedStyle","SwipeDirection","Gesture","GestureDetector","applyRelationProp","jsx","_jsx","jsxs","_jsxs","DRAG_TOSS","DEFAULT_FRICTION","DEFAULT_OVERSHOOT_FRICTION","DEFAULT_DRAG_OFFSET","DEFAULT_ENABLE_TRACKING_TWO_FINGER_GESTURE","Swipeable","props","ref","leftThreshold","rightThreshold","enabled","containerStyle","childrenContainerStyle","animationOptions","overshootLeft","overshootRight","testID","children","enableTrackpadTwoFingerGesture","dragOffsetFromLeftEdge","dragOffsetFromRightEdge","friction","overshootFriction","onSwipeableOpenStartDrag","onSwipeableCloseStartDrag","onSwipeableWillOpen","onSwipeableWillClose","onSwipeableOpen","onSwipeableClose","renderLeftActions","renderRightActions","simultaneousWithExternalGesture","requireExternalGestureToFail","blocksExternalGesture","hitSlop","remainingProps","relationProps","rowState","userDrag","appliedTranslation","rowWidth","leftWidth","rightWidth","showLeftProgress","showRightProgress","updateAnimatedEvent","shouldOvershootLeft","value","shouldOvershootRight","startOffset","offsetDrag","dispatchImmediateEvents","fromValue","toValue","RIGHT","LEFT","dispatchEndEvents","animateRow","velocityX","translationSpringConfig","mass","damping","stiffness","velocity","overshootClamping","reduceMotion","System","isClosing","moveToRight","usedWidth","progressSpringConfig","restDisplacementThreshold","restSpeedThreshold","frozenRowState","isFinished","progressTarget","Math","sign","max","leftLayoutRef","leftWrapperLayoutRef","rightLayoutRef","updateElementWidths","leftLayout","leftWrapperLayout","rightLayout","pageX","swipeableMethods","close","_WORKLET","openLeft","openRight","reset","onRowLayout","nativeEvent","layout","width","leftActionAnimation","opacity","leftElement","style","styles","leftActions","rightActionAnimation","rightElement","rightActions","handleRelease","event","translationX","leftThresholdProp","rightThresholdProp","dragStarted","tapGesture","tap","Tap","shouldCancelWhenOutside","onStart","Object","entries","forEach","relationName","relation","panGesture","pan","Pan","activeOffsetX","onUpdate","direction","onEnd","onFinalize","animatedStyle","transform","translateX","pointerEvents","swipeableComponent","gesture","touchAction","onLayout","undefined","container","create","overflow","absoluteFillObject","flexDirection","isRTL"],"sourceRoot":"../../../../src","sources":["components/ReanimatedSwipeable/ReanimatedSwipeable.tsx"],"mappings":"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","ignoreList":[]}
diff --git a/node_modules/react-native-gesture-handler/lib/module/components/ReanimatedSwipeable/ReanimatedSwipeableProps.js b/node_modules/react-native-gesture-handler/lib/module/components/ReanimatedSwipeable/ReanimatedSwipeableProps.js
new file mode 100644
index 0000000..595abe4
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/module/components/ReanimatedSwipeable/ReanimatedSwipeableProps.js
@@ -0,0 +1,8 @@
+"use strict";
+
+export let SwipeDirection = /*#__PURE__*/function (SwipeDirection) {
+  SwipeDirection["LEFT"] = "left";
+  SwipeDirection["RIGHT"] = "right";
+  return SwipeDirection;
+}({});
+//# sourceMappingURL=ReanimatedSwipeableProps.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/module/components/ReanimatedSwipeable/ReanimatedSwipeableProps.js.map b/node_modules/react-native-gesture-handler/lib/module/components/ReanimatedSwipeable/ReanimatedSwipeableProps.js.map
new file mode 100644
index 0000000..4ffe93b
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/module/components/ReanimatedSwipeable/ReanimatedSwipeableProps.js.map
@@ -0,0 +1 @@
+{"version":3,"names":["SwipeDirection"],"sourceRoot":"../../../../src","sources":["components/ReanimatedSwipeable/ReanimatedSwipeableProps.ts"],"mappings":";;AAWA,WAAYA,cAAc,0BAAdA,cAAc;EAAdA,cAAc;EAAdA,cAAc;EAAA,OAAdA,cAAc;AAAA","ignoreList":[]}
diff --git a/node_modules/react-native-gesture-handler/lib/module/components/ReanimatedSwipeable/index.js b/node_modules/react-native-gesture-handler/lib/module/components/ReanimatedSwipeable/index.js
new file mode 100644
index 0000000..e18fb84
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/module/components/ReanimatedSwipeable/index.js
@@ -0,0 +1,5 @@
+"use strict";
+
+export { SwipeDirection } from './ReanimatedSwipeableProps';
+export { default } from './ReanimatedSwipeable';
+//# sourceMappingURL=index.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/module/components/ReanimatedSwipeable/index.js.map b/node_modules/react-native-gesture-handler/lib/module/components/ReanimatedSwipeable/index.js.map
new file mode 100644
index 0000000..5a0efb9
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/module/components/ReanimatedSwipeable/index.js.map
@@ -0,0 +1 @@
+{"version":3,"names":["SwipeDirection","default"],"sourceRoot":"../../../../src","sources":["components/ReanimatedSwipeable/index.ts"],"mappings":";;AAAA,SAGEA,cAAc,QACT,4BAA4B;AACnC,SAASC,OAAO,QAAQ,uBAAuB","ignoreList":[]}
diff --git a/node_modules/react-native-gesture-handler/lib/module/components/utils.js b/node_modules/react-native-gesture-handler/lib/module/components/utils.js
new file mode 100644
index 0000000..9c1e168
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/module/components/utils.js
@@ -0,0 +1,13 @@
+"use strict";
+
+export function applyRelationProp(gesture, relationPropName, relationProp) {
+  if (!relationProp) {
+    return;
+  }
+  if (Array.isArray(relationProp)) {
+    gesture[relationPropName](...relationProp);
+  } else {
+    gesture[relationPropName](relationProp);
+  }
+}
+//# sourceMappingURL=utils.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/module/components/utils.js.map b/node_modules/react-native-gesture-handler/lib/module/components/utils.js.map
new file mode 100644
index 0000000..8c579ca
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/module/components/utils.js.map
@@ -0,0 +1 @@
+{"version":3,"names":["applyRelationProp","gesture","relationPropName","relationProp","Array","isArray"],"sourceRoot":"../../../src","sources":["components/utils.ts"],"mappings":";;AAWA,OAAO,SAASA,iBAAiBA,CAC/BC,OAAyB,EACzBC,gBAAkC,EAClCC,YAA8B,EAC9B;EACA,IAAI,CAACA,YAAY,EAAE;IACjB;EACF;EAEA,IAAIC,KAAK,CAACC,OAAO,CAACF,YAAY,CAAC,EAAE;IAC/BF,OAAO,CAACC,gBAAgB,CAAC,CAAC,GAAGC,YAAY,CAAC;EAC5C,CAAC,MAAM;IACLF,OAAO,CAACC,gBAAgB,CAAC,CAACC,YAAY,CAAC;EACzC;AACF","ignoreList":[]}
diff --git a/node_modules/react-native-gesture-handler/lib/module/getReactNativeVersion.js b/node_modules/react-native-gesture-handler/lib/module/getReactNativeVersion.js
deleted file mode 100644
index 3e1500b..0000000
--- a/node_modules/react-native-gesture-handler/lib/module/getReactNativeVersion.js
+++ /dev/null
@@ -1,10 +0,0 @@
-import pack from 'react-native/package.json';
-const [majorStr, minorStr] = pack.version.split('.');
-const REACT_NATIVE_VERSION = {
-  major: parseInt(majorStr, 10),
-  minor: parseInt(minorStr, 10)
-};
-export function getReactNativeVersion() {
-  return REACT_NATIVE_VERSION;
-}
-//# sourceMappingURL=getReactNativeVersion.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/module/getReactNativeVersion.js.map b/node_modules/react-native-gesture-handler/lib/module/getReactNativeVersion.js.map
deleted file mode 100644
index b6fbe8f..0000000
--- a/node_modules/react-native-gesture-handler/lib/module/getReactNativeVersion.js.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"sources":["getReactNativeVersion.ts"],"names":["pack","majorStr","minorStr","version","split","REACT_NATIVE_VERSION","major","parseInt","minor","getReactNativeVersion"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,2BAAjB;AAEA,MAAM,CAACC,QAAD,EAAWC,QAAX,IAAuBF,IAAI,CAACG,OAAL,CAAaC,KAAb,CAAmB,GAAnB,CAA7B;AACA,MAAMC,oBAAoB,GAAG;AAC3BC,EAAAA,KAAK,EAAEC,QAAQ,CAACN,QAAD,EAAW,EAAX,CADY;AAE3BO,EAAAA,KAAK,EAAED,QAAQ,CAACL,QAAD,EAAW,EAAX;AAFY,CAA7B;AAKA,OAAO,SAASO,qBAAT,GAAiC;AACtC,SAAOJ,oBAAP;AACD","sourcesContent":["import pack from 'react-native/package.json';\n\nconst [majorStr, minorStr] = pack.version.split('.');\nconst REACT_NATIVE_VERSION = {\n  major: parseInt(majorStr, 10),\n  minor: parseInt(minorStr, 10),\n};\n\nexport function getReactNativeVersion() {\n  return REACT_NATIVE_VERSION;\n}\n"]}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/module/getReactNativeVersion.web.js b/node_modules/react-native-gesture-handler/lib/module/getReactNativeVersion.web.js
deleted file mode 100644
index 30c9eb3..0000000
--- a/node_modules/react-native-gesture-handler/lib/module/getReactNativeVersion.web.js
+++ /dev/null
@@ -1,4 +0,0 @@
-export function getReactNativeVersion() {
-  throw new Error('getReactNativeVersion is not supported on web');
-}
-//# sourceMappingURL=getReactNativeVersion.web.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/module/getReactNativeVersion.web.js.map b/node_modules/react-native-gesture-handler/lib/module/getReactNativeVersion.web.js.map
deleted file mode 100644
index b62aead..0000000
--- a/node_modules/react-native-gesture-handler/lib/module/getReactNativeVersion.web.js.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"sources":["getReactNativeVersion.web.ts"],"names":["getReactNativeVersion","Error"],"mappings":"AAAA,OAAO,SAASA,qBAAT,GAAiC;AACtC,QAAM,IAAIC,KAAJ,CAAU,+CAAV,CAAN;AACD","sourcesContent":["export function getReactNativeVersion() {\n  throw new Error('getReactNativeVersion is not supported on web');\n}\n"]}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/module/handlers/NativeViewGestureHandler.js b/node_modules/react-native-gesture-handler/lib/module/handlers/NativeViewGestureHandler.js
deleted file mode 100644
index fd9d8df..0000000
--- a/node_modules/react-native-gesture-handler/lib/module/handlers/NativeViewGestureHandler.js
+++ /dev/null
@@ -1,19 +0,0 @@
-import createHandler from './createHandler';
-import { baseGestureHandlerProps } from './gestureHandlerCommon';
-export const nativeViewGestureHandlerProps = ['shouldActivateOnStart', 'disallowInterruption'];
-export const nativeViewProps = [...baseGestureHandlerProps, ...nativeViewGestureHandlerProps];
-export const nativeViewHandlerName = 'NativeViewGestureHandler';
-/**
- * @deprecated NativeViewGestureHandler will be removed in the future version of Gesture Handler. Use `Gesture.Native()` instead.
- */
-
-/**
- * @deprecated NativeViewGestureHandler will be removed in the future version of Gesture Handler. Use `Gesture.Native()` instead.
- */
-// eslint-disable-next-line @typescript-eslint/no-redeclare -- backward compatibility; see description on the top of gestureHandlerCommon.ts file
-export const NativeViewGestureHandler = createHandler({
-  name: nativeViewHandlerName,
-  allowedProps: nativeViewProps,
-  config: {}
-});
-//# sourceMappingURL=NativeViewGestureHandler.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/module/handlers/NativeViewGestureHandler.js.map b/node_modules/react-native-gesture-handler/lib/module/handlers/NativeViewGestureHandler.js.map
deleted file mode 100644
index 8bfe3f4..0000000
--- a/node_modules/react-native-gesture-handler/lib/module/handlers/NativeViewGestureHandler.js.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"sources":["NativeViewGestureHandler.ts"],"names":["createHandler","baseGestureHandlerProps","nativeViewGestureHandlerProps","nativeViewProps","nativeViewHandlerName","NativeViewGestureHandler","name","allowedProps","config"],"mappings":"AACA,OAAOA,aAAP,MAA0B,iBAA1B;AACA,SAEEC,uBAFF,QAGO,wBAHP;AAKA,OAAO,MAAMC,6BAA6B,GAAG,CAC3C,uBAD2C,EAE3C,sBAF2C,CAAtC;AA4BP,OAAO,MAAMC,eAAe,GAAG,CAC7B,GAAGF,uBAD0B,EAE7B,GAAGC,6BAF0B,CAAxB;AAKP,OAAO,MAAME,qBAAqB,GAAG,0BAA9B;AAEP;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA,OAAO,MAAMC,wBAAwB,GAAGL,aAAa,CAGnD;AACAM,EAAAA,IAAI,EAAEF,qBADN;AAEAG,EAAAA,YAAY,EAAEJ,eAFd;AAGAK,EAAAA,MAAM,EAAE;AAHR,CAHmD,CAA9C","sourcesContent":["import type { NativeViewGestureHandlerPayload } from './GestureHandlerEventPayload';\nimport createHandler from './createHandler';\nimport {\n  BaseGestureHandlerProps,\n  baseGestureHandlerProps,\n} from './gestureHandlerCommon';\n\nexport const nativeViewGestureHandlerProps = [\n  'shouldActivateOnStart',\n  'disallowInterruption',\n] as const;\n\nexport interface NativeViewGestureConfig {\n  /**\n   * Android only.\n   *\n   * Determines whether the handler should check for an existing touch event on\n   * instantiation.\n   */\n  shouldActivateOnStart?: boolean;\n\n  /**\n   * When `true`, cancels all other gesture handlers when this\n   * `NativeViewGestureHandler` receives an `ACTIVE` state event.\n   */\n  disallowInterruption?: boolean;\n}\n\n/**\n * @deprecated NativeViewGestureHandler will be removed in the future version of Gesture Handler. Use `Gesture.Native()` instead.\n */\nexport interface NativeViewGestureHandlerProps\n  extends BaseGestureHandlerProps<NativeViewGestureHandlerPayload>,\n    NativeViewGestureConfig {}\n\nexport const nativeViewProps = [\n  ...baseGestureHandlerProps,\n  ...nativeViewGestureHandlerProps,\n] as const;\n\nexport const nativeViewHandlerName = 'NativeViewGestureHandler';\n\n/**\n * @deprecated NativeViewGestureHandler will be removed in the future version of Gesture Handler. Use `Gesture.Native()` instead.\n */\nexport type NativeViewGestureHandler = typeof NativeViewGestureHandler;\n\n/**\n * @deprecated NativeViewGestureHandler will be removed in the future version of Gesture Handler. Use `Gesture.Native()` instead.\n */\n// eslint-disable-next-line @typescript-eslint/no-redeclare -- backward compatibility; see description on the top of gestureHandlerCommon.ts file\nexport const NativeViewGestureHandler = createHandler<\n  NativeViewGestureHandlerProps,\n  NativeViewGestureHandlerPayload\n>({\n  name: nativeViewHandlerName,\n  allowedProps: nativeViewProps,\n  config: {},\n});\n"]}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/module/handlers/NativeViewGestureHandler.ts b/node_modules/react-native-gesture-handler/lib/module/handlers/NativeViewGestureHandler.ts
new file mode 100644
index 0000000..1271e26
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/module/handlers/NativeViewGestureHandler.ts
@@ -0,0 +1,59 @@
+import type { NativeViewGestureHandlerPayload } from './GestureHandlerEventPayload';
+import createHandler from './createHandler';
+import {
+  BaseGestureHandlerProps,
+  baseGestureHandlerProps,
+} from './gestureHandlerCommon';
+
+export const nativeViewGestureHandlerProps = [
+  'shouldActivateOnStart',
+  'disallowInterruption',
+] as const;
+
+export interface NativeViewGestureConfig {
+  /**
+   * Android only.
+   *
+   * Determines whether the handler should check for an existing touch event on
+   * instantiation.
+   */
+  shouldActivateOnStart?: boolean;
+
+  /**
+   * When `true`, cancels all other gesture handlers when this
+   * `NativeViewGestureHandler` receives an `ACTIVE` state event.
+   */
+  disallowInterruption?: boolean;
+}
+
+/**
+ * @deprecated NativeViewGestureHandler will be removed in the future version of Gesture Handler. Use `Gesture.Native()` instead.
+ */
+export interface NativeViewGestureHandlerProps
+  extends BaseGestureHandlerProps<NativeViewGestureHandlerPayload>,
+    NativeViewGestureConfig {}
+
+export const nativeViewProps = [
+  ...baseGestureHandlerProps,
+  ...nativeViewGestureHandlerProps,
+] as const;
+
+export const nativeViewHandlerName = 'NativeViewGestureHandler';
+
+/**
+ * @deprecated NativeViewGestureHandler will be removed in the future version of Gesture Handler. Use `Gesture.Native()` instead.
+ */
+export type NativeViewGestureHandler = typeof NativeViewGestureHandler;
+
+/**
+ * @deprecated NativeViewGestureHandler will be removed in the future version of Gesture Handler. Use `Gesture.Native()` instead.
+ */
+// eslint-disable-next-line @typescript-eslint/no-redeclare -- backward compatibility; see description on the top of gestureHandlerCommon.ts file
+export const NativeViewGestureHandler = createHandler<
+  NativeViewGestureHandlerProps,
+  NativeViewGestureHandlerPayload
+>({
+  name: nativeViewHandlerName,
+  allowedProps: nativeViewProps,
+  config: {},
+});
diff --git a/node_modules/react-native-gesture-handler/lib/module/handlers/gestures/nativeGesture.js.map b/node_modules/react-native-gesture-handler/lib/module/handlers/gestures/nativeGesture.js.map
deleted file mode 100644
index ca9d642..0000000
--- a/node_modules/react-native-gesture-handler/lib/module/handlers/gestures/nativeGesture.js.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"sources":["nativeGesture.ts"],"names":["BaseGesture","NativeGesture","constructor","handlerName","shouldActivateOnStart","value","config","disallowInterruption"],"mappings":";;AAAA,SAA4BA,WAA5B,QAA+C,WAA/C;AAIA,OAAO,MAAMC,aAAN,SAA4BD,WAA5B,CAAyE;AAG9EE,EAAAA,WAAW,GAAG;AACZ;;AADY,oCAF+C,EAE/C;;AAGZ,SAAKC,WAAL,GAAmB,0BAAnB;AACD;AAED;AACF;AACA;AACA;;;AACEC,EAAAA,qBAAqB,CAACC,KAAD,EAAiB;AACpC,SAAKC,MAAL,CAAYF,qBAAZ,GAAoCC,KAApC;AACA,WAAO,IAAP;AACD;AAED;AACF;AACA;AACA;;;AACEE,EAAAA,oBAAoB,CAACF,KAAD,EAAiB;AACnC,SAAKC,MAAL,CAAYC,oBAAZ,GAAmCF,KAAnC;AACA,WAAO,IAAP;AACD;;AAzB6E","sourcesContent":["import { BaseGestureConfig, BaseGesture } from './gesture';\nimport { NativeViewGestureConfig } from '../NativeViewGestureHandler';\nimport type { NativeViewGestureHandlerPayload } from '../GestureHandlerEventPayload';\n\nexport class NativeGesture extends BaseGesture<NativeViewGestureHandlerPayload> {\n  public config: BaseGestureConfig & NativeViewGestureConfig = {};\n\n  constructor() {\n    super();\n\n    this.handlerName = 'NativeViewGestureHandler';\n  }\n\n  /**\n   * When true, underlying handler will activate unconditionally when in `BEGAN` or `UNDETERMINED` state.\n   * @param value\n   */\n  shouldActivateOnStart(value: boolean) {\n    this.config.shouldActivateOnStart = value;\n    return this;\n  }\n\n  /**\n   * When true, cancels all other gesture handlers when this `NativeViewGestureHandler` receives an `ACTIVE` state event.\n   * @param value\n   */\n  disallowInterruption(value: boolean) {\n    this.config.disallowInterruption = value;\n    return this;\n  }\n}\n\nexport type NativeGestureType = InstanceType<typeof NativeGesture>;\n"]}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/module/handlers/gestures/nativeGesture.ts b/node_modules/react-native-gesture-handler/lib/module/handlers/gestures/nativeGesture.ts
new file mode 100644
index 0000000..b8b00ab
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/module/handlers/gestures/nativeGesture.ts
@@ -0,0 +1,33 @@
+import { BaseGestureConfig, BaseGesture } from './gesture';
+import { NativeViewGestureConfig } from '../NativeViewGestureHandler';
+import type { NativeViewGestureHandlerPayload } from '../GestureHandlerEventPayload';
+
+export class NativeGesture extends BaseGesture<NativeViewGestureHandlerPayload> {
+  public config: BaseGestureConfig & NativeViewGestureConfig = {};
+
+  constructor() {
+    super();
+
+    this.handlerName = 'NativeViewGestureHandler';
+  }
+
+  /**
+   * When true, underlying handler will activate unconditionally when in `BEGAN` or `UNDETERMINED` state.
+   * @param value
+   */
+  shouldActivateOnStart(value: boolean) {
+    this.config.shouldActivateOnStart = value;
+    return this;
+  }
+
+  /**
+   * When true, cancels all other gesture handlers when this `NativeViewGestureHandler` receives an `ACTIVE` state event.
+   * @param value
+   */
+  disallowInterruption(value: boolean) {
+    this.config.disallowInterruption = value;
+    return this;
+  }
+}
+
+export type NativeGestureType = InstanceType<typeof NativeGesture>;
diff --git a/node_modules/react-native-gesture-handler/lib/module/mocks.js.map b/node_modules/react-native-gesture-handler/lib/module/mocks.js.map
deleted file mode 100644
index 27d32ec..0000000
--- a/node_modules/react-native-gesture-handler/lib/module/mocks.js.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"sources":["mocks.tsx"],"names":["React","TouchableHighlight","TouchableNativeFeedback","TouchableOpacity","TouchableWithoutFeedback","ScrollView","FlatList","Switch","TextInput","DrawerLayoutAndroid","View","State","Directions","NOOP","PanGestureHandler","attachGestureHandler","createGestureHandler","dropGestureHandler","updateGestureHandler","flushOperations","install","NativeViewGestureHandler","TapGestureHandler","ForceTouchGestureHandler","LongPressGestureHandler","PinchGestureHandler","RotationGestureHandler","FlingGestureHandler","RawButton","enabled","rest","BaseButton","RectButton","BorderlessButton"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,kBADF,EAEEC,uBAFF,EAGEC,gBAHF,EAIEC,wBAJF,EAKEC,UALF,EAMEC,QANF,EAOEC,MAPF,EAQEC,SARF,EASEC,mBATF,EAUEC,IAVF,QAWO,cAXP;AAYA,SAASC,KAAT,QAAsB,SAAtB;AACA,SAASC,UAAT,QAA2B,cAA3B;;AAEA,MAAMC,IAAI,GAAG,MAAM,CACjB;AACD,CAFD;;AAGA,MAAMC,iBAAiB,GAAGJ,IAA1B;AACA,MAAMK,oBAAoB,GAAGF,IAA7B;AACA,MAAMG,oBAAoB,GAAGH,IAA7B;AACA,MAAMI,kBAAkB,GAAGJ,IAA3B;AACA,MAAMK,oBAAoB,GAAGL,IAA7B;AACA,MAAMM,eAAe,GAAGN,IAAxB;AACA,MAAMO,OAAO,GAAGP,IAAhB;AACA,MAAMQ,wBAAwB,GAAGX,IAAjC;AACA,MAAMY,iBAAiB,GAAGZ,IAA1B;AACA,MAAMa,wBAAwB,GAAGb,IAAjC;AACA,MAAMc,uBAAuB,GAAGd,IAAhC;AACA,MAAMe,mBAAmB,GAAGf,IAA5B;AACA,MAAMgB,sBAAsB,GAAGhB,IAA/B;AACA,MAAMiB,mBAAmB,GAAGjB,IAA5B;;AACA,MAAMkB,SAAS,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAW,KAAGC;AAAd,CAAD,kBAChB,oBAAC,uBAAD;AAAyB,EAAA,QAAQ,EAAE,CAACD;AAApC,GAAiDC,IAAjD,gBACE,oBAAC,IAAD,OADF,CADF;;AAKA,MAAMC,UAAU,GAAGH,SAAnB;AACA,MAAMI,UAAU,GAAGJ,SAAnB;AACA,MAAMK,gBAAgB,GAAG/B,uBAAzB;AAEA,eAAe;AACbD,EAAAA,kBADa;AAEbC,EAAAA,uBAFa;AAGbC,EAAAA,gBAHa;AAIbC,EAAAA,wBAJa;AAKbC,EAAAA,UALa;AAMbC,EAAAA,QANa;AAObC,EAAAA,MAPa;AAQbC,EAAAA,SARa;AASbC,EAAAA,mBATa;AAUbY,EAAAA,wBAVa;AAWbC,EAAAA,iBAXa;AAYbC,EAAAA,wBAZa;AAabC,EAAAA,uBAba;AAcbC,EAAAA,mBAda;AAebC,EAAAA,sBAfa;AAgBbC,EAAAA,mBAhBa;AAiBbC,EAAAA,SAjBa;AAkBbG,EAAAA,UAlBa;AAmBbC,EAAAA,UAnBa;AAoBbC,EAAAA,gBApBa;AAqBbnB,EAAAA,iBArBa;AAsBbC,EAAAA,oBAtBa;AAuBbC,EAAAA,oBAvBa;AAwBbC,EAAAA,kBAxBa;AAyBbC,EAAAA,oBAzBa;AA0BbC,EAAAA,eA1Ba;AA2BbC,EAAAA,OA3Ba;AA4Bb;AACAR,EAAAA,UA7Ba;AA8BbD,EAAAA;AA9Ba,CAAf","sourcesContent":["import React from 'react';\nimport {\n  TouchableHighlight,\n  TouchableNativeFeedback,\n  TouchableOpacity,\n  TouchableWithoutFeedback,\n  ScrollView,\n  FlatList,\n  Switch,\n  TextInput,\n  DrawerLayoutAndroid,\n  View,\n} from 'react-native';\nimport { State } from './State';\nimport { Directions } from './Directions';\n\nconst NOOP = () => {\n  // Do nothing\n};\nconst PanGestureHandler = View;\nconst attachGestureHandler = NOOP;\nconst createGestureHandler = NOOP;\nconst dropGestureHandler = NOOP;\nconst updateGestureHandler = NOOP;\nconst flushOperations = NOOP;\nconst install = NOOP;\nconst NativeViewGestureHandler = View;\nconst TapGestureHandler = View;\nconst ForceTouchGestureHandler = View;\nconst LongPressGestureHandler = View;\nconst PinchGestureHandler = View;\nconst RotationGestureHandler = View;\nconst FlingGestureHandler = View;\nconst RawButton = ({ enabled, ...rest }: any) => (\n  <TouchableNativeFeedback disabled={!enabled} {...rest}>\n    <View />\n  </TouchableNativeFeedback>\n);\nconst BaseButton = RawButton;\nconst RectButton = RawButton;\nconst BorderlessButton = TouchableNativeFeedback;\n\nexport default {\n  TouchableHighlight,\n  TouchableNativeFeedback,\n  TouchableOpacity,\n  TouchableWithoutFeedback,\n  ScrollView,\n  FlatList,\n  Switch,\n  TextInput,\n  DrawerLayoutAndroid,\n  NativeViewGestureHandler,\n  TapGestureHandler,\n  ForceTouchGestureHandler,\n  LongPressGestureHandler,\n  PinchGestureHandler,\n  RotationGestureHandler,\n  FlingGestureHandler,\n  RawButton,\n  BaseButton,\n  RectButton,\n  BorderlessButton,\n  PanGestureHandler,\n  attachGestureHandler,\n  createGestureHandler,\n  dropGestureHandler,\n  updateGestureHandler,\n  flushOperations,\n  install,\n  // Probably can be removed\n  Directions,\n  State,\n} as const;\n"]}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/module/mocks/Pressable.js b/node_modules/react-native-gesture-handler/lib/module/mocks/Pressable.js
new file mode 100644
index 0000000..ca9a5c9
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/module/mocks/Pressable.js
@@ -0,0 +1,4 @@
+"use strict";
+
+export { Pressable as default } from 'react-native';
+//# sourceMappingURL=Pressable.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/module/mocks/Pressable.js.map b/node_modules/react-native-gesture-handler/lib/module/mocks/Pressable.js.map
new file mode 100644
index 0000000..a58acaa
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/module/mocks/Pressable.js.map
@@ -0,0 +1 @@
+{"version":3,"names":["Pressable","default"],"sourceRoot":"../../../src","sources":["mocks/Pressable.tsx"],"mappings":";;AAAA,SAASA,SAAS,IAAIC,OAAO,QAAQ,cAAc","ignoreList":[]}
diff --git a/node_modules/react-native-gesture-handler/lib/module/mocks.js b/node_modules/react-native-gesture-handler/lib/module/mocks/mocks.js
similarity index 62%
rename from node_modules/react-native-gesture-handler/lib/module/mocks.js
rename to node_modules/react-native-gesture-handler/lib/module/mocks/mocks.js
index b50aeaa..006706d 100644
--- a/node_modules/react-native-gesture-handler/lib/module/mocks.js
+++ b/node_modules/react-native-gesture-handler/lib/module/mocks/mocks.js
@@ -1,13 +1,13 @@
-function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
+"use strict";
 
 import React from 'react';
 import { TouchableHighlight, TouchableNativeFeedback, TouchableOpacity, TouchableWithoutFeedback, ScrollView, FlatList, Switch, TextInput, DrawerLayoutAndroid, View } from 'react-native';
-import { State } from './State';
-import { Directions } from './Directions';
-
-const NOOP = () => {// Do nothing
+import { State } from '../State';
+import { Directions } from '../Directions';
+import { jsx as _jsx } from "react/jsx-runtime";
+const NOOP = () => {
+  // Do nothing
 };
-
 const PanGestureHandler = View;
 const attachGestureHandler = NOOP;
 const createGestureHandler = NOOP;
@@ -22,17 +22,17 @@ const LongPressGestureHandler = View;
 const PinchGestureHandler = View;
 const RotationGestureHandler = View;
 const FlingGestureHandler = View;
-
-const RawButton = ({
+export const RawButton = ({
   enabled,
   ...rest
-}) => /*#__PURE__*/React.createElement(TouchableNativeFeedback, _extends({
-  disabled: !enabled
-}, rest), /*#__PURE__*/React.createElement(View, null));
-
-const BaseButton = RawButton;
-const RectButton = RawButton;
-const BorderlessButton = TouchableNativeFeedback;
+}) => /*#__PURE__*/_jsx(TouchableNativeFeedback, {
+  disabled: enabled === false,
+  ...rest,
+  children: /*#__PURE__*/_jsx(View, {})
+});
+export const BaseButton = RawButton;
+export const RectButton = RawButton;
+export const BorderlessButton = TouchableNativeFeedback;
 export default {
   TouchableHighlight,
   TouchableNativeFeedback,
@@ -50,10 +50,6 @@ export default {
   PinchGestureHandler,
   RotationGestureHandler,
   FlingGestureHandler,
-  RawButton,
-  BaseButton,
-  RectButton,
-  BorderlessButton,
   PanGestureHandler,
   attachGestureHandler,
   createGestureHandler,
diff --git a/node_modules/react-native-gesture-handler/lib/module/mocks/mocks.js.map b/node_modules/react-native-gesture-handler/lib/module/mocks/mocks.js.map
new file mode 100644
index 0000000..b310635
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/module/mocks/mocks.js.map
@@ -0,0 +1 @@
+{"version":3,"names":["React","TouchableHighlight","TouchableNativeFeedback","TouchableOpacity","TouchableWithoutFeedback","ScrollView","FlatList","Switch","TextInput","DrawerLayoutAndroid","View","State","Directions","jsx","_jsx","NOOP","PanGestureHandler","attachGestureHandler","createGestureHandler","dropGestureHandler","updateGestureHandler","flushOperations","install","NativeViewGestureHandler","TapGestureHandler","ForceTouchGestureHandler","LongPressGestureHandler","PinchGestureHandler","RotationGestureHandler","FlingGestureHandler","RawButton","enabled","rest","disabled","children","BaseButton","RectButton","BorderlessButton"],"sourceRoot":"../../../src","sources":["mocks/mocks.tsx"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,kBAAkB,EAClBC,uBAAuB,EACvBC,gBAAgB,EAChBC,wBAAwB,EACxBC,UAAU,EACVC,QAAQ,EACRC,MAAM,EACNC,SAAS,EACTC,mBAAmB,EACnBC,IAAI,QACC,cAAc;AACrB,SAASC,KAAK,QAAQ,UAAU;AAChC,SAASC,UAAU,QAAQ,eAAe;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAE3C,MAAMC,IAAI,GAAGA,CAAA,KAAM;EACjB;AAAA,CACD;AACD,MAAMC,iBAAiB,GAAGN,IAAI;AAC9B,MAAMO,oBAAoB,GAAGF,IAAI;AACjC,MAAMG,oBAAoB,GAAGH,IAAI;AACjC,MAAMI,kBAAkB,GAAGJ,IAAI;AAC/B,MAAMK,oBAAoB,GAAGL,IAAI;AACjC,MAAMM,eAAe,GAAGN,IAAI;AAC5B,MAAMO,OAAO,GAAGP,IAAI;AACpB,MAAMQ,wBAAwB,GAAGb,IAAI;AACrC,MAAMc,iBAAiB,GAAGd,IAAI;AAC9B,MAAMe,wBAAwB,GAAGf,IAAI;AACrC,MAAMgB,uBAAuB,GAAGhB,IAAI;AACpC,MAAMiB,mBAAmB,GAAGjB,IAAI;AAChC,MAAMkB,sBAAsB,GAAGlB,IAAI;AACnC,MAAMmB,mBAAmB,GAAGnB,IAAI;AAChC,OAAO,MAAMoB,SAAS,GAAGA,CAAC;EAAEC,OAAO;EAAE,GAAGC;AAAU,CAAC,kBACjDlB,IAAA,CAACZ,uBAAuB;EAAC+B,QAAQ,EAAEF,OAAO,KAAK,KAAM;EAAA,GAAKC,IAAI;EAAAE,QAAA,eAC5DpB,IAAA,CAACJ,IAAI,IAAE;AAAC,CACe,CAC1B;AACD,OAAO,MAAMyB,UAAU,GAAGL,SAAS;AACnC,OAAO,MAAMM,UAAU,GAAGN,SAAS;AACnC,OAAO,MAAMO,gBAAgB,GAAGnC,uBAAuB;AAEvD,eAAe;EACbD,kBAAkB;EAClBC,uBAAuB;EACvBC,gBAAgB;EAChBC,wBAAwB;EACxBC,UAAU;EACVC,QAAQ;EACRC,MAAM;EACNC,SAAS;EACTC,mBAAmB;EACnBc,wBAAwB;EACxBC,iBAAiB;EACjBC,wBAAwB;EACxBC,uBAAuB;EACvBC,mBAAmB;EACnBC,sBAAsB;EACtBC,mBAAmB;EACnBb,iBAAiB;EACjBC,oBAAoB;EACpBC,oBAAoB;EACpBC,kBAAkB;EAClBC,oBAAoB;EACpBC,eAAe;EACfC,OAAO;EACP;EACAV,UAAU;EACVD;AACF,CAAC","ignoreList":[]}
diff --git a/node_modules/react-native-gesture-handler/lib/module/specs/NativeRNGestureHandlerModule.js b/node_modules/react-native-gesture-handler/lib/module/specs/NativeRNGestureHandlerModule.js
deleted file mode 100644
index 415ddde..0000000
--- a/node_modules/react-native-gesture-handler/lib/module/specs/NativeRNGestureHandlerModule.js
+++ /dev/null
@@ -1,3 +0,0 @@
-import { TurboModuleRegistry } from 'react-native';
-export default TurboModuleRegistry.getEnforcing('RNGestureHandlerModule');
-//# sourceMappingURL=NativeRNGestureHandlerModule.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/module/specs/NativeRNGestureHandlerModule.js.map b/node_modules/react-native-gesture-handler/lib/module/specs/NativeRNGestureHandlerModule.js.map
deleted file mode 100644
index dc1d272..0000000
--- a/node_modules/react-native-gesture-handler/lib/module/specs/NativeRNGestureHandlerModule.js.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"sources":["NativeRNGestureHandlerModule.ts"],"names":["TurboModuleRegistry","getEnforcing"],"mappings":"AAAA,SAASA,mBAAT,QAAiD,cAAjD;AAyBA,eAAeA,mBAAmB,CAACC,YAApB,CAAuC,wBAAvC,CAAf","sourcesContent":["import { TurboModuleRegistry, TurboModule } from 'react-native';\nimport { Double } from 'react-native/Libraries/Types/CodegenTypes';\n\nexport interface Spec extends TurboModule {\n  handleSetJSResponder: (tag: Double, blockNativeResponder: boolean) => void;\n  handleClearJSResponder: () => void;\n  createGestureHandler: (\n    handlerName: string,\n    handlerTag: Double,\n    // Record<> is not supported by codegen\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    config: Object\n  ) => void;\n  attachGestureHandler: (\n    handlerTag: Double,\n    newView: Double,\n    actionType: Double\n  ) => void;\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  updateGestureHandler: (handlerTag: Double, newConfig: Object) => void;\n  dropGestureHandler: (handlerTag: Double) => void;\n  install: () => boolean;\n  flushOperations: () => void;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('RNGestureHandlerModule');\n"]}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/module/specs/NativeRNGestureHandlerModule.ts b/node_modules/react-native-gesture-handler/lib/module/specs/NativeRNGestureHandlerModule.ts
new file mode 100644
index 0000000..21b1983
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/module/specs/NativeRNGestureHandlerModule.ts
@@ -0,0 +1,26 @@
+import { TurboModuleRegistry, TurboModule } from 'react-native';
+import { Double } from 'react-native/Libraries/Types/CodegenTypes';
+
+export interface Spec extends TurboModule {
+  handleSetJSResponder: (tag: Double, blockNativeResponder: boolean) => void;
+  handleClearJSResponder: () => void;
+  createGestureHandler: (
+    handlerName: string,
+    handlerTag: Double,
+    // Record<> is not supported by codegen
+    // eslint-disable-next-line @typescript-eslint/ban-types
+    config: Object
+  ) => void;
+  attachGestureHandler: (
+    handlerTag: Double,
+    newView: Double,
+    actionType: Double
+  ) => void;
+  // eslint-disable-next-line @typescript-eslint/ban-types
+  updateGestureHandler: (handlerTag: Double, newConfig: Object) => void;
+  dropGestureHandler: (handlerTag: Double) => void;
+  install: () => boolean;
+  flushOperations: () => void;
+}
+
+export default TurboModuleRegistry.getEnforcing<Spec>('RNGestureHandlerModule');
diff --git a/node_modules/react-native-gesture-handler/lib/module/specs/RNGestureHandlerButtonNativeComponent.js b/node_modules/react-native-gesture-handler/lib/module/specs/RNGestureHandlerButtonNativeComponent.js
deleted file mode 100644
index 9e67000..0000000
--- a/node_modules/react-native-gesture-handler/lib/module/specs/RNGestureHandlerButtonNativeComponent.js
+++ /dev/null
@@ -1,3 +0,0 @@
-import codegenNativeComponent from 'react-native/Libraries/Utilities/codegenNativeComponent';
-export default codegenNativeComponent('RNGestureHandlerButton');
-//# sourceMappingURL=RNGestureHandlerButtonNativeComponent.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/module/specs/RNGestureHandlerButtonNativeComponent.js.map b/node_modules/react-native-gesture-handler/lib/module/specs/RNGestureHandlerButtonNativeComponent.js.map
deleted file mode 100644
index 4046c7f..0000000
--- a/node_modules/react-native-gesture-handler/lib/module/specs/RNGestureHandlerButtonNativeComponent.js.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"sources":["RNGestureHandlerButtonNativeComponent.ts"],"names":["codegenNativeComponent"],"mappings":"AAAA,OAAOA,sBAAP,MAAmC,yDAAnC;AAqBA,eAAeA,sBAAsB,CAAc,wBAAd,CAArC","sourcesContent":["import codegenNativeComponent from 'react-native/Libraries/Utilities/codegenNativeComponent';\nimport type {\n  Int32,\n  WithDefault,\n  Float,\n} from 'react-native/Libraries/Types/CodegenTypes';\nimport type { ViewProps, ColorValue } from 'react-native';\n\ninterface NativeProps extends ViewProps {\n  exclusive?: WithDefault<boolean, true>;\n  foreground?: boolean;\n  borderless?: boolean;\n  enabled?: WithDefault<boolean, true>;\n  rippleColor?: ColorValue;\n  rippleRadius?: Int32;\n  touchSoundDisabled?: WithDefault<boolean, false>;\n  borderWidth?: Float;\n  borderColor?: ColorValue;\n  borderStyle?: WithDefault<string, 'solid'>;\n}\n\nexport default codegenNativeComponent<NativeProps>('RNGestureHandlerButton');\n"]}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/module/specs/RNGestureHandlerButtonNativeComponent.ts b/node_modules/react-native-gesture-handler/lib/module/specs/RNGestureHandlerButtonNativeComponent.ts
new file mode 100644
index 0000000..8d4c3da
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/module/specs/RNGestureHandlerButtonNativeComponent.ts
@@ -0,0 +1,22 @@
+import codegenNativeComponent from 'react-native/Libraries/Utilities/codegenNativeComponent';
+import type {
+  Int32,
+  WithDefault,
+  Float,
+} from 'react-native/Libraries/Types/CodegenTypes';
+import type { ViewProps, ColorValue } from 'react-native';
+
+interface NativeProps extends ViewProps {
+  exclusive?: WithDefault<boolean, true>;
+  foreground?: boolean;
+  borderless?: boolean;
+  enabled?: WithDefault<boolean, true>;
+  rippleColor?: ColorValue;
+  rippleRadius?: Int32;
+  touchSoundDisabled?: WithDefault<boolean, false>;
+  borderWidth?: Float;
+  borderColor?: ColorValue;
+  borderStyle?: WithDefault<string, 'solid'>;
+}
+
+export default codegenNativeComponent<NativeProps>('RNGestureHandlerButton');
diff --git a/node_modules/react-native-gesture-handler/lib/module/specs/RNGestureHandlerRootViewNativeComponent.js b/node_modules/react-native-gesture-handler/lib/module/specs/RNGestureHandlerRootViewNativeComponent.js
deleted file mode 100644
index e3b4d7e..0000000
--- a/node_modules/react-native-gesture-handler/lib/module/specs/RNGestureHandlerRootViewNativeComponent.js
+++ /dev/null
@@ -1,3 +0,0 @@
-import codegenNativeComponent from 'react-native/Libraries/Utilities/codegenNativeComponent';
-export default codegenNativeComponent('RNGestureHandlerRootView');
-//# sourceMappingURL=RNGestureHandlerRootViewNativeComponent.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/module/specs/RNGestureHandlerRootViewNativeComponent.js.map b/node_modules/react-native-gesture-handler/lib/module/specs/RNGestureHandlerRootViewNativeComponent.js.map
deleted file mode 100644
index 6c5fc98..0000000
--- a/node_modules/react-native-gesture-handler/lib/module/specs/RNGestureHandlerRootViewNativeComponent.js.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"sources":["RNGestureHandlerRootViewNativeComponent.ts"],"names":["codegenNativeComponent"],"mappings":"AAAA,OAAOA,sBAAP,MAAmC,yDAAnC;AAKA,eAAeA,sBAAsB,CAAc,0BAAd,CAArC","sourcesContent":["import codegenNativeComponent from 'react-native/Libraries/Utilities/codegenNativeComponent';\nimport type { ViewProps } from 'react-native';\n\ninterface NativeProps extends ViewProps {}\n\nexport default codegenNativeComponent<NativeProps>('RNGestureHandlerRootView');\n"]}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/module/specs/RNGestureHandlerRootViewNativeComponent.ts b/node_modules/react-native-gesture-handler/lib/module/specs/RNGestureHandlerRootViewNativeComponent.ts
new file mode 100644
index 0000000..e92061f
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/module/specs/RNGestureHandlerRootViewNativeComponent.ts
@@ -0,0 +1,6 @@
+import codegenNativeComponent from 'react-native/Libraries/Utilities/codegenNativeComponent';
+import type { ViewProps } from 'react-native';
+
+interface NativeProps extends ViewProps {}
+
+export default codegenNativeComponent<NativeProps>('RNGestureHandlerRootView');
diff --git a/node_modules/react-native-gesture-handler/lib/module/web/handlers/NativeViewGestureHandler.js.map b/node_modules/react-native-gesture-handler/lib/module/web/handlers/NativeViewGestureHandler.js.map
deleted file mode 100644
index 1aca7af..0000000
--- a/node_modules/react-native-gesture-handler/lib/module/web/handlers/NativeViewGestureHandler.js.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"sources":["NativeViewGestureHandler.ts"],"names":["Platform","State","DEFAULT_TOUCH_SLOP","GestureHandler","NativeViewGestureHandler","init","ref","propsRef","shouldCancelWhenOutside","OS","view","delegate","restoreViewStyles","buttonRole","getAttribute","updateGestureConfig","enabled","props","config","shouldActivateOnStart","undefined","disallowInterruption","style","onPointerDown","event","tracker","addToTracker","newPointerAction","tryToSendTouchEvent","onPointerAdd","lastCoords","getAbsoluteCoordsAverage","startX","x","startY","y","state","UNDETERMINED","begin","isRNGHText","hasAttribute","activate","onPointerMove","track","dx","dy","distSq","minDistSq","ACTIVE","cancel","BEGAN","onPointerLeave","onPointerUp","onUp","onPointerRemove","removeFromTracker","pointerId","trackedPointersCount","end","fail","shouldRecognizeSimultaneously","handler","disallowsInterruption","canBeInterrupted","handlerTag","shouldBeCancelledByOther","_handler","isButton"],"mappings":"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","sourcesContent":["import { Platform } from 'react-native';\nimport { State } from '../../State';\nimport { DEFAULT_TOUCH_SLOP } from '../constants';\nimport { AdaptedEvent, Config } from '../interfaces';\n\nimport GestureHandler from './GestureHandler';\nexport default class NativeViewGestureHandler extends GestureHandler {\n  private buttonRole!: boolean;\n\n  // TODO: Implement logic for activation on start\n  // @ts-ignore Logic yet to be implemented\n  private shouldActivateOnStart = false;\n  private disallowInterruption = false;\n\n  private startX = 0;\n  private startY = 0;\n  private minDistSq = DEFAULT_TOUCH_SLOP * DEFAULT_TOUCH_SLOP;\n\n  public init(ref: number, propsRef: React.RefObject<unknown>): void {\n    super.init(ref, propsRef);\n\n    this.shouldCancelWhenOutside = true;\n\n    if (Platform.OS !== 'web') {\n      return;\n    }\n\n    const view = this.delegate.view as HTMLElement;\n\n    this.restoreViewStyles(view);\n    this.buttonRole = view.getAttribute('role') === 'button';\n  }\n\n  public updateGestureConfig({ enabled = true, ...props }: Config): void {\n    super.updateGestureConfig({ enabled: enabled, ...props });\n\n    if (this.config.shouldActivateOnStart !== undefined) {\n      this.shouldActivateOnStart = this.config.shouldActivateOnStart;\n    }\n    if (this.config.disallowInterruption !== undefined) {\n      this.disallowInterruption = this.config.disallowInterruption;\n    }\n\n    const view = this.delegate.view as HTMLElement;\n    this.restoreViewStyles(view);\n  }\n\n  private restoreViewStyles(view: HTMLElement) {\n    if (!view) {\n      return;\n    }\n\n    view.style['touchAction'] = 'auto';\n    // @ts-ignore Turns on defualt touch behavior on Safari\n    view.style['WebkitTouchCallout'] = 'auto';\n  }\n\n  protected onPointerDown(event: AdaptedEvent): void {\n    this.tracker.addToTracker(event);\n    super.onPointerDown(event);\n    this.newPointerAction();\n\n    this.tryToSendTouchEvent(event);\n  }\n\n  protected onPointerAdd(event: AdaptedEvent): void {\n    this.tracker.addToTracker(event);\n    super.onPointerAdd(event);\n    this.newPointerAction();\n  }\n\n  private newPointerAction(): void {\n    const lastCoords = this.tracker.getAbsoluteCoordsAverage();\n    this.startX = lastCoords.x;\n    this.startY = lastCoords.y;\n\n    if (this.state !== State.UNDETERMINED) {\n      return;\n    }\n\n    this.begin();\n\n    const view = this.delegate.view as HTMLElement;\n    const isRNGHText = view.hasAttribute('rnghtext');\n\n    if (this.buttonRole || isRNGHText) {\n      this.activate();\n    }\n  }\n\n  protected onPointerMove(event: AdaptedEvent): void {\n    this.tracker.track(event);\n\n    const lastCoords = this.tracker.getAbsoluteCoordsAverage();\n    const dx = this.startX - lastCoords.x;\n    const dy = this.startY - lastCoords.y;\n    const distSq = dx * dx + dy * dy;\n\n    if (distSq >= this.minDistSq) {\n      if (this.buttonRole && this.state === State.ACTIVE) {\n        this.cancel();\n      } else if (!this.buttonRole && this.state === State.BEGAN) {\n        this.activate();\n      }\n    }\n  }\n\n  protected onPointerLeave(): void {\n    if (this.state === State.BEGAN || this.state === State.ACTIVE) {\n      this.cancel();\n    }\n  }\n\n  protected onPointerUp(event: AdaptedEvent): void {\n    super.onPointerUp(event);\n    this.onUp(event);\n  }\n\n  protected onPointerRemove(event: AdaptedEvent): void {\n    super.onPointerRemove(event);\n    this.onUp(event);\n  }\n\n  private onUp(event: AdaptedEvent): void {\n    this.tracker.removeFromTracker(event.pointerId);\n\n    if (this.tracker.trackedPointersCount === 0) {\n      if (this.state === State.ACTIVE) {\n        this.end();\n      } else {\n        this.fail();\n      }\n    }\n  }\n\n  public shouldRecognizeSimultaneously(handler: GestureHandler): boolean {\n    if (super.shouldRecognizeSimultaneously(handler)) {\n      return true;\n    }\n\n    if (\n      handler instanceof NativeViewGestureHandler &&\n      handler.state === State.ACTIVE &&\n      handler.disallowsInterruption()\n    ) {\n      return false;\n    }\n\n    const canBeInterrupted = !this.disallowInterruption;\n\n    if (\n      this.state === State.ACTIVE &&\n      handler.state === State.ACTIVE &&\n      canBeInterrupted\n    ) {\n      return false;\n    }\n\n    return (\n      this.state === State.ACTIVE && canBeInterrupted && handler.handlerTag > 0\n    );\n  }\n\n  public shouldBeCancelledByOther(_handler: GestureHandler): boolean {\n    return !this.disallowInterruption;\n  }\n\n  public disallowsInterruption(): boolean {\n    return this.disallowInterruption;\n  }\n\n  public isButton(): boolean {\n    return this.buttonRole;\n  }\n}\n"]}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/module/web/handlers/NativeViewGestureHandler.ts b/node_modules/react-native-gesture-handler/lib/module/web/handlers/NativeViewGestureHandler.ts
new file mode 100644
index 0000000..75ea19b
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/module/web/handlers/NativeViewGestureHandler.ts
@@ -0,0 +1,175 @@
+import { Platform } from 'react-native';
+import { State } from '../../State';
+import { DEFAULT_TOUCH_SLOP } from '../constants';
+import { AdaptedEvent, Config } from '../interfaces';
+
+import GestureHandler from './GestureHandler';
+export default class NativeViewGestureHandler extends GestureHandler {
+  private buttonRole!: boolean;
+
+  // TODO: Implement logic for activation on start
+  // @ts-ignore Logic yet to be implemented
+  private shouldActivateOnStart = false;
+  private disallowInterruption = false;
+
+  private startX = 0;
+  private startY = 0;
+  private minDistSq = DEFAULT_TOUCH_SLOP * DEFAULT_TOUCH_SLOP;
+
+  public init(ref: number, propsRef: React.RefObject<unknown>): void {
+    super.init(ref, propsRef);
+
+    this.shouldCancelWhenOutside = true;
+
+    if (Platform.OS !== 'web') {
+      return;
+    }
+
+    const view = this.delegate.view as HTMLElement;
+
+    this.restoreViewStyles(view);
+    this.buttonRole = view.getAttribute('role') === 'button';
+  }
+
+  public updateGestureConfig({ enabled = true, ...props }: Config): void {
+    super.updateGestureConfig({ enabled: enabled, ...props });
+
+    if (this.config.shouldActivateOnStart !== undefined) {
+      this.shouldActivateOnStart = this.config.shouldActivateOnStart;
+    }
+    if (this.config.disallowInterruption !== undefined) {
+      this.disallowInterruption = this.config.disallowInterruption;
+    }
+
+    const view = this.delegate.view as HTMLElement;
+    this.restoreViewStyles(view);
+  }
+
+  private restoreViewStyles(view: HTMLElement) {
+    if (!view) {
+      return;
+    }
+
+    view.style['touchAction'] = 'auto';
+    // @ts-ignore Turns on defualt touch behavior on Safari
+    view.style['WebkitTouchCallout'] = 'auto';
+  }
+
+  protected onPointerDown(event: AdaptedEvent): void {
+    this.tracker.addToTracker(event);
+    super.onPointerDown(event);
+    this.newPointerAction();
+
+    this.tryToSendTouchEvent(event);
+  }
+
+  protected onPointerAdd(event: AdaptedEvent): void {
+    this.tracker.addToTracker(event);
+    super.onPointerAdd(event);
+    this.newPointerAction();
+  }
+
+  private newPointerAction(): void {
+    const lastCoords = this.tracker.getAbsoluteCoordsAverage();
+    this.startX = lastCoords.x;
+    this.startY = lastCoords.y;
+
+    if (this.state !== State.UNDETERMINED) {
+      return;
+    }
+
+    this.begin();
+
+    const view = this.delegate.view as HTMLElement;
+    const isRNGHText = view.hasAttribute('rnghtext');
+
+    if (this.buttonRole || isRNGHText) {
+      this.activate();
+    }
+  }
+
+  protected onPointerMove(event: AdaptedEvent): void {
+    this.tracker.track(event);
+
+    const lastCoords = this.tracker.getAbsoluteCoordsAverage();
+    const dx = this.startX - lastCoords.x;
+    const dy = this.startY - lastCoords.y;
+    const distSq = dx * dx + dy * dy;
+
+    if (distSq >= this.minDistSq) {
+      if (this.buttonRole && this.state === State.ACTIVE) {
+        this.cancel();
+      } else if (!this.buttonRole && this.state === State.BEGAN) {
+        this.activate();
+      }
+    }
+  }
+
+  protected onPointerLeave(): void {
+    if (this.state === State.BEGAN || this.state === State.ACTIVE) {
+      this.cancel();
+    }
+  }
+
+  protected onPointerUp(event: AdaptedEvent): void {
+    super.onPointerUp(event);
+    this.onUp(event);
+  }
+
+  protected onPointerRemove(event: AdaptedEvent): void {
+    super.onPointerRemove(event);
+    this.onUp(event);
+  }
+
+  private onUp(event: AdaptedEvent): void {
+    this.tracker.removeFromTracker(event.pointerId);
+
+    if (this.tracker.trackedPointersCount === 0) {
+      if (this.state === State.ACTIVE) {
+        this.end();
+      } else {
+        this.fail();
+      }
+    }
+  }
+
+  public shouldRecognizeSimultaneously(handler: GestureHandler): boolean {
+    if (super.shouldRecognizeSimultaneously(handler)) {
+      return true;
+    }
+
+    if (
+      handler instanceof NativeViewGestureHandler &&
+      handler.state === State.ACTIVE &&
+      handler.disallowsInterruption()
+    ) {
+      return false;
+    }
+
+    const canBeInterrupted = !this.disallowInterruption;
+
+    if (
+      this.state === State.ACTIVE &&
+      handler.state === State.ACTIVE &&
+      canBeInterrupted
+    ) {
+      return false;
+    }
+
+    return (
+      this.state === State.ACTIVE && canBeInterrupted && handler.handlerTag > 0
+    );
+  }
+
+  public shouldBeCancelledByOther(_handler: GestureHandler): boolean {
+    return !this.disallowInterruption;
+  }
+
+  public disallowsInterruption(): boolean {
+    return this.disallowInterruption;
+  }
+
+  public isButton(): boolean {
+    return this.buttonRole;
+  }
+}
diff --git a/node_modules/react-native-gesture-handler/lib/module/web_hammer/NativeViewGestureHandler.js b/node_modules/react-native-gesture-handler/lib/module/web_hammer/NativeViewGestureHandler.js
deleted file mode 100644
index c39b36f..0000000
--- a/node_modules/react-native-gesture-handler/lib/module/web_hammer/NativeViewGestureHandler.js
+++ /dev/null
@@ -1,49 +0,0 @@
-import DiscreteGestureHandler from './DiscreteGestureHandler';
-import * as NodeManager from './NodeManager';
-import PressGestureHandler from './PressGestureHandler';
-import { TEST_MIN_IF_NOT_NAN, VEC_LEN_SQ } from './utils';
-
-class NativeViewGestureHandler extends PressGestureHandler {
-  get isNative() {
-    return true;
-  }
-
-  onRawEvent(ev) {
-    super.onRawEvent(ev);
-
-    if (!ev.isFinal) {
-      // if (this.ref instanceof ScrollView) {
-      if (TEST_MIN_IF_NOT_NAN(VEC_LEN_SQ({
-        x: ev.deltaX,
-        y: ev.deltaY
-      }), 10)) {
-        // @ts-ignore FIXME(TS) config type
-        if (this.config.disallowInterruption) {
-          const gestures = Object.values(NodeManager.getNodes()).filter(gesture => {
-            const {
-              handlerTag,
-              view,
-              isGestureRunning
-            } = gesture;
-            return (// Check if this gesture isn't self
-              handlerTag !== this.handlerTag && // Ensure the gesture needs to be cancelled
-              isGestureRunning && // ScrollView can cancel discrete gestures like taps and presses
-              gesture instanceof DiscreteGestureHandler && // Ensure a view exists and is a child of the current view
-              view && // @ts-ignore FIXME(TS) view type
-              this.view.contains(view)
-            );
-          }); // Cancel all of the gestures that passed the filter
-
-          for (const gesture of gestures) {
-            // TODO: Bacon: Send some cached event.
-            gesture.forceInvalidate(ev);
-          }
-        }
-      }
-    }
-  }
-
-}
-
-export default NativeViewGestureHandler;
-//# sourceMappingURL=NativeViewGestureHandler.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/module/web_hammer/NativeViewGestureHandler.js.map b/node_modules/react-native-gesture-handler/lib/module/web_hammer/NativeViewGestureHandler.js.map
deleted file mode 100644
index 67d1ad7..0000000
--- a/node_modules/react-native-gesture-handler/lib/module/web_hammer/NativeViewGestureHandler.js.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"sources":["NativeViewGestureHandler.ts"],"names":["DiscreteGestureHandler","NodeManager","PressGestureHandler","TEST_MIN_IF_NOT_NAN","VEC_LEN_SQ","NativeViewGestureHandler","isNative","onRawEvent","ev","isFinal","x","deltaX","y","deltaY","config","disallowInterruption","gestures","Object","values","getNodes","filter","gesture","handlerTag","view","isGestureRunning","contains","forceInvalidate"],"mappings":"AAAA,OAAOA,sBAAP,MAAmC,0BAAnC;AAEA,OAAO,KAAKC,WAAZ,MAA6B,eAA7B;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,SAASC,mBAAT,EAA8BC,UAA9B,QAAgD,SAAhD;;AAEA,MAAMC,wBAAN,SAAuCH,mBAAvC,CAA2D;AAC7C,MAARI,QAAQ,GAAG;AACb,WAAO,IAAP;AACD;;AAEDC,EAAAA,UAAU,CAACC,EAAD,EAAqB;AAC7B,UAAMD,UAAN,CAAiBC,EAAjB;;AACA,QAAI,CAACA,EAAE,CAACC,OAAR,EAAiB;AACf;AACA,UAAIN,mBAAmB,CAACC,UAAU,CAAC;AAAEM,QAAAA,CAAC,EAAEF,EAAE,CAACG,MAAR;AAAgBC,QAAAA,CAAC,EAAEJ,EAAE,CAACK;AAAtB,OAAD,CAAX,EAA6C,EAA7C,CAAvB,EAAyE;AACvE;AACA,YAAI,KAAKC,MAAL,CAAYC,oBAAhB,EAAsC;AACpC,gBAAMC,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAcjB,WAAW,CAACkB,QAAZ,EAAd,EAAsCC,MAAtC,CACdC,OAAD,IAAa;AACX,kBAAM;AAAEC,cAAAA,UAAF;AAAcC,cAAAA,IAAd;AAAoBC,cAAAA;AAApB,gBAAyCH,OAA/C;AACA,mBACE;AACAC,cAAAA,UAAU,KAAK,KAAKA,UAApB,IACA;AACAE,cAAAA,gBAFA,IAGA;AACAH,cAAAA,OAAO,YAAYrB,sBAJnB,IAKA;AACAuB,cAAAA,IANA,IAOA;AACA,mBAAKA,IAAL,CAAUE,QAAV,CAAmBF,IAAnB;AAVF;AAYD,WAfc,CAAjB,CADoC,CAkBpC;;AACA,eAAK,MAAMF,OAAX,IAAsBL,QAAtB,EAAgC;AAC9B;AACAK,YAAAA,OAAO,CAACK,eAAR,CAAwBlB,EAAxB;AACD;AACF;AACF;AACF;AACF;;AArCwD;;AAwC3D,eAAeH,wBAAf","sourcesContent":["import DiscreteGestureHandler from './DiscreteGestureHandler';\nimport { HammerInputExt } from './GestureHandler';\nimport * as NodeManager from './NodeManager';\nimport PressGestureHandler from './PressGestureHandler';\nimport { TEST_MIN_IF_NOT_NAN, VEC_LEN_SQ } from './utils';\n\nclass NativeViewGestureHandler extends PressGestureHandler {\n  get isNative() {\n    return true;\n  }\n\n  onRawEvent(ev: HammerInputExt) {\n    super.onRawEvent(ev);\n    if (!ev.isFinal) {\n      // if (this.ref instanceof ScrollView) {\n      if (TEST_MIN_IF_NOT_NAN(VEC_LEN_SQ({ x: ev.deltaX, y: ev.deltaY }), 10)) {\n        // @ts-ignore FIXME(TS) config type\n        if (this.config.disallowInterruption) {\n          const gestures = Object.values(NodeManager.getNodes()).filter(\n            (gesture) => {\n              const { handlerTag, view, isGestureRunning } = gesture;\n              return (\n                // Check if this gesture isn't self\n                handlerTag !== this.handlerTag &&\n                // Ensure the gesture needs to be cancelled\n                isGestureRunning &&\n                // ScrollView can cancel discrete gestures like taps and presses\n                gesture instanceof DiscreteGestureHandler &&\n                // Ensure a view exists and is a child of the current view\n                view &&\n                // @ts-ignore FIXME(TS) view type\n                this.view.contains(view)\n              );\n            }\n          );\n          // Cancel all of the gestures that passed the filter\n          for (const gesture of gestures) {\n            // TODO: Bacon: Send some cached event.\n            gesture.forceInvalidate(ev);\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default NativeViewGestureHandler;\n"]}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/module/web_hammer/NativeViewGestureHandler.ts b/node_modules/react-native-gesture-handler/lib/module/web_hammer/NativeViewGestureHandler.ts
new file mode 100644
index 0000000..7deb5bd
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/module/web_hammer/NativeViewGestureHandler.ts
@@ -0,0 +1,47 @@
+import DiscreteGestureHandler from './DiscreteGestureHandler';
+import { HammerInputExt } from './GestureHandler';
+import * as NodeManager from './NodeManager';
+import PressGestureHandler from './PressGestureHandler';
+import { TEST_MIN_IF_NOT_NAN, VEC_LEN_SQ } from './utils';
+
+class NativeViewGestureHandler extends PressGestureHandler {
+  get isNative() {
+    return true;
+  }
+
+  onRawEvent(ev: HammerInputExt) {
+    super.onRawEvent(ev);
+    if (!ev.isFinal) {
+      // if (this.ref instanceof ScrollView) {
+      if (TEST_MIN_IF_NOT_NAN(VEC_LEN_SQ({ x: ev.deltaX, y: ev.deltaY }), 10)) {
+        // @ts-ignore FIXME(TS) config type
+        if (this.config.disallowInterruption) {
+          const gestures = Object.values(NodeManager.getNodes()).filter(
+            (gesture) => {
+              const { handlerTag, view, isGestureRunning } = gesture;
+              return (
+                // Check if this gesture isn't self
+                handlerTag !== this.handlerTag &&
+                // Ensure the gesture needs to be cancelled
+                isGestureRunning &&
+                // ScrollView can cancel discrete gestures like taps and presses
+                gesture instanceof DiscreteGestureHandler &&
+                // Ensure a view exists and is a child of the current view
+                view &&
+                // @ts-ignore FIXME(TS) view type
+                this.view.contains(view)
+              );
+            }
+          );
+          // Cancel all of the gestures that passed the filter
+          for (const gesture of gestures) {
+            // TODO: Bacon: Send some cached event.
+            gesture.forceInvalidate(ev);
+          }
+        }
+      }
+    }
+  }
+}
+
+export default NativeViewGestureHandler;
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/ActionType.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/ActionType.d.ts.map
new file mode 100644
index 0000000..d228784
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/ActionType.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"ActionType.d.ts","sourceRoot":"","sources":["../../src/ActionType.ts"],"names":[],"mappings":"AAAA,eAAO,MAAM,UAAU;;;;;CAKb,CAAC;AAGX,MAAM,MAAM,UAAU,GAAG,CAAC,OAAO,UAAU,CAAC,CAAC,MAAM,OAAO,UAAU,CAAC,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/Directions.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/Directions.d.ts.map
new file mode 100644
index 0000000..4756486
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/Directions.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"Directions.d.ts","sourceRoot":"","sources":["../../src/Directions.ts"],"names":[],"mappings":"AAMA,eAAO,MAAM,UAAU;;;;;CAKb,CAAC;AAGX,eAAO,MAAM,kBAAkB;;;;;CAKrB,CAAC;AAGX,MAAM,MAAM,UAAU,GAAG,CAAC,OAAO,UAAU,CAAC,CAAC,MAAM,OAAO,UAAU,CAAC,CAAC;AAEtE,MAAM,MAAM,kBAAkB,GAC5B,CAAC,OAAO,kBAAkB,CAAC,CAAC,MAAM,OAAO,kBAAkB,CAAC,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/EnableNewWebImplementation.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/EnableNewWebImplementation.d.ts.map
new file mode 100644
index 0000000..eef130f
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/EnableNewWebImplementation.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"EnableNewWebImplementation.d.ts","sourceRoot":"","sources":["../../src/EnableNewWebImplementation.ts"],"names":[],"mappings":"AAMA;;GAEG;AACH,wBAAgB,mCAAmC,CACjD,aAAa,UAAO,GACnB,IAAI,CAON;AAED;;GAEG;AACH,wBAAgB,6BAA6B,CAC3C,6BAA6B,UAAO,GACnC,IAAI,CAsBN;AAED,wBAAgB,6BAA6B,IAAI,OAAO,CAGvD"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/GestureHandlerRootViewContext.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/GestureHandlerRootViewContext.d.ts.map
new file mode 100644
index 0000000..26ee1a2
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/GestureHandlerRootViewContext.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"GestureHandlerRootViewContext.d.ts","sourceRoot":"","sources":["../../src/GestureHandlerRootViewContext.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;;AAE1B,wBAA0C"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/PlatformConstants.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/PlatformConstants.d.ts.map
new file mode 100644
index 0000000..8e49c2e
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/PlatformConstants.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"PlatformConstants.d.ts","sourceRoot":"","sources":["../../src/PlatformConstants.ts"],"names":[],"mappings":"AAEA,KAAK,iBAAiB,GAAG;IACvB,mBAAmB,EAAE,OAAO,CAAC;CAC9B,CAAC;wBAGuB,iBAAiB;AAD1C,wBAC2C"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/PlatformConstants.web.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/PlatformConstants.web.d.ts.map
new file mode 100644
index 0000000..c06ad04
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/PlatformConstants.web.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"PlatformConstants.web.d.ts","sourceRoot":"","sources":["../../src/PlatformConstants.web.ts"],"names":[],"mappings":";;;AAAA,wBAIE"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/PointerType.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/PointerType.d.ts.map
new file mode 100644
index 0000000..f5abe37
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/PointerType.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"PointerType.d.ts","sourceRoot":"","sources":["../../src/PointerType.ts"],"names":[],"mappings":"AAAA,oBAAY,WAAW;IACrB,KAAK,IAAA;IACL,MAAM,IAAA;IACN,KAAK,IAAA;IACL,GAAG,IAAA;IACH,KAAK,IAAA;CACN"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/RNGestureHandlerModule.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/RNGestureHandlerModule.d.ts.map
new file mode 100644
index 0000000..01152e0
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/RNGestureHandlerModule.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"RNGestureHandlerModule.d.ts","sourceRoot":"","sources":["../../src/RNGestureHandlerModule.ts"],"names":[],"mappings":"AAGA,OAAO,MAAM,MAAM,sCAAsC,CAAC;AAC1D,eAAe,MAAM,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/RNGestureHandlerModule.web.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/RNGestureHandlerModule.web.d.ts.map
new file mode 100644
index 0000000..858f608
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/RNGestureHandlerModule.web.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"RNGestureHandlerModule.web.d.ts","sourceRoot":"","sources":["../../src/RNGestureHandlerModule.web.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAE1B,OAAO,KAAK,EAAE,UAAU,EAAE,MAAM,cAAc,CAAC;AAE/C,OAAO,EAAE,QAAQ,EAAkB,MAAM,gBAAgB,CAAC;AAC1D,OAAO,KAAK,EAAE,MAAM,EAAE,MAAM,kBAAkB,CAAC;;8BAcnB,MAAM,wBAAwB,OAAO;;yBAM1C,CAAC,eACP,MAAM,OAAO,QAAQ,cACtB,MAAM,UACV,CAAC;qCAmCG,MAAM,WAET,GAAG,eACC,UAAU,YACb,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC;qCAwBH,MAAM,aAAa,MAAM;sCAYxB,MAAM;mCAOT,MAAM;;;AA5FvC,wBAyGE"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/RNGestureHandlerModule.windows.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/RNGestureHandlerModule.windows.d.ts.map
new file mode 100644
index 0000000..3244072
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/RNGestureHandlerModule.windows.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"RNGestureHandlerModule.windows.d.ts","sourceRoot":"","sources":["../../src/RNGestureHandlerModule.windows.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAE1B,OAAO,EAAE,UAAU,EAAE,MAAM,cAAc,CAAC;AAG1C,OAAO,iBAAiB,MAAM,kCAAkC,CAAC;AACjE,OAAO,iBAAiB,MAAM,kCAAkC,CAAC;AACjE,OAAO,uBAAuB,MAAM,wCAAwC,CAAC;AAC7E,OAAO,mBAAmB,MAAM,oCAAoC,CAAC;AACrE,OAAO,sBAAsB,MAAM,uCAAuC,CAAC;AAC3E,OAAO,mBAAmB,MAAM,oCAAoC,CAAC;AACrE,OAAO,wBAAwB,MAAM,yCAAyC,CAAC;AAC/E,OAAO,oBAAoB,MAAM,qCAAqC,CAAC;AACvE,OAAO,EAAE,MAAM,EAAE,MAAM,kBAAkB,CAAC;AAE1C,eAAO,MAAM,QAAQ;;;;;;;;;CASpB,CAAC;;+BAG2B,MAAM,yBAAyB,OAAO;;yBAM5C,CAAC,gBACN,MAAM,OAAO,QAAQ,eACtB,MAAM,WACV,CAAC;sCAKG,MAAM,YAET,GAAG,eACA,UAAU,aACZ,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC;sCAIH,MAAM,cAAc,MAAM;uCAGzB,MAAM;oCAGT,MAAM;;;AA7BxC,wBAmCE"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/RNRenderer.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/RNRenderer.d.ts.map
new file mode 100644
index 0000000..7900ee7
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/RNRenderer.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"RNRenderer.d.ts","sourceRoot":"","sources":["../../src/RNRenderer.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,OAAO,IAAI,UAAU,EAAE,MAAM,mDAAmD,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/RNRenderer.web.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/RNRenderer.web.d.ts.map
new file mode 100644
index 0000000..c77bbcc
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/RNRenderer.web.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"RNRenderer.web.d.ts","sourceRoot":"","sources":["../../src/RNRenderer.web.ts"],"names":[],"mappings":"AAAA,eAAO,MAAM,UAAU;wCACe,GAAG;CACxC,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/State.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/State.d.ts.map
new file mode 100644
index 0000000..7390e61
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/State.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"State.d.ts","sourceRoot":"","sources":["../../src/State.ts"],"names":[],"mappings":"AAEA,eAAO,MAAM,KAAK;;;;;;;CAOR,CAAC;AAGX,MAAM,MAAM,KAAK,GAAG,CAAC,OAAO,KAAK,CAAC,CAAC,MAAM,OAAO,KAAK,CAAC,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/TouchEventType.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/TouchEventType.d.ts.map
new file mode 100644
index 0000000..3c4b744
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/TouchEventType.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"TouchEventType.d.ts","sourceRoot":"","sources":["../../src/TouchEventType.ts"],"names":[],"mappings":"AAAA,eAAO,MAAM,cAAc;;;;;;CAMjB,CAAC;AAGX,MAAM,MAAM,cAAc,GACxB,CAAC,OAAO,cAAc,CAAC,CAAC,MAAM,OAAO,cAAc,CAAC,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/components/DrawerLayout.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/components/DrawerLayout.d.ts.map
new file mode 100644
index 0000000..47f8a63
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/components/DrawerLayout.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"DrawerLayout.d.ts","sourceRoot":"","sources":["../../../src/components/DrawerLayout.tsx"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/components/GestureButtons.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/components/GestureButtons.d.ts.map
new file mode 100644
index 0000000..f54e005
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/components/GestureButtons.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"GestureButtons.d.ts","sourceRoot":"","sources":["../../../src/components/GestureButtons.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAY/B,OAAO,KAAK,EAEV,eAAe,EAEf,eAAe,EAEf,qBAAqB,EACtB,MAAM,uBAAuB,CAAC;AAG/B,eAAO,MAAM,SAAS,8KAGpB,CAAC;AA8HH,eAAO,MAAM,UAAU,mHAGyC,CAAC;AAqEjE,eAAO,MAAM,UAAU,mHAGyC,CAAC;AAsCjE,eAAO,MAAM,gBAAgB,yHAGyC,CAAC;AAEvE,OAAO,EAAE,OAAO,IAAI,gBAAgB,EAAE,MAAM,wBAAwB,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/components/GestureButtonsProps.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/components/GestureButtonsProps.d.ts.map
new file mode 100644
index 0000000..15f2c5d
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/components/GestureButtonsProps.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"GestureButtonsProps.d.ts","sourceRoot":"","sources":["../../../src/components/GestureButtonsProps.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EACL,kBAAkB,EAClB,UAAU,EACV,iBAAiB,EACjB,SAAS,EACT,SAAS,EACV,MAAM,cAAc,CAAC;AACtB,OAAO,KAAK,EAAE,6BAA6B,EAAE,MAAM,sCAAsC,CAAC;AAE1F,MAAM,WAAW,cACf,SAAQ,6BAA6B,EACnC,kBAAkB;IACpB;;;OAGG;IACH,SAAS,CAAC,EAAE,OAAO,CAAC;IAEpB;;;;OAIG;IACH,WAAW,CAAC,EAAE,MAAM,GAAG,UAAU,GAAG,IAAI,CAAC;IAEzC;;;;OAIG;IACH,YAAY,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC;IAE7B;;;;OAIG;IACH,UAAU,CAAC,EAAE,OAAO,CAAC;IAErB;;;;OAIG;IACH,UAAU,CAAC,EAAE,OAAO,CAAC;IAErB;;;;OAIG;IACH,kBAAkB,CAAC,EAAE,OAAO,CAAC;IAE7B;;OAEG;IACH,KAAK,CAAC,EAAE,SAAS,CAAC,SAAS,CAAC,CAAC;IAE7B;;OAEG;IACH,QAAQ,CAAC,EAAE,CAAC,KAAK,EAAE,iBAAiB,KAAK,IAAI,CAAC;IAE9C;;;OAGG;IAEH,gBAAgB,CAAC,EAAE,QAAQ,GAAG,IAAI,CAAC;IAEnC;;;OAGG;IAEH,kBAAkB,CAAC,EAAE,QAAQ,GAAG,IAAI,CAAC;IAErC;;;OAGG;IAEH,mBAAmB,CAAC,EAAE,QAAQ,GAAG,IAAI,CAAC;IAEtC;;;OAGG;IAEH,oBAAoB,CAAC,EAAE,QAAQ,GAAG,IAAI,CAAC;CACxC;AACD,UAAU,kBAAkB;IAC1B,QAAQ,CAAC,EAAE,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC;CACzD;AAED,MAAM,WAAW,eAAgB,SAAQ,cAAc;IACrD;;;OAGG;IACH,OAAO,CAAC,EAAE,CAAC,aAAa,EAAE,OAAO,KAAK,IAAI,CAAC;IAE3C;;;OAGG;IACH,WAAW,CAAC,EAAE,MAAM,IAAI,CAAC;IAEzB;;;;OAIG;IACH,mBAAmB,CAAC,EAAE,CAAC,MAAM,EAAE,OAAO,KAAK,IAAI,CAAC;IAChD,KAAK,CAAC,EAAE,SAAS,CAAC,SAAS,CAAC,CAAC;IAC7B,MAAM,CAAC,EAAE,MAAM,CAAC;IAEhB;;;OAGG;IACH,cAAc,CAAC,EAAE,MAAM,CAAC;CACzB;AACD,MAAM,WAAW,sBACf,SAAQ,eAAe,EACrB,kBAAkB;CAAG;AAEzB,MAAM,WAAW,eAAgB,SAAQ,eAAe;IACtD;;OAEG;IACH,aAAa,CAAC,EAAE,MAAM,CAAC;IAEvB;;;;OAIG;IACH,aAAa,CAAC,EAAE,MAAM,CAAC;CACxB;AACD,MAAM,WAAW,sBACf,SAAQ,eAAe,EACrB,kBAAkB;CAAG;AAEzB,MAAM,WAAW,qBAAsB,SAAQ,eAAe;IAC5D;;;;OAIG;IACH,aAAa,CAAC,EAAE,MAAM,CAAC;CACxB;AACD,MAAM,WAAW,4BACf,SAAQ,qBAAqB,EAC3B,kBAAkB;CAAG"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/components/GestureComponents.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/components/GestureComponents.d.ts.map
new file mode 100644
index 0000000..4325ac7
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/components/GestureComponents.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"GestureComponents.d.ts","sourceRoot":"","sources":["../../../src/components/GestureComponents.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EACL,iBAAiB,EACjB,YAAY,EACZ,aAAa,EACb,YAAY,EACb,MAAM,OAAO,CAAC;AACf,OAAO,EACL,UAAU,IAAI,YAAY,EAC1B,eAAe,IAAI,iBAAiB,EACpC,MAAM,IAAI,QAAQ,EAClB,WAAW,IAAI,aAAa,EAC5B,SAAS,IAAI,WAAW,EACxB,cAAc,IAAI,gBAAgB,EAClC,mBAAmB,IAAI,qBAAqB,EAC5C,wBAAwB,IAAI,0BAA0B,EACtD,QAAQ,IAAI,UAAU,EACtB,aAAa,IAAI,eAAe,EAChC,cAAc,IAAI,gBAAgB,EACnC,MAAM,cAAc,CAAC;AAItB,OAAO,EACL,6BAA6B,EAE9B,MAAM,sCAAsC,CAAC;AAI9C,eAAO,MAAM,cAAc,6JAGzB,CAAC;AAEH,MAAM,MAAM,cAAc,GAAG,OAAO,cAAc,GAAG,gBAAgB,CAAC;AAEtE,QAAA,MAAM,YAAY;;kFAMjB,CAAC;AACF,eAAO,MAAM,UAAU,wHAwBrB,CAAC;AAIH,MAAM,MAAM,UAAU,GAAG,OAAO,YAAY,GAAG,YAAY,CAAC;AAE5D,eAAO,MAAM,MAAM,gIAIjB,CAAC;AAEH,MAAM,MAAM,MAAM,GAAG,OAAO,MAAM,GAAG,QAAQ,CAAC;AAE9C,eAAO,MAAM,SAAS,mIAAqD,CAAC;AAE5E,MAAM,MAAM,SAAS,GAAG,OAAO,SAAS,GAAG,WAAW,CAAC;AAEvD,eAAO,MAAM,mBAAmB;;kFAEwB,CAAC;AAEzD,MAAM,MAAM,mBAAmB,GAAG,OAAO,mBAAmB,GAC1D,qBAAqB,CAAC;AAExB,eAAO,MAAM,QAAQ,EA6Cf,CAAC,KAAK,GAAG,GAAG,EAChB,KAAK,EAAE,iBAAiB,CACtB,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,EAAE,uBAAuB,CAAC,GACnD,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,GAC9B,6BAA6B,CAChC,EACD,GAAG,CAAC,EAAE,YAAY,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,KAChC,YAAY,GAAG,IAAI,CAAC;AAEzB,MAAM,MAAM,QAAQ,CAAC,KAAK,GAAG,GAAG,IAAI,OAAO,QAAQ,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/components/GestureComponents.web.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/components/GestureComponents.web.d.ts.map
new file mode 100644
index 0000000..0b25632
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/components/GestureComponents.web.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"GestureComponents.web.d.ts","sourceRoot":"","sources":["../../../src/components/GestureComponents.web.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAKL,aAAa,EAEd,MAAM,cAAc,CAAC;AAItB,eAAO,MAAM,UAAU,sKAErB,CAAC;AAEH,eAAO,MAAM,MAAM,kKAIjB,CAAC;AACH,eAAO,MAAM,SAAS,qKAAmC,CAAC;AAC1D,eAAO,MAAM,mBAAmB,yBAG/B,CAAC;AAKF,eAAO,MAAM,cAAc,gKAA4B,CAAC;AAExD,eAAO,MAAM,QAAQ,wFAQpB,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/components/GestureHandlerButton.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/components/GestureHandlerButton.d.ts.map
new file mode 100644
index 0000000..0665161
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/components/GestureHandlerButton.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"GestureHandlerButton.d.ts","sourceRoot":"","sources":["../../../src/components/GestureHandlerButton.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAa,EAAE,MAAM,cAAc,CAAC;AAC7C,OAAO,KAAK,EAAE,cAAc,EAAE,MAAM,uBAAuB,CAAC;wBAGJ,aAAa,CAAC,cAAc,CAAC;AAArF,wBAAsF"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/components/GestureHandlerButton.web.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/components/GestureHandlerButton.web.d.ts.map
new file mode 100644
index 0000000..5598e1a
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/components/GestureHandlerButton.web.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"GestureHandlerButton.web.d.ts","sourceRoot":"","sources":["../../../src/components/GestureHandlerButton.web.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,IAAI,EAAE,MAAM,cAAc,CAAC;;AAEpC,wBAEE"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/components/GestureHandlerRootView.android.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/components/GestureHandlerRootView.android.d.ts.map
new file mode 100644
index 0000000..a44605b
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/components/GestureHandlerRootView.android.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"GestureHandlerRootView.android.d.ts","sourceRoot":"","sources":["../../../src/components/GestureHandlerRootView.android.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,iBAAiB,EAAE,MAAM,OAAO,CAAC;AAC1C,OAAO,EAAE,SAAS,EAAc,MAAM,cAAc,CAAC;AAKrD,MAAM,WAAW,2BACf,SAAQ,iBAAiB,CAAC,SAAS,CAAC;CAAG;AAEzC,MAAM,CAAC,OAAO,UAAU,sBAAsB,CAAC,EAC7C,KAAK,EACL,GAAG,IAAI,EACR,EAAE,2BAA2B,qBAc7B"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/components/GestureHandlerRootView.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/components/GestureHandlerRootView.d.ts.map
new file mode 100644
index 0000000..6abf600
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/components/GestureHandlerRootView.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"GestureHandlerRootView.d.ts","sourceRoot":"","sources":["../../../src/components/GestureHandlerRootView.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,iBAAiB,EAAE,MAAM,OAAO,CAAC;AAC1C,OAAO,EAAQ,SAAS,EAAc,MAAM,cAAc,CAAC;AAI3D,MAAM,WAAW,2BACf,SAAQ,iBAAiB,CAAC,SAAS,CAAC;CAAG;AAEzC,MAAM,CAAC,OAAO,UAAU,sBAAsB,CAAC,EAC7C,KAAK,EACL,GAAG,IAAI,EACR,EAAE,2BAA2B,qBAW7B"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/components/GestureHandlerRootView.web.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/components/GestureHandlerRootView.web.d.ts.map
new file mode 100644
index 0000000..cab58a8
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/components/GestureHandlerRootView.web.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"GestureHandlerRootView.web.d.ts","sourceRoot":"","sources":["../../../src/components/GestureHandlerRootView.web.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,iBAAiB,EAAE,MAAM,OAAO,CAAC;AAC1C,OAAO,EAAQ,SAAS,EAAc,MAAM,cAAc,CAAC;AAG3D,MAAM,WAAW,2BACf,SAAQ,iBAAiB,CAAC,SAAS,CAAC;CAAG;AAEzC,MAAM,CAAC,OAAO,UAAU,sBAAsB,CAAC,EAC7C,KAAK,EACL,GAAG,IAAI,EACR,EAAE,2BAA2B,qBAM7B"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/components/Pressable/Pressable.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/components/Pressable/Pressable.d.ts.map
new file mode 100644
index 0000000..db5b6fb
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/components/Pressable/Pressable.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"Pressable.d.ts","sourceRoot":"","sources":["../../../../src/components/Pressable/Pressable.tsx"],"names":[],"mappings":"AAAA,OAAO,KAMN,MAAM,OAAO,CAAC;AAGf,OAAO,EAEL,cAAc,EAEf,MAAM,kBAAkB,CAAC;AAgC1B,QAAA,MAAM,SAAS,GAAI,OAAO,cAAc,sBAyVvC,CAAC;AAEF,eAAe,SAAS,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/components/Pressable/PressableProps.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/components/Pressable/PressableProps.d.ts.map
new file mode 100644
index 0000000..c233ca8
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/components/Pressable/PressableProps.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"PressableProps.d.ts","sourceRoot":"","sources":["../../../../src/components/Pressable/PressableProps.tsx"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/components/Pressable/StateMachine.d.ts b/node_modules/react-native-gesture-handler/lib/typescript/components/Pressable/StateMachine.d.ts
new file mode 100644
index 0000000..65ca94d
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/components/Pressable/StateMachine.d.ts
@@ -0,0 +1,16 @@
+import { PressableEvent } from './PressableProps';
+export interface StateDefinition {
+    eventName: string;
+    callback?: (event: PressableEvent) => void;
+}
+declare class PressableStateMachine {
+    private states;
+    private currentStepIndex;
+    private eventPayload;
+    constructor();
+    setStates(states: StateDefinition[]): void;
+    reset(): void;
+    handleEvent(eventName: string, eventPayload?: PressableEvent): void;
+}
+export { PressableStateMachine };
+//# sourceMappingURL=StateMachine.d.ts.map
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/components/Pressable/StateMachine.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/components/Pressable/StateMachine.d.ts.map
new file mode 100644
index 0000000..5ea7711
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/components/Pressable/StateMachine.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"StateMachine.d.ts","sourceRoot":"","sources":["../../../../src/components/Pressable/StateMachine.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,kBAAkB,CAAC;AAElD,MAAM,WAAW,eAAe;IAC9B,SAAS,EAAE,MAAM,CAAC;IAClB,QAAQ,CAAC,EAAE,CAAC,KAAK,EAAE,cAAc,KAAK,IAAI,CAAC;CAC5C;AAED,cAAM,qBAAqB;IACzB,OAAO,CAAC,MAAM,CAA2B;IACzC,OAAO,CAAC,gBAAgB,CAAS;IACjC,OAAO,CAAC,YAAY,CAAwB;;IAQrC,SAAS,CAAC,MAAM,EAAE,eAAe,EAAE;IAInC,KAAK;IAKL,WAAW,CAAC,SAAS,EAAE,MAAM,EAAE,YAAY,CAAC,EAAE,cAAc;CA2BpE;AAED,OAAO,EAAE,qBAAqB,EAAE,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/components/Pressable/index.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/components/Pressable/index.d.ts.map
new file mode 100644
index 0000000..75378e1
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/components/Pressable/index.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"index.d.ts","sourceRoot":"","sources":["../../../../src/components/Pressable/index.ts"],"names":[],"mappings":"AAAA,YAAY,EACV,cAAc,EACd,0BAA0B,GAC3B,MAAM,kBAAkB,CAAC;AAC1B,OAAO,EAAE,OAAO,EAAE,MAAM,aAAa,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/components/Pressable/stateDefinitions.d.ts b/node_modules/react-native-gesture-handler/lib/typescript/components/Pressable/stateDefinitions.d.ts
new file mode 100644
index 0000000..3ae5d3d
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/components/Pressable/stateDefinitions.d.ts
@@ -0,0 +1,10 @@
+import { PressableEvent } from './PressableProps';
+import { StateDefinition } from './StateMachine';
+export declare enum StateMachineEvent {
+    NATIVE_BEGIN = "nativeBegin",
+    NATIVE_START = "nativeStart",
+    FINALIZE = "finalize",
+    LONG_PRESS_TOUCHES_DOWN = "longPressTouchesDown"
+}
+export declare function getStatesConfig(handlePressIn: (event: PressableEvent) => void, handlePressOut: (event: PressableEvent) => void): StateDefinition[];
+//# sourceMappingURL=stateDefinitions.d.ts.map
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/components/Pressable/stateDefinitions.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/components/Pressable/stateDefinitions.d.ts.map
new file mode 100644
index 0000000..ea51c43
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/components/Pressable/stateDefinitions.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"stateDefinitions.d.ts","sourceRoot":"","sources":["../../../../src/components/Pressable/stateDefinitions.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,cAAc,EAAE,MAAM,kBAAkB,CAAC;AAClD,OAAO,EAAE,eAAe,EAAE,MAAM,gBAAgB,CAAC;AAEjD,oBAAY,iBAAiB;IAC3B,YAAY,gBAAgB;IAC5B,YAAY,gBAAgB;IAC5B,QAAQ,aAAa;IACrB,uBAAuB,yBAAyB;CACjD;AAmGD,wBAAgB,eAAe,CAC7B,aAAa,EAAE,CAAC,KAAK,EAAE,cAAc,KAAK,IAAI,EAC9C,cAAc,EAAE,CAAC,KAAK,EAAE,cAAc,KAAK,IAAI,GAC9C,eAAe,EAAE,CAanB"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/components/Pressable/utils.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/components/Pressable/utils.d.ts.map
new file mode 100644
index 0000000..179b1ba
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/components/Pressable/utils.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"utils.d.ts","sourceRoot":"","sources":["../../../../src/components/Pressable/utils.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,cAAc,CAAC;AACtC,OAAO,EACL,+BAA+B,EAC/B,mCAAmC,EACpC,MAAM,2CAA2C,CAAC;AACnD,OAAO,EAEL,uBAAuB,EACvB,iBAAiB,EAClB,MAAM,qCAAqC,CAAC;AAC7C,OAAO,EACL,mBAAmB,EACnB,mBAAmB,EACnB,cAAc,EACf,MAAM,kBAAkB,CAAC;AAE1B,QAAA,MAAM,aAAa,GAAI,OAAO,MAAM,KAAG,MAKrC,CAAC;AAEH,QAAA,MAAM,SAAS,GAAI,GAAG,MAAM,EAAE,GAAG,MAAM,KAAG,MAKxC,CAAC;AAoCH,QAAA,MAAM,kBAAkB,GACtB,YAAY,mBAAmB,EAC/B,OAAO,MAAM,EACb,QAAQ,mBAAmB,YAKgB,CAAC;AAE9C,QAAA,MAAM,uBAAuB,GAC3B,OAAO,uBAAuB,CAC5B,+BAA+B,GAAG,mCAAmC,CACtE,KACA,cAsBF,CAAC;AAEF,QAAA,MAAM,4BAA4B,GAChC,OAAO,iBAAiB,KACvB,cA2BF,CAAC;AAEF,OAAO,EACL,aAAa,EACb,SAAS,EACT,kBAAkB,EAClB,uBAAuB,EACvB,4BAA4B,GAC7B,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/components/ReanimatedDrawerLayout.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/components/ReanimatedDrawerLayout.d.ts.map
new file mode 100644
index 0000000..bb9df40
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/components/ReanimatedDrawerLayout.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"ReanimatedDrawerLayout.d.ts","sourceRoot":"","sources":["../../../src/components/ReanimatedDrawerLayout.tsx"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/components/ReanimatedSwipeable/ReanimatedSwipeable.d.ts b/node_modules/react-native-gesture-handler/lib/typescript/components/ReanimatedSwipeable/ReanimatedSwipeable.d.ts
new file mode 100644
index 0000000..4769b4b
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/components/ReanimatedSwipeable/ReanimatedSwipeable.d.ts
@@ -0,0 +1,6 @@
+import { ForwardedRef } from 'react';
+import { SwipeableProps, SwipeableMethods } from '.';
+declare const Swipeable: (props: SwipeableProps) => import("react").JSX.Element;
+export default Swipeable;
+export type SwipeableRef = ForwardedRef<SwipeableMethods>;
+//# sourceMappingURL=ReanimatedSwipeable.d.ts.map
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/components/ReanimatedSwipeable/ReanimatedSwipeable.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/components/ReanimatedSwipeable/ReanimatedSwipeable.d.ts.map
new file mode 100644
index 0000000..f0980a0
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/components/ReanimatedSwipeable/ReanimatedSwipeable.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"ReanimatedSwipeable.d.ts","sourceRoot":"","sources":["../../../../src/components/ReanimatedSwipeable/ReanimatedSwipeable.tsx"],"names":[],"mappings":"AAAA,OAAO,EAA6C,YAAY,EAAE,MAAM,OAAO,CAAC;AAahF,OAAO,EAAE,cAAc,EAAE,gBAAgB,EAAkB,MAAM,GAAG,CAAC;AAqBrE,QAAA,MAAM,SAAS,GAAI,OAAO,cAAc,gCAqiBvC,CAAC;AAEF,eAAe,SAAS,CAAC;AACzB,MAAM,MAAM,YAAY,GAAG,YAAY,CAAC,gBAAgB,CAAC,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/components/ReanimatedSwipeable.d.ts b/node_modules/react-native-gesture-handler/lib/typescript/components/ReanimatedSwipeable/ReanimatedSwipeableProps.d.ts
similarity index 87%
rename from node_modules/react-native-gesture-handler/lib/typescript/components/ReanimatedSwipeable.d.ts
rename to node_modules/react-native-gesture-handler/lib/typescript/components/ReanimatedSwipeable/ReanimatedSwipeableProps.d.ts
index 2206208..c8798f4 100644
--- a/node_modules/react-native-gesture-handler/lib/typescript/components/ReanimatedSwipeable.d.ts
+++ b/node_modules/react-native-gesture-handler/lib/typescript/components/ReanimatedSwipeable/ReanimatedSwipeableProps.d.ts
@@ -1,14 +1,18 @@
-import React, { ForwardedRef } from 'react';
-import { GestureRef } from '../handlers/gestures/gesture';
-import type { PanGestureHandlerProps } from '../handlers/PanGestureHandler';
+import React from 'react';
+import type { PanGestureHandlerProps } from '../../handlers/PanGestureHandler';
 import { SharedValue } from 'react-native-reanimated';
 import { StyleProp, ViewStyle } from 'react-native';
+import { RelationPropType } from '../utils';
 type SwipeableExcludes = Exclude<keyof PanGestureHandlerProps, 'onGestureEvent' | 'onHandlerStateChange'>;
-declare enum SwipeDirection {
+export declare enum SwipeDirection {
     LEFT = "left",
     RIGHT = "right"
 }
 export interface SwipeableProps extends Pick<PanGestureHandlerProps, SwipeableExcludes> {
+    /**
+     *
+     */
+    ref?: React.RefObject<SwipeableMethods | null>;
     /**
      * Enables two-finger gestures on supported devices, for example iPads with
      * trackpads. If not enabled the gesture will require click + drag, with
@@ -124,7 +128,17 @@ export interface SwipeableProps extends Pick<PanGestureHandlerProps, SwipeableEx
      * A gesture object or an array of gesture objects containing the configuration and callbacks to be
      * used with the swipeable's gesture handler.
      */
-    simultaneousWithExternalGesture?: Exclude<GestureRef, number> | Exclude<GestureRef, number>[];
+    simultaneousWithExternalGesture?: RelationPropType;
+    /**
+     * A gesture object or an array of gesture objects containing the configuration and callbacks to be
+     * used with the swipeable's gesture handler.
+     */
+    requireExternalGestureToFail?: RelationPropType;
+    /**
+     * A gesture object or an array of gesture objects containing the configuration and callbacks to be
+     * used with the swipeable's gesture handler.
+     */
+    blocksExternalGesture?: RelationPropType;
 }
 export interface SwipeableMethods {
     close: () => void;
@@ -132,6 +146,5 @@ export interface SwipeableMethods {
     openRight: () => void;
     reset: () => void;
 }
-declare const Swipeable: React.ForwardRefExoticComponent<SwipeableProps & React.RefAttributes<SwipeableMethods>>;
-export default Swipeable;
-export type SwipeableRef = ForwardedRef<SwipeableMethods>;
+export {};
+//# sourceMappingURL=ReanimatedSwipeableProps.d.ts.map
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/components/ReanimatedSwipeable/ReanimatedSwipeableProps.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/components/ReanimatedSwipeable/ReanimatedSwipeableProps.d.ts.map
new file mode 100644
index 0000000..7207aec
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/components/ReanimatedSwipeable/ReanimatedSwipeableProps.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"ReanimatedSwipeableProps.d.ts","sourceRoot":"","sources":["../../../../src/components/ReanimatedSwipeable/ReanimatedSwipeableProps.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/components/ReanimatedSwipeable/index.d.ts b/node_modules/react-native-gesture-handler/lib/typescript/components/ReanimatedSwipeable/index.d.ts
new file mode 100644
index 0000000..1d485ae
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/components/ReanimatedSwipeable/index.d.ts
@@ -0,0 +1,3 @@
+export { type SwipeableProps, type SwipeableMethods, SwipeDirection, } from './ReanimatedSwipeableProps';
+export { default } from './ReanimatedSwipeable';
+//# sourceMappingURL=index.d.ts.map
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/components/ReanimatedSwipeable/index.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/components/ReanimatedSwipeable/index.d.ts.map
new file mode 100644
index 0000000..79c20cf
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/components/ReanimatedSwipeable/index.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"index.d.ts","sourceRoot":"","sources":["../../../../src/components/ReanimatedSwipeable/index.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,KAAK,cAAc,EACnB,KAAK,gBAAgB,EACrB,cAAc,GACf,MAAM,4BAA4B,CAAC;AACpC,OAAO,EAAE,OAAO,EAAE,MAAM,uBAAuB,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/components/Swipeable.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/components/Swipeable.d.ts.map
new file mode 100644
index 0000000..6a1e095
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/components/Swipeable.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"Swipeable.d.ts","sourceRoot":"","sources":["../../../src/components/Swipeable.tsx"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/components/Text.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/components/Text.d.ts.map
new file mode 100644
index 0000000..e866d06
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/components/Text.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"Text.d.ts","sourceRoot":"","sources":["../../../src/components/Text.tsx"],"names":[],"mappings":"AAAA,OAAO,KAMN,MAAM,OAAO,CAAC;AACf,OAAO,EAEL,IAAI,IAAI,MAAM,EACd,SAAS,IAAI,WAAW,EACzB,MAAM,cAAc,CAAC;AAKtB,eAAO,MAAM,IAAI,4EA0DhB,CAAC;AAEF,MAAM,MAAM,IAAI,GAAG,OAAO,IAAI,GAAG,MAAM,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/components/gestureHandlerRootHOC.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/components/gestureHandlerRootHOC.d.ts.map
new file mode 100644
index 0000000..061591a
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/components/gestureHandlerRootHOC.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"gestureHandlerRootHOC.d.ts","sourceRoot":"","sources":["../../../src/components/gestureHandlerRootHOC.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAc,SAAS,EAAE,SAAS,EAAE,MAAM,cAAc,CAAC;AAIhE;;;GAGG;AACH,MAAM,CAAC,OAAO,UAAU,qBAAqB,CAAC,CAAC,SAAS,MAAM,EAC5D,SAAS,EAAE,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,EACjC,eAAe,CAAC,EAAE,SAAS,CAAC,SAAS,CAAC,GACrC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,CAiBxB"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/components/touchables/ExtraButtonProps.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/components/touchables/ExtraButtonProps.d.ts.map
new file mode 100644
index 0000000..f115c2b
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/components/touchables/ExtraButtonProps.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"ExtraButtonProps.d.ts","sourceRoot":"","sources":["../../../../src/components/touchables/ExtraButtonProps.ts"],"names":[],"mappings":"AAAA,MAAM,MAAM,gBAAgB,GAAG;IAC7B,UAAU,CAAC,EAAE,OAAO,CAAC;IACrB,WAAW,CAAC,EAAE,MAAM,GAAG,MAAM,GAAG,IAAI,CAAC;IACrC,YAAY,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC;IAC7B,UAAU,CAAC,EAAE,OAAO,CAAC;IACrB,SAAS,CAAC,EAAE,OAAO,CAAC;CACrB,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/components/touchables/GenericTouchable.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/components/touchables/GenericTouchable.d.ts.map
new file mode 100644
index 0000000..1b74241
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/components/touchables/GenericTouchable.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"GenericTouchable.d.ts","sourceRoot":"","sources":["../../../../src/components/touchables/GenericTouchable.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,SAAS,EAAE,MAAM,OAAO,CAAC;AAMlC,OAAO,EACL,YAAY,EACZ,uBAAuB,EACxB,MAAM,qCAAqC,CAAC;AAC7C,OAAO,KAAK,EAAE,+BAA+B,EAAE,MAAM,2CAA2C,CAAC;AACjG,OAAO,KAAK,EAAE,qBAAqB,EAAE,MAAM,yBAAyB,CAAC;AAErE;;;;;;GAMG;AACH,eAAO,MAAM,eAAe;;;;CAIlB,CAAC;AAEX,KAAK,cAAc,GAAG,CAAC,OAAO,eAAe,CAAC,CAAC,MAAM,OAAO,eAAe,CAAC,CAAC;AAE7E,UAAU,aAAa;IACrB,aAAa,CAAC,EAAE,CAAC,QAAQ,EAAE,cAAc,EAAE,QAAQ,EAAE,cAAc,KAAK,IAAI,CAAC;CAC9E;AAID,KAAK,OAAO,GAAG,UAAU,CAAC,OAAO,UAAU,CAAC,GAAG,IAAI,GAAG,SAAS,CAAC;AAEhE;;;GAGG;AAEH,MAAM,CAAC,OAAO,OAAO,gBAAiB,SAAQ,SAAS,CACrD,qBAAqB,GAAG,aAAa,CACtC;IACC,MAAM,CAAC,YAAY;;;;;;MAMjB;IAGF,cAAc,EAAE,OAAO,CAAC;IACxB,eAAe,EAAE,OAAO,CAAC;IACzB,gBAAgB,EAAE,OAAO,CAAC;IAG1B,iBAAiB,UAAS;IAE1B,aAAa,UAAQ;IAGrB,KAAK,EAAE,cAAc,CAAgC;IAIrD,aAAa;IAiBb,iBAAiB;IAcjB,sBAAsB;IAkBtB,iBAAiB;IAIjB,KAAK;IAYL,WAAW,CAAC,QAAQ,EAAE,cAAc;IAyBpC,cAAc,GAAI,qCAEf,YAAY,CAAC,+BAA+B,CAAC,UAS9C;IAEF,oBAAoB,GAAI,kBAErB,uBAAuB,CAAC,+BAA+B,CAAC,UAyBzD;IAEF,mBAAmB,aAIjB;IAEF,oBAAoB;IAKpB,QAAQ;IAOR,SAAS;IAST,MAAM;CA+CP"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/components/touchables/GenericTouchableProps.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/components/touchables/GenericTouchableProps.d.ts.map
new file mode 100644
index 0000000..22c92b3
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/components/touchables/GenericTouchableProps.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"GenericTouchableProps.d.ts","sourceRoot":"","sources":["../../../../src/components/touchables/GenericTouchableProps.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EACV,SAAS,EACT,SAAS,EACT,6BAA6B,EAC7B,MAAM,EACP,MAAM,cAAc,CAAC;AACtB,OAAO,KAAK,EAAE,UAAU,EAAE,MAAM,qCAAqC,CAAC;AACtE,OAAO,EAAE,gBAAgB,EAAE,MAAM,oBAAoB,CAAC;AAEtD,MAAM,WAAW,qBACf,SAAQ,IAAI,CAAC,6BAA6B,EAAE,SAAS,CAAC;IAItD,OAAO,CAAC,EAAE,MAAM,IAAI,CAAC;IACrB,SAAS,CAAC,EAAE,MAAM,IAAI,CAAC;IACvB,UAAU,CAAC,EAAE,MAAM,IAAI,CAAC;IACxB,WAAW,CAAC,EAAE,MAAM,IAAI,CAAC;IAEzB,QAAQ,CAAC,EAAE,MAAM,CAAC;IAClB,qBAAqB,CAAC,EAAE,OAAO,CAAC;IAChC,oBAAoB,CAAC,EAAE,OAAO,CAAC;IAE/B,cAAc,CAAC,EAAE,SAAS,CAAC,SAAS,CAAC,CAAC;IACtC,OAAO,CAAC,EAAE,MAAM,GAAG,MAAM,CAAC;IAC1B,UAAU,CAAC,EAAE,UAAU,CAAC;IACxB,gBAAgB,CAAC,EAAE,gBAAgB,CAAC;CACrC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/components/touchables/TouchableHighlight.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/components/touchables/TouchableHighlight.d.ts.map
new file mode 100644
index 0000000..610921d
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/components/touchables/TouchableHighlight.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"TouchableHighlight.d.ts","sourceRoot":"","sources":["../../../../src/components/touchables/TouchableHighlight.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,SAAS,EAAE,MAAM,OAAO,CAAC;AAElC,OAAO,KAAK,EAAE,qBAAqB,EAAE,MAAM,yBAAyB,CAAC;AACrE,OAAO,EAGL,uBAAuB,IAAI,yBAAyB,EACpD,UAAU,EAEX,MAAM,cAAc,CAAC;AAEtB,UAAU,KAAK;IACb,eAAe,EAAE,IAAI,GAAG;QACtB,OAAO,CAAC,EAAE,MAAM,CAAC;KAClB,CAAC;IACF,kBAAkB,EAAE,IAAI,GAAG;QACzB,eAAe,CAAC,EAAE,UAAU,CAAC;KAC9B,CAAC;CACH;AAED;;GAEG;AACH,MAAM,MAAM,uBAAuB,GAAG,yBAAyB,GAC7D,qBAAqB,CAAC;AAExB;;;;GAIG;AACH,MAAM,CAAC,OAAO,OAAO,kBAAmB,SAAQ,SAAS,CACvD,uBAAuB,EACvB,KAAK,CACN;IACC,MAAM,CAAC,YAAY;;;;;;;;;MAKjB;gBAEU,KAAK,EAAE,uBAAuB;IAS1C,YAAY,aAaV;IAEF,eAAe,qGAIU;IAEzB,YAAY,aAMV;IAEF,cAAc;IAad,aAAa,GAAI,OAAO,MAAM,EAAE,IAAI,MAAM,UASxC;IAEF,MAAM;CAYP"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/components/touchables/TouchableNativeFeedback.android.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/components/touchables/TouchableNativeFeedback.android.d.ts.map
new file mode 100644
index 0000000..e85125f
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/components/touchables/TouchableNativeFeedback.android.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"TouchableNativeFeedback.android.d.ts","sourceRoot":"","sources":["../../../../src/components/touchables/TouchableNativeFeedback.android.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAY,UAAU,EAAE,MAAM,cAAc,CAAC;AACpD,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,SAAS,EAAE,MAAM,OAAO,CAAC;AAElC,OAAO,EACL,4BAA4B,EAE7B,MAAM,gCAAgC,CAAC;AAExC;;;;;;;GAOG;AACH,MAAM,CAAC,OAAO,OAAO,uBAAwB,SAAQ,SAAS,CAAC,4BAA4B,CAAC;IAC1F,MAAM,CAAC,YAAY;;;;;;MAOjB;IAGF,MAAM,CAAC,oBAAoB,GAAI,eAAe,MAAM;;;;MAKjD;IACH,MAAM,CAAC,8BAA8B,GAAI,eAAe,MAAM;;;;MAI3D;IACH,MAAM,CAAC,MAAM,GACX,OAAO,UAAU,EACjB,YAAY,OAAO,EACnB,eAAe,MAAM;;;;;MAMpB;IAEH,MAAM,CAAC,sBAAsB,gBACyB;IAEtD,mBAAmB;IAmBnB,MAAM;CAUP"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/components/touchables/TouchableNativeFeedback.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/components/touchables/TouchableNativeFeedback.d.ts.map
new file mode 100644
index 0000000..d2c7d73
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/components/touchables/TouchableNativeFeedback.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"TouchableNativeFeedback.d.ts","sourceRoot":"","sources":["../../../../src/components/touchables/TouchableNativeFeedback.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,uBAAuB,IAAI,yBAAyB,EAAE,MAAM,cAAc,CAAC;AAEpF;;GAEG;AACH,QAAA,MAAM,uBAAuB,kCAA4B,CAAC;AAE1D,eAAe,uBAAuB,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/components/touchables/TouchableNativeFeedbackProps.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/components/touchables/TouchableNativeFeedbackProps.d.ts.map
new file mode 100644
index 0000000..353f828
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/components/touchables/TouchableNativeFeedbackProps.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"TouchableNativeFeedbackProps.d.ts","sourceRoot":"","sources":["../../../../src/components/touchables/TouchableNativeFeedbackProps.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,4BAA4B,IAAI,8BAA8B,EAAE,MAAM,cAAc,CAAC;AACnG,OAAO,KAAK,EAAE,qBAAqB,EAAE,MAAM,yBAAyB,CAAC;AACrE,OAAO,EAAE,gBAAgB,EAAE,MAAM,oBAAoB,CAAC;AAEtD,MAAM,MAAM,iCAAiC,GAAG,gBAAgB,CAAC;AACjE;;GAEG;AACH,MAAM,MAAM,4BAA4B,GAAG,8BAA8B,GACvE,qBAAqB,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/components/touchables/TouchableOpacity.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/components/touchables/TouchableOpacity.d.ts.map
new file mode 100644
index 0000000..898e9f2
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/components/touchables/TouchableOpacity.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"TouchableOpacity.d.ts","sourceRoot":"","sources":["../../../../src/components/touchables/TouchableOpacity.tsx"],"names":[],"mappings":"AAAA,OAAO,EACL,QAAQ,EAIR,qBAAqB,IAAI,uBAAuB,EACjD,MAAM,cAAc,CAAC;AAEtB,OAAO,KAAK,EAAE,qBAAqB,EAAE,MAAM,yBAAyB,CAAC;AACrE,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,SAAS,EAAE,MAAM,OAAO,CAAC;AAElC;;GAEG;AACH,MAAM,MAAM,qBAAqB,GAAG,uBAAuB,GACzD,qBAAqB,GAAG;IACtB,mBAAmB,CAAC,EAAE,OAAO,CAAC;CAC/B,CAAC;AAEJ;;;;GAIG;AACH,MAAM,CAAC,OAAO,OAAO,gBAAiB,SAAQ,SAAS,CAAC,qBAAqB,CAAC;IAC5E,MAAM,CAAC,YAAY;;;;;;;MAGjB;IAGF,+BAA+B,eAK7B;IAEF,OAAO,iBAA8D;IAErE,YAAY,GAAI,OAAO,MAAM,EAAE,UAAU,MAAM,UAO7C;IAEF,aAAa,GAAI,OAAO,MAAM,EAAE,IAAI,MAAM,UASxC;IAEF,MAAM;CAgBP"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/components/touchables/TouchableWithoutFeedback.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/components/touchables/TouchableWithoutFeedback.d.ts.map
new file mode 100644
index 0000000..fdf8d47
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/components/touchables/TouchableWithoutFeedback.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"TouchableWithoutFeedback.d.ts","sourceRoot":"","sources":["../../../../src/components/touchables/TouchableWithoutFeedback.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,gBAAgB,MAAM,oBAAoB,CAAC;AAClD,OAAO,KAAK,EAAE,qBAAqB,EAAE,MAAM,yBAAyB,CAAC;AAErE;;GAEG;AACH,MAAM,MAAM,6BAA6B,GAAG,qBAAqB,CAAC;AAElE;;GAEG;AACH,QAAA,MAAM,wBAAwB;;0CAuB7B,CAAC;AAEF,eAAe,wBAAwB,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/components/touchables/index.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/components/touchables/index.d.ts.map
new file mode 100644
index 0000000..561f1fe
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/components/touchables/index.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"index.d.ts","sourceRoot":"","sources":["../../../../src/components/touchables/index.ts"],"names":[],"mappings":"AAAA,YAAY,EAAE,uBAAuB,EAAE,MAAM,sBAAsB,CAAC;AACpE,YAAY,EAAE,qBAAqB,EAAE,MAAM,oBAAoB,CAAC;AAChE,YAAY,EAAE,6BAA6B,EAAE,MAAM,4BAA4B,CAAC;AAChF,OAAO,EAAE,OAAO,IAAI,uBAAuB,EAAE,MAAM,2BAA2B,CAAC;AAC/E,OAAO,EAAE,OAAO,IAAI,wBAAwB,EAAE,MAAM,4BAA4B,CAAC;AACjF,OAAO,EAAE,OAAO,IAAI,gBAAgB,EAAE,MAAM,oBAAoB,CAAC;AACjE,OAAO,EAAE,OAAO,IAAI,kBAAkB,EAAE,MAAM,sBAAsB,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/components/utils.d.ts b/node_modules/react-native-gesture-handler/lib/typescript/components/utils.d.ts
new file mode 100644
index 0000000..925f5cc
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/components/utils.d.ts
@@ -0,0 +1,5 @@
+import { BaseGesture, GestureRef } from '../handlers/gestures/gesture';
+export type RelationPropName = 'simultaneousWithExternalGesture' | 'requireExternalGestureToFail' | 'blocksExternalGesture';
+export type RelationPropType = Exclude<GestureRef, number> | Exclude<GestureRef, number>[];
+export declare function applyRelationProp(gesture: BaseGesture<any>, relationPropName: RelationPropName, relationProp: RelationPropType): void;
+//# sourceMappingURL=utils.d.ts.map
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/components/utils.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/components/utils.d.ts.map
new file mode 100644
index 0000000..df487f4
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/components/utils.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"utils.d.ts","sourceRoot":"","sources":["../../../src/components/utils.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,UAAU,EAAE,MAAM,8BAA8B,CAAC;AAEvE,MAAM,MAAM,gBAAgB,GACxB,iCAAiC,GACjC,8BAA8B,GAC9B,uBAAuB,CAAC;AAE5B,MAAM,MAAM,gBAAgB,GACxB,OAAO,CAAC,UAAU,EAAE,MAAM,CAAC,GAC3B,OAAO,CAAC,UAAU,EAAE,MAAM,CAAC,EAAE,CAAC;AAElC,wBAAgB,iBAAiB,CAC/B,OAAO,EAAE,WAAW,CAAC,GAAG,CAAC,EACzB,gBAAgB,EAAE,gBAAgB,EAClC,YAAY,EAAE,gBAAgB,QAW/B"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/findNodeHandle.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/findNodeHandle.d.ts.map
new file mode 100644
index 0000000..46ddb81
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/findNodeHandle.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"findNodeHandle.d.ts","sourceRoot":"","sources":["../../src/findNodeHandle.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,cAAc,CAAC;AAE9C,eAAe,cAAc,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/findNodeHandle.web.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/findNodeHandle.web.d.ts.map
new file mode 100644
index 0000000..8b8ea60
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/findNodeHandle.web.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"findNodeHandle.web.d.ts","sourceRoot":"","sources":["../../src/findNodeHandle.web.ts"],"names":[],"mappings":"AACA,OAAO,KAAK,EAAE,iBAAiB,EAAE,MAAM,EAAE,MAAM,kBAAkB,CAAC;AAGlE,MAAM,CAAC,OAAO,UAAU,cAAc,CACpC,OAAO,EAAE,iBAAiB,GAAG,MAAM,GAAG,WAAW,GAAG,UAAU,GAC7D,WAAW,GAAG,UAAU,GAAG,MAAM,CAkCnC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/getReactNativeVersion.d.ts b/node_modules/react-native-gesture-handler/lib/typescript/getReactNativeVersion.d.ts
deleted file mode 100644
index fac048a..0000000
--- a/node_modules/react-native-gesture-handler/lib/typescript/getReactNativeVersion.d.ts
+++ /dev/null
@@ -1,4 +0,0 @@
-export declare function getReactNativeVersion(): {
-    major: number;
-    minor: number;
-};
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/getReactNativeVersion.web.d.ts b/node_modules/react-native-gesture-handler/lib/typescript/getReactNativeVersion.web.d.ts
deleted file mode 100644
index 6516550..0000000
--- a/node_modules/react-native-gesture-handler/lib/typescript/getReactNativeVersion.web.d.ts
+++ /dev/null
@@ -1 +0,0 @@
-export declare function getReactNativeVersion(): void;
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/getShadowNodeFromRef.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/getShadowNodeFromRef.d.ts.map
new file mode 100644
index 0000000..c502b83
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/getShadowNodeFromRef.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"getShadowNodeFromRef.d.ts","sourceRoot":"","sources":["../../src/getShadowNodeFromRef.ts"],"names":[],"mappings":"AASA,wBAAgB,oBAAoB,CAAC,GAAG,EAAE,OAAO,WAwChD"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/getShadowNodeFromRef.web.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/getShadowNodeFromRef.web.d.ts.map
new file mode 100644
index 0000000..1f3e1b4
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/getShadowNodeFromRef.web.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"getShadowNodeFromRef.web.d.ts","sourceRoot":"","sources":["../../src/getShadowNodeFromRef.web.ts"],"names":[],"mappings":"AAIA,wBAAgB,oBAAoB,CAAC,IAAI,EAAE,GAAG,QAE7C"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/ghQueueMicrotask.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/ghQueueMicrotask.d.ts.map
new file mode 100644
index 0000000..eb4b9b7
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/ghQueueMicrotask.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"ghQueueMicrotask.d.ts","sourceRoot":"","sources":["../../src/ghQueueMicrotask.ts"],"names":[],"mappings":"AAEA,eAAO,MAAM,gBAAgB,uBAKI,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/handlers/FlingGestureHandler.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/handlers/FlingGestureHandler.d.ts.map
new file mode 100644
index 0000000..5cefb6a
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/handlers/FlingGestureHandler.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"FlingGestureHandler.d.ts","sourceRoot":"","sources":["../../../src/handlers/FlingGestureHandler.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,+BAA+B,EAAE,MAAM,8BAA8B,CAAC;AAEpF,OAAO,EACL,uBAAuB,EAExB,MAAM,wBAAwB,CAAC;AAEhC,eAAO,MAAM,wBAAwB,4CAG3B,CAAC;AAEX,MAAM,WAAW,kBAAkB;IACjC;;;;;;;;;;;;;OAaG;IACH,SAAS,CAAC,EAAE,MAAM,CAAC;IAEnB;;OAEG;IACH,gBAAgB,CAAC,EAAE,MAAM,CAAC;CAC3B;AAED;;GAEG;AACH,MAAM,WAAW,wBACf,SAAQ,uBAAuB,CAAC,+BAA+B,CAAC,EAC9D,kBAAkB;CAAG;AAEzB,eAAO,MAAM,gBAAgB,wBAAwB,CAAC;AAEtD;;GAEG;AACH,MAAM,MAAM,mBAAmB,GAAG,OAAO,mBAAmB,CAAC;AAE7D;;GAEG;AAEH,eAAO,MAAM,mBAAmB,8FAU9B,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/handlers/ForceTouchGestureHandler.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/handlers/ForceTouchGestureHandler.d.ts.map
new file mode 100644
index 0000000..7e05ea9
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/handlers/ForceTouchGestureHandler.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"ForceTouchGestureHandler.d.ts","sourceRoot":"","sources":["../../../src/handlers/ForceTouchGestureHandler.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,EAAE,iBAAiB,EAAE,MAAM,OAAO,CAAC;AAIjD,OAAO,EACL,uBAAuB,EAExB,MAAM,wBAAwB,CAAC;AAChC,OAAO,KAAK,EAAE,oCAAoC,EAAE,MAAM,8BAA8B,CAAC;AAEzF,eAAO,MAAM,6BAA6B,2DAIhC,CAAC;AAGX,cAAM,kBAAmB,SAAQ,KAAK,CAAC,SAAS,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;IAC1E,MAAM,CAAC,mBAAmB,UAAS;IACnC,iBAAiB;IAOjB,MAAM;CAGP;AAED,MAAM,WAAW,uBAAuB;IACtC;;;;OAIG;IACH,QAAQ,CAAC,EAAE,MAAM,CAAC;IAElB;;;OAGG;IACH,QAAQ,CAAC,EAAE,MAAM,CAAC;IAElB;;;OAGG;IACH,oBAAoB,CAAC,EAAE,OAAO,CAAC;CAChC;AAED;;GAEG;AACH,MAAM,WAAW,6BACf,SAAQ,uBAAuB,CAAC,oCAAoC,CAAC,EACnE,uBAAuB;CAAG;AAE9B;;GAEG;AACH,MAAM,MAAM,wBAAwB,GAAG,OAAO,wBAAwB,GAAG;IACvE,mBAAmB,EAAE,OAAO,CAAC;CAC9B,CAAC;AAEF,eAAO,MAAM,qBAAqB,6BAA6B,CAAC;AAEhE;;GAEG;AAEH,eAAO,MAAM,wBAAwB,2GAYf,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/handlers/GestureHandlerEventPayload.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/handlers/GestureHandlerEventPayload.d.ts.map
new file mode 100644
index 0000000..017037f
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/handlers/GestureHandlerEventPayload.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"GestureHandlerEventPayload.d.ts","sourceRoot":"","sources":["../../../src/handlers/GestureHandlerEventPayload.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,mBAAmB,CAAC;AAE/C,MAAM,MAAM,+BAA+B,GAAG;IAC5C,CAAC,EAAE,MAAM,CAAC;IACV,CAAC,EAAE,MAAM,CAAC;IACV,SAAS,EAAE,MAAM,CAAC;IAClB,SAAS,EAAE,MAAM,CAAC;CACnB,CAAC;AAEF;;GAEG;AACH,MAAM,MAAM,oCAAoC,GAAG;IACjD,CAAC,EAAE,MAAM,CAAC;IACV,CAAC,EAAE,MAAM,CAAC;IACV,SAAS,EAAE,MAAM,CAAC;IAClB,SAAS,EAAE,MAAM,CAAC;IAElB;;OAEG;IACH,KAAK,EAAE,MAAM,CAAC;CACf,CAAC;AAEF,MAAM,MAAM,mCAAmC,GAAG;IAChD;;;;OAIG;IACH,CAAC,EAAE,MAAM,CAAC;IAEV;;;;OAIG;IACH,CAAC,EAAE,MAAM,CAAC;IAEV;;;;;;OAMG;IACH,SAAS,EAAE,MAAM,CAAC;IAElB;;;;;;OAMG;IACH,SAAS,EAAE,MAAM,CAAC;IAElB;;;OAGG;IACH,QAAQ,EAAE,MAAM,CAAC;CAClB,CAAC;AAEF,MAAM,MAAM,+BAA+B,GAAG;IAC5C;;OAEG;IACH,aAAa,EAAE,OAAO,CAAC;CACxB,CAAC;AAEF,MAAM,MAAM,6BAA6B,GAAG;IAC1C;;;;OAIG;IACH,CAAC,EAAE,MAAM,CAAC;IAEV;;;;OAIG;IACH,CAAC,EAAE,MAAM,CAAC;IAEV;;;;;;OAMG;IACH,SAAS,EAAE,MAAM,CAAC;IAElB;;;;;;OAMG;IACH,SAAS,EAAE,MAAM,CAAC;IAElB;;;OAGG;IACH,YAAY,EAAE,MAAM,CAAC;IAErB;;;OAGG;IACH,YAAY,EAAE,MAAM,CAAC;IAErB;;;OAGG;IACH,SAAS,EAAE,MAAM,CAAC;IAElB;;;OAGG;IACH,SAAS,EAAE,MAAM,CAAC;IAElB;;OAEG;IACH,UAAU,CAAC,EAAE,UAAU,CAAC;CACzB,CAAC;AAEF,MAAM,MAAM,+BAA+B,GAAG;IAC5C;;;OAGG;IACH,KAAK,EAAE,MAAM,CAAC;IAEd;;;OAGG;IACH,MAAM,EAAE,MAAM,CAAC;IAEf;;;OAGG;IACH,MAAM,EAAE,MAAM,CAAC;IAEf;;;;OAIG;IACH,QAAQ,EAAE,MAAM,CAAC;CAClB,CAAC;AAEF,MAAM,MAAM,6BAA6B,GAAG;IAC1C,CAAC,EAAE,MAAM,CAAC;IACV,CAAC,EAAE,MAAM,CAAC;IACV,SAAS,EAAE,MAAM,CAAC;IAClB,SAAS,EAAE,MAAM,CAAC;CACnB,CAAC;AAEF,MAAM,MAAM,kCAAkC,GAAG;IAC/C;;;OAGG;IACH,QAAQ,EAAE,MAAM,CAAC;IAEjB;;;OAGG;IACH,OAAO,EAAE,MAAM,CAAC;IAEhB;;;OAGG;IACH,OAAO,EAAE,MAAM,CAAC;IAEhB;;;;OAIG;IACH,QAAQ,EAAE,MAAM,CAAC;CAClB,CAAC;AAEF,MAAM,MAAM,+BAA+B,GAAG;IAC5C;;;OAGG;IACH,CAAC,EAAE,MAAM,CAAC;IAEV;;;OAGG;IACH,CAAC,EAAE,MAAM,CAAC;IAEV;;;;;OAKG;IACH,SAAS,EAAE,MAAM,CAAC;IAElB;;;;;OAKG;IACH,SAAS,EAAE,MAAM,CAAC;IAElB;;OAEG;IACH,UAAU,CAAC,EAAE,UAAU,CAAC;CACzB,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/handlers/LongPressGestureHandler.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/handlers/LongPressGestureHandler.d.ts.map
new file mode 100644
index 0000000..012c765
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/handlers/LongPressGestureHandler.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"LongPressGestureHandler.d.ts","sourceRoot":"","sources":["../../../src/handlers/LongPressGestureHandler.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,mCAAmC,EAAE,MAAM,8BAA8B,CAAC;AAEnF,OAAO,EACL,uBAAuB,EAExB,MAAM,wBAAwB,CAAC;AAEhC,eAAO,MAAM,4BAA4B,2DAI/B,CAAC;AAEX,MAAM,WAAW,sBAAsB;IACrC;;;OAGG;IACH,aAAa,CAAC,EAAE,MAAM,CAAC;IAEvB;;;;;OAKG;IACH,OAAO,CAAC,EAAE,MAAM,CAAC;IAEjB;;OAEG;IACH,gBAAgB,CAAC,EAAE,MAAM,CAAC;CAC3B;AAED;;GAEG;AACH,MAAM,WAAW,4BACf,SAAQ,uBAAuB,CAAC,mCAAmC,CAAC,EAClE,sBAAsB;CAAG;AAE7B,eAAO,MAAM,oBAAoB,4BAA4B,CAAC;AAE9D;;GAEG;AACH,MAAM,MAAM,uBAAuB,GAAG,OAAO,uBAAuB,CAAC;AAErE;;GAEG;AAEH,eAAO,MAAM,uBAAuB,kGAYlC,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/handlers/NativeViewGestureHandler.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/handlers/NativeViewGestureHandler.d.ts.map
new file mode 100644
index 0000000..e250be1
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/handlers/NativeViewGestureHandler.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"NativeViewGestureHandler.d.ts","sourceRoot":"","sources":["../../../src/handlers/NativeViewGestureHandler.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,+BAA+B,EAAE,MAAM,8BAA8B,CAAC;AAEpF,OAAO,EACL,uBAAuB,EAExB,MAAM,wBAAwB,CAAC;AAEhC,eAAO,MAAM,6BAA6B,4DAGhC,CAAC;AAEX,MAAM,WAAW,uBAAuB;IACtC;;;;;OAKG;IACH,qBAAqB,CAAC,EAAE,OAAO,CAAC;IAEhC;;;OAGG;IACH,oBAAoB,CAAC,EAAE,OAAO,CAAC;CAChC;AAED;;GAEG;AACH,MAAM,WAAW,6BACf,SAAQ,uBAAuB,CAAC,+BAA+B,CAAC,EAC9D,uBAAuB;CAAG;AAE9B,eAAO,MAAM,eAAe,2XAGlB,CAAC;AAEX,eAAO,MAAM,qBAAqB,6BAA6B,CAAC;AAEhE;;GAEG;AACH,MAAM,MAAM,wBAAwB,GAAG,OAAO,wBAAwB,CAAC;AAEvE;;GAEG;AAEH,eAAO,MAAM,wBAAwB,mGAOnC,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/handlers/PanGestureHandler.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/handlers/PanGestureHandler.d.ts.map
new file mode 100644
index 0000000..abae9c4
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/handlers/PanGestureHandler.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"PanGestureHandler.d.ts","sourceRoot":"","sources":["../../../src/handlers/PanGestureHandler.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,6BAA6B,EAAE,MAAM,8BAA8B,CAAC;AAElF,OAAO,EACL,uBAAuB,EAExB,MAAM,wBAAwB,CAAC;AAEhC,eAAO,MAAM,sBAAsB,6OAczB,CAAC;AAEX,eAAO,MAAM,kCAAkC,2KASrC,CAAC;AAEX,UAAU,mBAAmB;IAC3B;;;OAGG;IACH,OAAO,CAAC,EAAE,MAAM,CAAC;IAEjB;;OAEG;IACH,UAAU,CAAC,EAAE,OAAO,CAAC;IAErB;;;;;OAKG;IACH,8BAA8B,CAAC,EAAE,OAAO,CAAC;IAEzC;;;OAGG;IACH,WAAW,CAAC,EAAE,MAAM,CAAC;IAErB;;;;OAIG;IACH,WAAW,CAAC,EAAE,MAAM,CAAC;IAErB,WAAW,CAAC,EAAE,MAAM,CAAC;IACrB,YAAY,CAAC,EAAE,MAAM,CAAC;IACtB,YAAY,CAAC,EAAE,MAAM,CAAC;IACtB,sBAAsB,CAAC,EAAE,MAAM,CAAC;CACjC;AAED,MAAM,WAAW,gBAAiB,SAAQ,mBAAmB;IAC3D,kBAAkB,CAAC,EAAE,MAAM,CAAC;IAC5B,gBAAgB,CAAC,EAAE,MAAM,CAAC;IAC1B,kBAAkB,CAAC,EAAE,MAAM,CAAC;IAC5B,gBAAgB,CAAC,EAAE,MAAM,CAAC;IAC1B,gBAAgB,CAAC,EAAE,MAAM,CAAC;IAC1B,cAAc,CAAC,EAAE,MAAM,CAAC;IACxB,gBAAgB,CAAC,EAAE,MAAM,CAAC;IAC1B,cAAc,CAAC,EAAE,MAAM,CAAC;CACzB;AAED;;GAEG;AACH,MAAM,WAAW,sBACf,SAAQ,uBAAuB,CAAC,6BAA6B,CAAC,EAC5D,mBAAmB;IACrB;;;;;;;OAOG;IACH,aAAa,CAAC,EACV,MAAM,GACN,CAAC,kBAAkB,EAAE,MAAM,EAAE,gBAAgB,EAAE,MAAM,CAAC,CAAC;IAE3D;;;;;;;OAOG;IACH,aAAa,CAAC,EACV,MAAM,GACN,CAAC,kBAAkB,EAAE,MAAM,EAAE,gBAAgB,EAAE,MAAM,CAAC,CAAC;IAE3D;;;;;;;OAOG;IACH,WAAW,CAAC,EAAE,MAAM,GAAG,CAAC,gBAAgB,EAAE,MAAM,EAAE,cAAc,EAAE,MAAM,CAAC,CAAC;IAE1E;;;;;;;OAOG;IACH,WAAW,CAAC,EAAE,MAAM,GAAG,CAAC,gBAAgB,EAAE,MAAM,EAAE,cAAc,EAAE,MAAM,CAAC,CAAC;CAC3E;AAED,eAAO,MAAM,cAAc,sBAAsB,CAAC;AAElD;;GAEG;AACH,MAAM,MAAM,iBAAiB,GAAG,OAAO,iBAAiB,CAAC;AAEzD;;GAEG;AAEH,eAAO,MAAM,iBAAiB,4FAY5B,CAAC;AAsHH,wBAAgB,cAAc,CAAC,KAAK,EAAE,sBAAsB,2NAK3D"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/handlers/PinchGestureHandler.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/handlers/PinchGestureHandler.d.ts.map
new file mode 100644
index 0000000..a8d0fe7
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/handlers/PinchGestureHandler.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"PinchGestureHandler.d.ts","sourceRoot":"","sources":["../../../src/handlers/PinchGestureHandler.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,+BAA+B,EAAE,MAAM,8BAA8B,CAAC;AAE/E,OAAO,EACL,uBAAuB,EAExB,MAAM,wBAAwB,CAAC;AAEhC;;GAEG;AACH,MAAM,WAAW,wBACf,SAAQ,uBAAuB,CAAC,+BAA+B,CAAC;CAAG;AAErE,eAAO,MAAM,gBAAgB,wBAAwB,CAAC;AAEtD;;GAEG;AACH,MAAM,MAAM,mBAAmB,GAAG,OAAO,mBAAmB,CAAC;AAE7D;;GAEG;AAEH,eAAO,MAAM,mBAAmB,8FAO9B,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/handlers/PressabilityDebugView.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/handlers/PressabilityDebugView.d.ts.map
new file mode 100644
index 0000000..7002aa5
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/handlers/PressabilityDebugView.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"PressabilityDebugView.d.ts","sourceRoot":"","sources":["../../../src/handlers/PressabilityDebugView.tsx"],"names":[],"mappings":"AACA,OAAO,EAAE,qBAAqB,EAAE,MAAM,uDAAuD,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/handlers/PressabilityDebugView.web.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/handlers/PressabilityDebugView.web.d.ts.map
new file mode 100644
index 0000000..2fc1fd8
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/handlers/PressabilityDebugView.web.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"PressabilityDebugView.web.d.ts","sourceRoot":"","sources":["../../../src/handlers/PressabilityDebugView.web.tsx"],"names":[],"mappings":"AACA,wBAAgB,qBAAqB,SAEpC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/handlers/RotationGestureHandler.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/handlers/RotationGestureHandler.d.ts.map
new file mode 100644
index 0000000..47e05a8
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/handlers/RotationGestureHandler.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"RotationGestureHandler.d.ts","sourceRoot":"","sources":["../../../src/handlers/RotationGestureHandler.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,kCAAkC,EAAE,MAAM,8BAA8B,CAAC;AAElF,OAAO,EACL,uBAAuB,EAExB,MAAM,wBAAwB,CAAC;AAEhC;;GAEG;AACH,MAAM,WAAW,2BACf,SAAQ,uBAAuB,CAAC,kCAAkC,CAAC;CAAG;AAExE,eAAO,MAAM,mBAAmB,2BAA2B,CAAC;AAE5D;;GAEG;AACH,MAAM,MAAM,sBAAsB,GAAG,OAAO,sBAAsB,CAAC;AAEnE;;GAEG;AAEH,eAAO,MAAM,sBAAsB,iGAOjC,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/handlers/TapGestureHandler.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/handlers/TapGestureHandler.d.ts.map
new file mode 100644
index 0000000..16a9dcb
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/handlers/TapGestureHandler.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"TapGestureHandler.d.ts","sourceRoot":"","sources":["../../../src/handlers/TapGestureHandler.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,6BAA6B,EAAE,MAAM,8BAA8B,CAAC;AAElF,OAAO,EACL,uBAAuB,EAExB,MAAM,wBAAwB,CAAC;AAEhC,eAAO,MAAM,sBAAsB,8GAQzB,CAAC;AAEX,MAAM,WAAW,gBAAgB;IAC/B;;;;OAIG;IACH,WAAW,CAAC,EAAE,MAAM,CAAC;IAErB;;;OAGG;IACH,aAAa,CAAC,EAAE,MAAM,CAAC;IAEvB;;;OAGG;IACH,UAAU,CAAC,EAAE,MAAM,CAAC;IAEpB;;;OAGG;IACH,YAAY,CAAC,EAAE,MAAM,CAAC;IAEtB;;;;;OAKG;IACH,SAAS,CAAC,EAAE,MAAM,CAAC;IAEnB;;;;;OAKG;IACH,SAAS,CAAC,EAAE,MAAM,CAAC;IAEnB;;;;;OAKG;IACH,OAAO,CAAC,EAAE,MAAM,CAAC;CAClB;AAED;;GAEG;AACH,MAAM,WAAW,sBACf,SAAQ,uBAAuB,CAAC,6BAA6B,CAAC,EAC5D,gBAAgB;CAAG;AAEvB,eAAO,MAAM,cAAc,sBAAsB,CAAC;AAElD;;GAEG;AACH,MAAM,MAAM,iBAAiB,GAAG,OAAO,iBAAiB,CAAC;AAEzD;;GAEG;AAEH,eAAO,MAAM,iBAAiB,4FAY5B,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/handlers/createHandler.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/handlers/createHandler.d.ts.map
new file mode 100644
index 0000000..6e06fff
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/handlers/createHandler.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"createHandler.d.ts","sourceRoot":"","sources":["../../../src/handlers/createHandler.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAiB/B,OAAO,EACL,uBAAuB,EAGxB,MAAM,wBAAwB,CAAC;AAyHhC,KAAK,iBAAiB,CAAC,aAAa,SAAS,MAAM,CAAC,MAAM,EAAE,OAAO,CAAC,IAClE,QAAQ,CAAC;IACP,IAAI,EAAE,MAAM,CAAC;IACb,YAAY,EAAE,QAAQ,CAAC,OAAO,CAAC,MAAM,aAAa,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC;IAC/D,MAAM,EAAE,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,CAAC;IAC1C,cAAc,CAAC,EAAE,CAAC,KAAK,EAAE,aAAa,KAAK,aAAa,CAAC;IACzD,iBAAiB,CAAC,EAAE,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC;CACxC,CAAC,CAAC;AAmBL,MAAM,CAAC,OAAO,UAAU,aAAa,CACnC,CAAC,SAAS,uBAAuB,CAAC,CAAC,CAAC,EACpC,CAAC,SAAS,MAAM,CAAC,MAAM,EAAE,OAAO,CAAC,EACjC,EACA,IAAI,EACJ,YAAiB,EACjB,MAAW,EACX,cAAc,EACd,iBAAsB,GACvB,EAAE,iBAAiB,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,aAAa,CAAC,CAAC,GAAG,KAAK,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,CA0Y1E"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/handlers/createNativeWrapper.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/handlers/createNativeWrapper.d.ts.map
new file mode 100644
index 0000000..c471734
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/handlers/createNativeWrapper.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"createNativeWrapper.d.ts","sourceRoot":"","sources":["../../../src/handlers/createNativeWrapper.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAG/B,OAAO,EAEL,6BAA6B,EAE9B,MAAM,4BAA4B,CAAC;AAepC,MAAM,CAAC,OAAO,UAAU,mBAAmB,CAAC,CAAC,EAC3C,SAAS,EAAE,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,EACjC,MAAM,GAAE,QAAQ,CAAC,6BAA6B,CAAM,6IAiErD"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/handlers/customDirectEventTypes.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/handlers/customDirectEventTypes.d.ts.map
new file mode 100644
index 0000000..22ca0d4
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/handlers/customDirectEventTypes.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"customDirectEventTypes.d.ts","sourceRoot":"","sources":["../../../src/handlers/customDirectEventTypes.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,sBAAsB,EAAE,MAAM,qEAAqE,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/handlers/customDirectEventTypes.web.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/handlers/customDirectEventTypes.web.d.ts.map
new file mode 100644
index 0000000..6d58f4c
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/handlers/customDirectEventTypes.web.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"customDirectEventTypes.web.d.ts","sourceRoot":"","sources":["../../../src/handlers/customDirectEventTypes.web.ts"],"names":[],"mappings":"AAEA,QAAA,MAAM,sBAAsB,IAAK,CAAC;AAElC,OAAO,EAAE,sBAAsB,EAAE,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestureHandlerCommon.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestureHandlerCommon.d.ts.map
new file mode 100644
index 0000000..755480d
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestureHandlerCommon.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"gestureHandlerCommon.d.ts","sourceRoot":"","sources":["../../../src/handlers/gestureHandlerCommon.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestureHandlerTypesCompat.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestureHandlerTypesCompat.d.ts.map
new file mode 100644
index 0000000..47971ba
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestureHandlerTypesCompat.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"gestureHandlerTypesCompat.d.ts","sourceRoot":"","sources":["../../../src/handlers/gestureHandlerTypesCompat.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/GestureDetector/Wrap.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/GestureDetector/Wrap.d.ts.map
new file mode 100644
index 0000000..7e42498
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/GestureDetector/Wrap.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"Wrap.d.ts","sourceRoot":"","sources":["../../../../../src/handlers/gestures/GestureDetector/Wrap.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAI1B,qBAAa,IAAK,SAAQ,KAAK,CAAC,SAAS,CAAC;IACxC,qBAAqB,CAAC,EAAE,OAAO,CAAC;IAEhC,QAAQ,CAAC,EAAE,KAAK,CAAC,SAAS,CAAC;CAC5B,CAAC;IACA,MAAM;;;CAsBP;AAED,eAAO,MAAM,YAAY;4BA5BC,OAAO;eAEpB,KAAK,CAAC,SAAS;OA2BgC,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/GestureDetector/Wrap.web.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/GestureDetector/Wrap.web.d.ts.map
new file mode 100644
index 0000000..f5cdec8
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/GestureDetector/Wrap.web.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"Wrap.web.d.ts","sourceRoot":"","sources":["../../../../../src/handlers/gestures/GestureDetector/Wrap.web.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAqB,MAAM,OAAO,CAAC;AAK1C,eAAO,MAAM,IAAI;;wCAgChB,CAAC;AAIF,eAAO,MAAM,YAAY;;wCAAO,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/GestureDetector/attachHandlers.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/GestureDetector/attachHandlers.d.ts.map
new file mode 100644
index 0000000..dad8529
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/GestureDetector/attachHandlers.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"attachHandlers.d.ts","sourceRoot":"","sources":["../../../../../src/handlers/gestures/GestureDetector/attachHandlers.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,WAAW,EAAoB,MAAM,YAAY,CAAC;AAI3D,OAAO,EAAE,eAAe,EAAE,MAAM,uBAAuB,CAAC;AAKxD,OAAO,EAAE,oBAAoB,EAAE,eAAe,EAAE,MAAM,SAAS,CAAC;AAQhE,UAAU,oBAAoB;IAC5B,eAAe,EAAE,oBAAoB,CAAC;IACtC,aAAa,EAAE,eAAe,GAAG,WAAW,CAAC;IAC7C,gBAAgB,EAAE,WAAW,EAAE,CAAC;IAChC,OAAO,EAAE,MAAM,CAAC;IAChB,mBAAmB,EAAE,KAAK,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;CACvD;AAED,wBAAgB,cAAc,CAAC,EAC7B,eAAe,EACf,aAAa,EACb,gBAAgB,EAChB,OAAO,EACP,mBAAmB,GACpB,EAAE,oBAAoB,QA+EtB"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/GestureDetector/dropHandlers.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/GestureDetector/dropHandlers.d.ts.map
new file mode 100644
index 0000000..ef06508
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/GestureDetector/dropHandlers.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"dropHandlers.d.ts","sourceRoot":"","sources":["../../../../../src/handlers/gestures/GestureDetector/dropHandlers.ts"],"names":[],"mappings":"AAGA,OAAO,EAAE,oBAAoB,EAAE,MAAM,SAAS,CAAC;AAG/C,wBAAgB,YAAY,CAAC,eAAe,EAAE,oBAAoB,QAUjE"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/GestureDetector/index.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/GestureDetector/index.d.ts.map
new file mode 100644
index 0000000..d381a91
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/GestureDetector/index.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"index.d.ts","sourceRoot":"","sources":["../../../../../src/handlers/gestures/GestureDetector/index.tsx"],"names":[],"mappings":"AACA,OAAO,KAMN,MAAM,OAAO,CAAC;AAGf,OAAO,EAAE,WAAW,EAAE,MAAM,YAAY,CAAC;AACzC,OAAO,EAAE,UAAU,EAAE,WAAW,EAAE,MAAM,4BAA4B,CAAC;AACrE,OAAO,EAAE,eAAe,EAAE,MAAM,uBAAuB,CAAC;AAsCxD,UAAU,oBAAoB;IAC5B,QAAQ,CAAC,EAAE,KAAK,CAAC,SAAS,CAAC;IAC3B;;;;;OAKG;IACH,OAAO,EAAE,eAAe,GAAG,WAAW,CAAC;IACvC;;;;OAIG;IACH,UAAU,CAAC,EAAE,UAAU,CAAC;IACxB;;;;OAIG;IACH,iBAAiB,CAAC,EAAE,OAAO,CAAC;IAC5B;;;;OAIG;IACH,WAAW,CAAC,EAAE,WAAW,CAAC;CAC3B;AAED;;;;;;;;;;;;;;GAcG;AACH,eAAO,MAAM,eAAe,GAAI,OAAO,oBAAoB,sBAgG1D,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/GestureDetector/needsToReattach.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/GestureDetector/needsToReattach.d.ts.map
new file mode 100644
index 0000000..7b6ecc0
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/GestureDetector/needsToReattach.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"needsToReattach.d.ts","sourceRoot":"","sources":["../../../../../src/handlers/gestures/GestureDetector/needsToReattach.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,YAAY,CAAC;AACzC,OAAO,EAAE,oBAAoB,EAAE,MAAM,SAAS,CAAC;AAM/C,wBAAgB,eAAe,CAC7B,eAAe,EAAE,oBAAoB,EACrC,WAAW,EAAE,WAAW,EAAE,WAiB3B"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/GestureDetector/types.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/GestureDetector/types.d.ts.map
new file mode 100644
index 0000000..91d1529
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/GestureDetector/types.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"types.d.ts","sourceRoot":"","sources":["../../../../../src/handlers/gestures/GestureDetector/types.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,gBAAgB,EAAE,MAAM,YAAY,CAAC;AAC3D,OAAO,EAAE,WAAW,EAAE,MAAM,sBAAsB,CAAC;AACnD,OAAO,EAAE,uBAAuB,EAAE,MAAM,4BAA4B,CAAC;AAErE,MAAM,WAAW,oBAAoB;IAEnC,gBAAgB,EAAE,WAAW,EAAE,CAAC;IAEhC,oBAAoB,EAAE,OAAO,CAAC;IAE9B,gBAAgB,EAAE,WAAW,CAC3B,gBAAgB,CAAC,MAAM,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,EAAE,GAAG,IAAI,CACnD,GAAG,IAAI,CAAC;IAET,mBAAmB,EAAE,OAAO,CAAC;IAE7B,SAAS,EAAE,OAAO,CAAC;CACpB;AAED,MAAM,WAAW,oBAAoB;IACnC,WAAW,EAAE,OAAO,CAAC;IACrB,OAAO,EAAE,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC;IAChC,eAAe,EAAE,MAAM,CAAC;IACxB,2BAA2B,EAAE,OAAO,CAAC;CACtC;AAED,MAAM,WAAW,eAAe;IAC9B,qBAAqB,EAAE,CAAC,KAAK,EAAE,uBAAuB,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC;IACzE,2BAA2B,CAAC,EAAE,CAC5B,KAAK,EAAE,uBAAuB,CAAC,OAAO,CAAC,KACpC,IAAI,CAAC;CACX"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/GestureDetector/updateHandlers.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/GestureDetector/updateHandlers.d.ts.map
new file mode 100644
index 0000000..04e8a4e
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/GestureDetector/updateHandlers.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"updateHandlers.d.ts","sourceRoot":"","sources":["../../../../../src/handlers/gestures/GestureDetector/updateHandlers.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAoB,MAAM,YAAY,CAAC;AAI3D,OAAO,EAAE,eAAe,EAAE,MAAM,uBAAuB,CAAC;AAExD,OAAO,EAAE,oBAAoB,EAAE,MAAM,SAAS,CAAC;AAO/C,wBAAgB,cAAc,CAC5B,eAAe,EAAE,oBAAoB,EACrC,aAAa,EAAE,eAAe,GAAG,WAAW,EAC5C,WAAW,EAAE,WAAW,EAAE,QA2E3B"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/GestureDetector/useAnimatedGesture.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/GestureDetector/useAnimatedGesture.d.ts.map
new file mode 100644
index 0000000..c3e1b25
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/GestureDetector/useAnimatedGesture.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"useAnimatedGesture.d.ts","sourceRoot":"","sources":["../../../../../src/handlers/gestures/GestureDetector/useAnimatedGesture.ts"],"names":[],"mappings":"AAcA,OAAO,EAAE,oBAAoB,EAAE,MAAM,SAAS,CAAC;AAgF/C,wBAAgB,kBAAkB,CAChC,eAAe,EAAE,oBAAoB,EACrC,YAAY,EAAE,OAAO,QA6GtB"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/GestureDetector/useDetectorUpdater.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/GestureDetector/useDetectorUpdater.d.ts.map
new file mode 100644
index 0000000..115a10d
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/GestureDetector/useDetectorUpdater.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"useDetectorUpdater.d.ts","sourceRoot":"","sources":["../../../../../src/handlers/gestures/GestureDetector/useDetectorUpdater.ts"],"names":[],"mappings":"AAAA,OAAO,KAAsB,MAAM,OAAO,CAAC;AAC3C,OAAO,EAAE,WAAW,EAAE,MAAM,YAAY,CAAC;AACzC,OAAO,EAAE,eAAe,EAAE,MAAM,uBAAuB,CAAC;AAExD,OAAO,EACL,oBAAoB,EACpB,oBAAoB,EACpB,eAAe,EAChB,MAAM,SAAS,CAAC;AAWjB,wBAAgB,kBAAkB,CAChC,KAAK,EAAE,oBAAoB,EAC3B,eAAe,EAAE,oBAAoB,EACrC,gBAAgB,EAAE,WAAW,EAAE,EAC/B,aAAa,EAAE,eAAe,GAAG,WAAW,EAC5C,mBAAmB,EAAE,KAAK,CAAC,SAAS,CAAC,eAAe,CAAC,uBAK/B,OAAO,UAuC9B"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/GestureDetector/useMountReactions.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/GestureDetector/useMountReactions.d.ts.map
new file mode 100644
index 0000000..25acef2
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/GestureDetector/useMountReactions.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"useMountReactions.d.ts","sourceRoot":"","sources":["../../../../../src/handlers/gestures/GestureDetector/useMountReactions.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,oBAAoB,EAAE,MAAM,SAAS,CAAC;AAqB/C,wBAAgB,iBAAiB,CAC/B,cAAc,EAAE,MAAM,IAAI,EAC1B,KAAK,EAAE,oBAAoB,QAyB5B"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/GestureDetector/useViewRefHandler.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/GestureDetector/useViewRefHandler.d.ts.map
new file mode 100644
index 0000000..3e294af
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/GestureDetector/useViewRefHandler.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"useViewRefHandler.d.ts","sourceRoot":"","sources":["../../../../../src/handlers/gestures/GestureDetector/useViewRefHandler.ts"],"names":[],"mappings":"AAGA,OAAO,EAAE,oBAAoB,EAAE,MAAM,SAAS,CAAC;AAC/C,OAAO,KAAsB,MAAM,OAAO,CAAC;AAU3C,wBAAgB,iBAAiB,CAC/B,KAAK,EAAE,oBAAoB,EAC3B,sBAAsB,EAAE,CAAC,gBAAgB,CAAC,EAAE,OAAO,KAAK,IAAI,SAGpD,KAAK,CAAC,SAAS,GAAG,IAAI,UAkC/B"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/GestureDetector/utils.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/GestureDetector/utils.d.ts.map
new file mode 100644
index 0000000..2055ece
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/GestureDetector/utils.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"utils.d.ts","sourceRoot":"","sources":["../../../../../src/handlers/gestures/GestureDetector/utils.ts"],"names":[],"mappings":"AAGA,OAAO,EAA2B,WAAW,EAAE,MAAM,YAAY,CAAC;AAqBlE,OAAO,EAAE,eAAe,EAAE,MAAM,SAAS,CAAC;AAE1C,eAAO,MAAM,aAAa,UAUzB,CAAC;AAoBF,wBAAgB,uBAAuB,CAAC,OAAO,EAAE,WAAW;;;;EAY3D;AAED,wBAAgB,gCAAgC,CAAC,OAAO,EAAE,WAAW,QAsCpE;AAGD,wBAAgB,wBAAwB,CAAC,GAAG,EAAE,GAAG,QA+ChD;AAED,wBAAgB,cAAc,eAO7B;AAED,wBAAgB,mBAAmB,+CAWlC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/eventReceiver.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/eventReceiver.d.ts.map
new file mode 100644
index 0000000..fdf698b
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/eventReceiver.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"eventReceiver.d.ts","sourceRoot":"","sources":["../../../../src/handlers/gestures/eventReceiver.ts"],"names":[],"mappings":"AAGA,OAAO,EACL,iBAAiB,EACjB,kBAAkB,EAClB,uBAAuB,EACxB,MAAM,yBAAyB,CAAC;AAgCjC,wBAAgB,qBAAqB,CACnC,KAAK,EAAE,kBAAkB,GAAG,uBAAuB,GAAG,iBAAiB,QAwFxE;AAED,wBAAgB,cAAc,SAY7B;AAED,wBAAgB,aAAa,SAU5B"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/flingGesture.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/flingGesture.d.ts.map
new file mode 100644
index 0000000..8832ae3
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/flingGesture.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"flingGesture.d.ts","sourceRoot":"","sources":["../../../../src/handlers/gestures/flingGesture.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,iBAAiB,EAAE,MAAM,WAAW,CAAC;AAC3D,OAAO,EAAE,kBAAkB,EAAE,MAAM,wBAAwB,CAAC;AAC5D,OAAO,KAAK,EAAE,+BAA+B,EAAE,MAAM,+BAA+B,CAAC;AAErF,qBAAa,YAAa,SAAQ,WAAW,CAAC,+BAA+B,CAAC;IACrE,MAAM,EAAE,iBAAiB,GAAG,kBAAkB,CAAM;;IAQ3D;;;OAGG;IACH,gBAAgB,CAAC,QAAQ,EAAE,MAAM;IAKjC;;;;;;OAMG;IACH,SAAS,CAAC,SAAS,EAAE,MAAM;CAI5B;AAED,MAAM,MAAM,gBAAgB,GAAG,YAAY,CAAC,OAAO,YAAY,CAAC,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/forceTouchGesture.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/forceTouchGesture.d.ts.map
new file mode 100644
index 0000000..b8d42ed
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/forceTouchGesture.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"forceTouchGesture.d.ts","sourceRoot":"","sources":["../../../../src/handlers/gestures/forceTouchGesture.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,iBAAiB,EAAE,oBAAoB,EAAE,MAAM,WAAW,CAAC;AACpE,OAAO,EAAE,uBAAuB,EAAE,MAAM,6BAA6B,CAAC;AACtE,OAAO,KAAK,EAAE,oCAAoC,EAAE,MAAM,+BAA+B,CAAC;AAC1F,OAAO,EAAE,kBAAkB,EAAE,MAAM,yBAAyB,CAAC;AAE7D;;GAEG;AACH,MAAM,MAAM,mCAAmC,GAAG;IAChD,WAAW,EAAE,MAAM,CAAC;CACrB,CAAC;AAqBF;;GAEG;AACH,qBAAa,iBAAkB,SAAQ,oBAAoB,CACzD,oCAAoC,EACpC,mCAAmC,CACpC;IACQ,MAAM,EAAE,iBAAiB,GAAG,uBAAuB,CAAM;;IAQhE;;;;OAIG;IACH,QAAQ,CAAC,KAAK,EAAE,MAAM;IAKtB;;;;OAIG;IACH,QAAQ,CAAC,KAAK,EAAE,MAAM;IAKtB;;;OAGG;IACH,oBAAoB,CAAC,KAAK,EAAE,OAAO;IAKnC,QAAQ,CACN,QAAQ,EAAE,CACR,KAAK,EAAE,kBAAkB,CACvB,kBAAkB,CAChB,oCAAoC,GAClC,mCAAmC,CACtC,CACF,KACE,IAAI;CAMZ;AAED;;GAEG;AACH,MAAM,MAAM,qBAAqB,GAAG,YAAY,CAAC,OAAO,iBAAiB,CAAC,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/gesture.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/gesture.d.ts.map
new file mode 100644
index 0000000..855cafe
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/gesture.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"gesture.d.ts","sourceRoot":"","sources":["../../../../src/handlers/gestures/gesture.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/gestureComposition.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/gestureComposition.d.ts.map
new file mode 100644
index 0000000..a4b90ae
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/gestureComposition.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"gestureComposition.d.ts","sourceRoot":"","sources":["../../../../src/handlers/gestures/gestureComposition.ts"],"names":[],"mappings":"AAAA,OAAO,EAAe,OAAO,EAAc,WAAW,EAAE,MAAM,WAAW,CAAC;AAa1E,qBAAa,eAAgB,SAAQ,OAAO;IAC1C,SAAS,CAAC,QAAQ,EAAE,OAAO,EAAE,CAAM;IACnC,SAAS,CAAC,oBAAoB,EAAE,WAAW,EAAE,CAAM;IACnD,SAAS,CAAC,qBAAqB,EAAE,WAAW,EAAE,CAAM;gBAExC,GAAG,QAAQ,EAAE,OAAO,EAAE;IAKlC,SAAS,CAAC,oBAAoB,CAC5B,OAAO,EAAE,OAAO,EAChB,oBAAoB,EAAE,WAAW,EAAE,EACnC,qBAAqB,EAAE,WAAW,EAAE;IAwBtC,OAAO;IAUP,UAAU;IAMV,cAAc,IAAI,WAAW,EAAE;CAGhC;AAED,qBAAa,mBAAoB,SAAQ,eAAe;IACtD,OAAO;CAuBR;AAED,qBAAa,gBAAiB,SAAQ,eAAe;IACnD,OAAO;CAoBR;AAED,MAAM,MAAM,mBAAmB,GAAG,YAAY,CAAC,OAAO,eAAe,CAAC,CAAC;AACvE,MAAM,MAAM,eAAe,GAAG,mBAAmB,CAAC;AAClD,MAAM,MAAM,uBAAuB,GAAG,YAAY,CAAC,OAAO,mBAAmB,CAAC,CAAC;AAC/E,MAAM,MAAM,oBAAoB,GAAG,YAAY,CAAC,OAAO,gBAAgB,CAAC,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/gestureObjects.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/gestureObjects.d.ts.map
new file mode 100644
index 0000000..42cc0a9
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/gestureObjects.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"gestureObjects.d.ts","sourceRoot":"","sources":["../../../../src/handlers/gestures/gestureObjects.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAE,MAAM,gBAAgB,CAAC;AAC9C,OAAO,EAAE,iBAAiB,EAAE,MAAM,qBAAqB,CAAC;AACxD,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAC;AACpC,OAAO,EACL,eAAe,EACf,gBAAgB,EAChB,mBAAmB,EACpB,MAAM,sBAAsB,CAAC;AAC9B,OAAO,EAAE,gBAAgB,EAAE,MAAM,oBAAoB,CAAC;AACtD,OAAO,EAAE,UAAU,EAAE,MAAM,cAAc,CAAC;AAC1C,OAAO,EAAE,YAAY,EAAE,MAAM,gBAAgB,CAAC;AAC9C,OAAO,EAAE,eAAe,EAAE,MAAM,mBAAmB,CAAC;AACpD,OAAO,EAAE,UAAU,EAAE,MAAM,cAAc,CAAC;AAC1C,OAAO,EAAE,aAAa,EAAE,MAAM,iBAAiB,CAAC;AAChD,OAAO,EAAE,aAAa,EAAE,MAAM,iBAAiB,CAAC;AAChD,OAAO,EAAE,YAAY,EAAE,MAAM,gBAAgB,CAAC;AAE9C;;;;;;;GAOG;AACH,eAAO,MAAM,cAAc;IACzB;;;OAGG;;IAKH;;;OAGG;;IAKH;;;OAGG;;IAKH;;;OAGG;;IAKH;;;OAGG;;IAKH;;;OAGG;;IAKH;;;;;;OAMG;;IAKH;;;;OAIG;;IAKH;;;;;OAKG;;IAKH;;;;;OAKG;;IAKH;;;;OAIG;wBACiB,OAAO,EAAE;IAI7B;;;OAGG;8BACuB,OAAO,EAAE;IAInC;;;;;;;OAOG;2BACoB,OAAO,EAAE;CAGjC,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/gestureStateManager.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/gestureStateManager.d.ts.map
new file mode 100644
index 0000000..9ecff74
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/gestureStateManager.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"gestureStateManager.d.ts","sourceRoot":"","sources":["../../../../src/handlers/gestures/gestureStateManager.ts"],"names":[],"mappings":"AAIA,MAAM,WAAW,uBAAuB;IACtC,KAAK,EAAE,MAAM,IAAI,CAAC;IAClB,QAAQ,EAAE,MAAM,IAAI,CAAC;IACrB,IAAI,EAAE,MAAM,IAAI,CAAC;IACjB,GAAG,EAAE,MAAM,IAAI,CAAC;CACjB;AAWD,iBAAS,MAAM,CAAC,UAAU,EAAE,MAAM,GAAG,uBAAuB,CA+C3D;AAED,eAAO,MAAM,mBAAmB;;CAE/B,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/gestureStateManager.web.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/gestureStateManager.web.d.ts.map
new file mode 100644
index 0000000..49a46d5
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/gestureStateManager.web.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"gestureStateManager.web.d.ts","sourceRoot":"","sources":["../../../../src/handlers/gestures/gestureStateManager.web.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,uBAAuB,EAAE,MAAM,uBAAuB,CAAC;AAEhE,eAAO,MAAM,mBAAmB;uBACX,MAAM,GAAG,uBAAuB;CAmBpD,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/hoverGesture.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/hoverGesture.d.ts.map
new file mode 100644
index 0000000..e745be4
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/hoverGesture.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"hoverGesture.d.ts","sourceRoot":"","sources":["../../../../src/handlers/gestures/hoverGesture.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,iBAAiB,EAAE,oBAAoB,EAAE,MAAM,WAAW,CAAC;AACpE,OAAO,EAAE,kBAAkB,EAAE,MAAM,yBAAyB,CAAC;AAC7D,OAAO,KAAK,EAAE,+BAA+B,EAAE,MAAM,+BAA+B,CAAC;AAErF,MAAM,MAAM,8BAA8B,GAAG;IAC3C,OAAO,EAAE,MAAM,CAAC;IAChB,OAAO,EAAE,MAAM,CAAC;CACjB,CAAC;AAEF,oBAAY,WAAW;IACrB,IAAI,IAAI;IACR,IAAI,IAAI;IACR,SAAS,IAAI;CACd;AAED,MAAM,WAAW,kBAAkB;IACjC,WAAW,CAAC,EAAE,WAAW,CAAC;CAC3B;AAED,eAAO,MAAM,wBAAwB,0BAA2B,CAAC;AAuBjE,qBAAa,YAAa,SAAQ,oBAAoB,CACpD,+BAA+B,EAC/B,8BAA8B,CAC/B;IACQ,MAAM,EAAE,iBAAiB,GAAG,kBAAkB,CAAM;;IAQ3D;;;OAGG;IACH,MAAM,CAAC,MAAM,EAAE,WAAW;IAK1B,QAAQ,CACN,QAAQ,EAAE,CACR,KAAK,EAAE,kBAAkB,CACvB,+BAA+B,GAAG,8BAA8B,CACjE,KACE,IAAI;CAMZ;AAED,MAAM,MAAM,gBAAgB,GAAG,YAAY,CAAC,OAAO,YAAY,CAAC,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/longPressGesture.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/longPressGesture.d.ts.map
new file mode 100644
index 0000000..6fb2f3e
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/longPressGesture.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"longPressGesture.d.ts","sourceRoot":"","sources":["../../../../src/handlers/gestures/longPressGesture.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,iBAAiB,EAAE,MAAM,WAAW,CAAC;AAC3D,OAAO,EAAE,sBAAsB,EAAE,MAAM,4BAA4B,CAAC;AACpE,OAAO,KAAK,EAAE,mCAAmC,EAAE,MAAM,+BAA+B,CAAC;AAEzF,qBAAa,gBAAiB,SAAQ,WAAW,CAAC,mCAAmC,CAAC;IAC7E,MAAM,EAAE,iBAAiB,GAAG,sBAAsB,CAAM;;IAS/D;;;;OAIG;IACH,WAAW,CAAC,QAAQ,EAAE,MAAM;IAK5B;;;;OAIG;IACH,WAAW,CAAC,QAAQ,EAAE,MAAM;IAK5B;;;OAGG;IACH,gBAAgB,CAAC,QAAQ,EAAE,MAAM;CAIlC;AAED,MAAM,MAAM,oBAAoB,GAAG,YAAY,CAAC,OAAO,gBAAgB,CAAC,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/manualGesture.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/manualGesture.d.ts.map
new file mode 100644
index 0000000..b5fd839
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/manualGesture.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"manualGesture.d.ts","sourceRoot":"","sources":["../../../../src/handlers/gestures/manualGesture.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,kBAAkB,EAAE,MAAM,yBAAyB,CAAC;AAC7D,OAAO,EAAE,oBAAoB,EAAE,MAAM,WAAW,CAAC;AAUjD,qBAAa,aAAc,SAAQ,oBAAoB,CACrD,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,EACrB,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,CACtB;;IAOC,QAAQ,CACN,QAAQ,EAAE,CAAC,KAAK,EAAE,kBAAkB,CAAC,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,KAAK,IAAI;CAMvE;AAED,MAAM,MAAM,iBAAiB,GAAG,YAAY,CAAC,OAAO,aAAa,CAAC,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/nativeGesture.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/nativeGesture.d.ts.map
new file mode 100644
index 0000000..f6810f0
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/nativeGesture.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"nativeGesture.d.ts","sourceRoot":"","sources":["../../../../src/handlers/gestures/nativeGesture.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,iBAAiB,EAAE,WAAW,EAAE,MAAM,WAAW,CAAC;AAC3D,OAAO,EAAE,uBAAuB,EAAE,MAAM,6BAA6B,CAAC;AACtE,OAAO,KAAK,EAAE,+BAA+B,EAAE,MAAM,+BAA+B,CAAC;AAErF,qBAAa,aAAc,SAAQ,WAAW,CAAC,+BAA+B,CAAC;IACtE,MAAM,EAAE,iBAAiB,GAAG,uBAAuB,CAAM;;IAQhE;;;OAGG;IACH,qBAAqB,CAAC,KAAK,EAAE,OAAO;IAKpC;;;OAGG;IACH,oBAAoB,CAAC,KAAK,EAAE,OAAO;CAIpC;AAED,MAAM,MAAM,iBAAiB,GAAG,YAAY,CAAC,OAAO,aAAa,CAAC,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/panGesture.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/panGesture.d.ts.map
new file mode 100644
index 0000000..b013d7e
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/panGesture.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"panGesture.d.ts","sourceRoot":"","sources":["../../../../src/handlers/gestures/panGesture.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,iBAAiB,EAAE,oBAAoB,EAAE,MAAM,WAAW,CAAC;AACpE,OAAO,EAAE,kBAAkB,EAAE,MAAM,yBAAyB,CAAC;AAC7D,OAAO,EAAE,gBAAgB,EAAE,MAAM,sBAAsB,CAAC;AACxD,OAAO,KAAK,EAAE,6BAA6B,EAAE,MAAM,+BAA+B,CAAC;AAEnF,MAAM,MAAM,4BAA4B,GAAG;IACzC,OAAO,EAAE,MAAM,CAAC;IAChB,OAAO,EAAE,MAAM,CAAC;CACjB,CAAC;AAuBF,qBAAa,UAAW,SAAQ,oBAAoB,CAClD,6BAA6B,EAC7B,4BAA4B,CAC7B;IACQ,MAAM,EAAE,iBAAiB,GAAG,gBAAgB,CAAM;;IAQzD;;;;OAIG;IACH,aAAa,CACX,MAAM,EAAE,MAAM,GAAG,CAAC,kBAAkB,EAAE,MAAM,EAAE,gBAAgB,EAAE,MAAM,CAAC;IAazE;;;;OAIG;IACH,aAAa,CACX,MAAM,EAAE,MAAM,GAAG,CAAC,kBAAkB,EAAE,MAAM,EAAE,gBAAgB,EAAE,MAAM,CAAC;IAazE;;;;OAIG;IACH,WAAW,CACT,MAAM,EAAE,MAAM,GAAG,CAAC,gBAAgB,EAAE,MAAM,EAAE,cAAc,EAAE,MAAM,CAAC;IAarE;;;;OAIG;IACH,WAAW,CACT,MAAM,EAAE,MAAM,GAAG,CAAC,gBAAgB,EAAE,MAAM,EAAE,cAAc,EAAE,MAAM,CAAC;IAarE;;;OAGG;IACH,WAAW,CAAC,WAAW,EAAE,MAAM;IAK/B;;;;OAIG;IACH,WAAW,CAAC,WAAW,EAAE,MAAM;IAK/B;;;;OAIG;IACH,WAAW,CAAC,QAAQ,EAAE,MAAM;IAK5B;;;OAGG;IACH,WAAW,CAAC,QAAQ,EAAE,MAAM;IAK5B;;;OAGG;IACH,YAAY,CAAC,QAAQ,EAAE,MAAM;IAK7B;;;OAGG;IACH,YAAY,CAAC,QAAQ,EAAE,MAAM;IAK7B;;;;;OAKG;IACH,cAAc,CAAC,KAAK,EAAE,OAAO;IAK7B;;;;;OAKG;IACH,8BAA8B,CAAC,KAAK,EAAE,OAAO;IAK7C;;;;OAIG;IACH,sBAAsB,CAAC,QAAQ,EAAE,MAAM;IAKvC,QAAQ,CACN,QAAQ,EAAE,CACR,KAAK,EAAE,kBAAkB,CACvB,6BAA6B,GAAG,4BAA4B,CAC7D,KACE,IAAI;CAMZ;AAED,MAAM,MAAM,cAAc,GAAG,YAAY,CAAC,OAAO,UAAU,CAAC,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/pinchGesture.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/pinchGesture.d.ts.map
new file mode 100644
index 0000000..5cd39dc
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/pinchGesture.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"pinchGesture.d.ts","sourceRoot":"","sources":["../../../../src/handlers/gestures/pinchGesture.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,oBAAoB,EAAE,MAAM,WAAW,CAAC;AACjD,OAAO,KAAK,EAAE,+BAA+B,EAAE,MAAM,+BAA+B,CAAC;AACrF,OAAO,EAAE,kBAAkB,EAAE,MAAM,yBAAyB,CAAC;AAE7D,MAAM,MAAM,8BAA8B,GAAG;IAC3C,WAAW,EAAE,MAAM,CAAC;CACrB,CAAC;AAqBF,qBAAa,YAAa,SAAQ,oBAAoB,CACpD,+BAA+B,EAC/B,8BAA8B,CAC/B;;IAOC,QAAQ,CACN,QAAQ,EAAE,CACR,KAAK,EAAE,kBAAkB,CACvB,+BAA+B,GAAG,8BAA8B,CACjE,KACE,IAAI;CAMZ;AAED,MAAM,MAAM,gBAAgB,GAAG,YAAY,CAAC,OAAO,YAAY,CAAC,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/reanimatedWrapper.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/reanimatedWrapper.d.ts.map
new file mode 100644
index 0000000..58a24a5
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/reanimatedWrapper.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"reanimatedWrapper.d.ts","sourceRoot":"","sources":["../../../../src/handlers/gestures/reanimatedWrapper.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,OAAO,CAAC;AACvC,OAAO,EACL,kBAAkB,EAClB,uBAAuB,EACxB,MAAM,yBAAyB,CAAC;AAGjC,MAAM,WAAW,WAAW,CAAC,CAAC;IAC5B,KAAK,EAAE,CAAC,CAAC;CACV;AAED,QAAA,IAAI,UAAU,EACV;IACE,OAAO,EAAE;QAEP,uBAAuB,CAAC,CAAC,SAAS,MAAM,EACtC,SAAS,EAAE,cAAc,CAAC,CAAC,CAAC,EAC5B,OAAO,CAAC,EAAE,OAAO,GAChB,cAAc,CAAC,CAAC,CAAC,CAAC;KACtB,CAAC;IACF,QAAQ,EAAE,CACR,QAAQ,EAAE,CAAC,KAAK,EAAE,kBAAkB,GAAG,uBAAuB,KAAK,IAAI,EACvE,MAAM,EAAE,MAAM,EAAE,EAChB,OAAO,EAAE,OAAO,KACb,OAAO,CAAC;IACb,cAAc,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,KAAK,WAAW,CAAC,CAAC,CAAC,CAAC;IAChD,eAAe,EAAE,CAAC,UAAU,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,KAAK,IAAI,CAAC;CACjE,GACD,SAAS,CAAC;AA4Bd,OAAO,EAAE,UAAU,EAAE,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/rotationGesture.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/rotationGesture.d.ts.map
new file mode 100644
index 0000000..e9eabea
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/rotationGesture.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"rotationGesture.d.ts","sourceRoot":"","sources":["../../../../src/handlers/gestures/rotationGesture.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,oBAAoB,EAAE,MAAM,WAAW,CAAC;AACjD,OAAO,KAAK,EAAE,kCAAkC,EAAE,MAAM,+BAA+B,CAAC;AACxF,OAAO,EAAE,kBAAkB,EAAE,MAAM,yBAAyB,CAAC;AAE7D,KAAK,iCAAiC,GAAG;IACvC,cAAc,EAAE,MAAM,CAAC;CACxB,CAAC;AAqBF,qBAAa,eAAgB,SAAQ,oBAAoB,CACvD,kCAAkC,EAClC,iCAAiC,CAClC;;IAOC,QAAQ,CACN,QAAQ,EAAE,CACR,KAAK,EAAE,kBAAkB,CACvB,kCAAkC,GAAG,iCAAiC,CACvE,KACE,IAAI;CAMZ;AAED,MAAM,MAAM,mBAAmB,GAAG,YAAY,CAAC,OAAO,eAAe,CAAC,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/tapGesture.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/tapGesture.d.ts.map
new file mode 100644
index 0000000..3b2f6f8
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/tapGesture.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"tapGesture.d.ts","sourceRoot":"","sources":["../../../../src/handlers/gestures/tapGesture.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,iBAAiB,EAAE,WAAW,EAAE,MAAM,WAAW,CAAC;AAC3D,OAAO,EAAE,gBAAgB,EAAE,MAAM,sBAAsB,CAAC;AACxD,OAAO,KAAK,EAAE,6BAA6B,EAAE,MAAM,+BAA+B,CAAC;AAEnF,qBAAa,UAAW,SAAQ,WAAW,CAAC,6BAA6B,CAAC;IACjE,MAAM,EAAE,iBAAiB,GAAG,gBAAgB,CAAM;;IASzD;;;;OAIG;IACH,WAAW,CAAC,WAAW,EAAE,MAAM;IAK/B;;;;OAIG;IACH,YAAY,CAAC,KAAK,EAAE,MAAM;IAK1B;;;;OAIG;IACH,WAAW,CAAC,OAAO,EAAE,MAAM;IAK3B;;;;OAIG;IACH,WAAW,CAAC,QAAQ,EAAE,MAAM;IAK5B;;;;OAIG;IACH,QAAQ,CAAC,KAAK,EAAE,MAAM;IAKtB;;;;OAIG;IACH,SAAS,CAAC,KAAK,EAAE,MAAM;IAKvB;;;;OAIG;IACH,SAAS,CAAC,KAAK,EAAE,MAAM;CAIxB;AAED,MAAM,MAAM,cAAc,GAAG,YAAY,CAAC,OAAO,UAAU,CAAC,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/handlers/getNextHandlerTag.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/handlers/getNextHandlerTag.d.ts.map
new file mode 100644
index 0000000..7ac6a52
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/handlers/getNextHandlerTag.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"getNextHandlerTag.d.ts","sourceRoot":"","sources":["../../../src/handlers/getNextHandlerTag.ts"],"names":[],"mappings":"AAEA,wBAAgB,iBAAiB,IAAI,MAAM,CAE1C"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/handlers/handlersRegistry.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/handlers/handlersRegistry.d.ts.map
new file mode 100644
index 0000000..400d423
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/handlers/handlersRegistry.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"handlersRegistry.d.ts","sourceRoot":"","sources":["../../../src/handlers/handlersRegistry.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,WAAW,EAAE,MAAM,oBAAoB,CAAC;AACjD,OAAO,EAAE,YAAY,EAAE,uBAAuB,EAAE,MAAM,wBAAwB,CAAC;AAE/E,eAAO,MAAM,cAAc,EAAE,MAAM,CAAC,MAAM,EAAE,MAAM,CAAM,CAAC;AAKzD,wBAAgB,eAAe,CAC7B,UAAU,EAAE,MAAM,EAClB,OAAO,EAAE,WAAW,EACpB,MAAM,CAAC,EAAE,MAAM,QAMhB;AAED,wBAAgB,yBAAyB,CACvC,UAAU,EAAE,MAAM,EAClB,OAAO,EAAE,uBAAuB,QAGjC;AAED,wBAAgB,2BAA2B,CAAC,UAAU,EAAE,MAAM,QAE7D;AAED,wBAAgB,iBAAiB,CAAC,UAAU,EAAE,MAAM,EAAE,MAAM,CAAC,EAAE,MAAM,QAKpE;AAED,wBAAgB,WAAW,CAAC,UAAU,EAAE,MAAM,2BAE7C;AAED,wBAAgB,qBAAqB,CAAC,UAAU,EAAE,MAAM,uCAEvD;AAED,wBAAgB,mBAAmB,CAAC,MAAM,EAAE,MAAM,8iCAMjD;AAED,MAAM,WAAW,uBAAuB;IACtC,cAAc,EAAE,CAAC,KAAK,EAAE,YAAY,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC;IACnD,oBAAoB,EAAE,CAAC,KAAK,EAAE,uBAAuB,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC;CACrE"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/handlers/utils.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/handlers/utils.d.ts.map
new file mode 100644
index 0000000..d951809
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/handlers/utils.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"utils.d.ts","sourceRoot":"","sources":["../../../src/handlers/utils.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAmB/B,wBAAgB,YAAY,CAC1B,KAAK,EAAE,MAAM,CAAC,MAAM,EAAE,OAAO,CAAC,EAC9B,UAAU,EAAE,MAAM,EAAE,EACpB,QAAQ,GAAE,MAAM,CAAC,MAAM,EAAE,OAAO,CAAM;;EAevC;AAED,wBAAgB,wBAAwB,CAAC,UAAU,EAAE,GAAG,OAevD;AAED,wBAAgB,cAAc,CAC5B,IAAI,EAAE,IAAI,GAAG,MAAM,GAAG,KAAK,CAAC,SAAS,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,cAAc,CAAC,GAAG,CAAC,GAC1E,IAAI,GAAG,MAAM,GAAG,KAAK,CAAC,SAAS,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,cAAc,CAAC,GAAG,CAAC,CAKvE;AAGD,wBAAgB,uBAAuB,SAStC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/index.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/index.d.ts.map
new file mode 100644
index 0000000..78c0d5f
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/index.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"index.d.ts","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/init.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/init.d.ts.map
new file mode 100644
index 0000000..25c1a67
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/init.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"init.d.ts","sourceRoot":"","sources":["../../src/init.ts"],"names":[],"mappings":"AAMA,wBAAgB,UAAU,SAEzB;AAID,wBAAgB,qBAAqB,SAKpC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/jestUtils/index.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/jestUtils/index.d.ts.map
new file mode 100644
index 0000000..d685393
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/jestUtils/index.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"index.d.ts","sourceRoot":"","sources":["../../../src/jestUtils/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,kBAAkB,EAAE,kBAAkB,EAAE,MAAM,aAAa,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/jestUtils/jestUtils.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/jestUtils/jestUtils.d.ts.map
new file mode 100644
index 0000000..f82883b
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/jestUtils/jestUtils.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"jestUtils.d.ts","sourceRoot":"","sources":["../../../src/jestUtils/jestUtils.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/mocks/Pressable.d.ts b/node_modules/react-native-gesture-handler/lib/typescript/mocks/Pressable.d.ts
new file mode 100644
index 0000000..ff59020
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/mocks/Pressable.d.ts
@@ -0,0 +1,2 @@
+export { Pressable as default } from 'react-native';
+//# sourceMappingURL=Pressable.d.ts.map
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/mocks/Pressable.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/mocks/Pressable.d.ts.map
new file mode 100644
index 0000000..8137b5a
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/mocks/Pressable.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"Pressable.d.ts","sourceRoot":"","sources":["../../../src/mocks/Pressable.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,IAAI,OAAO,EAAE,MAAM,cAAc,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/mocks.d.ts b/node_modules/react-native-gesture-handler/lib/typescript/mocks/mocks.d.ts
similarity index 84%
rename from node_modules/react-native-gesture-handler/lib/typescript/mocks.d.ts
rename to node_modules/react-native-gesture-handler/lib/typescript/mocks/mocks.d.ts
index 55c4866..42f6558 100644
--- a/node_modules/react-native-gesture-handler/lib/typescript/mocks.d.ts
+++ b/node_modules/react-native-gesture-handler/lib/typescript/mocks/mocks.d.ts
@@ -1,5 +1,9 @@
 import React from 'react';
 import { TouchableNativeFeedback, TouchableWithoutFeedback, ScrollView, FlatList, Switch, TextInput, DrawerLayoutAndroid, View } from 'react-native';
+export declare const RawButton: ({ enabled, ...rest }: any) => React.JSX.Element;
+export declare const BaseButton: ({ enabled, ...rest }: any) => React.JSX.Element;
+export declare const RectButton: ({ enabled, ...rest }: any) => React.JSX.Element;
+export declare const BorderlessButton: typeof TouchableNativeFeedback;
 declare const _default: {
     readonly TouchableHighlight: React.ForwardRefExoticComponent<import("react-native").TouchableHighlightProps & React.RefAttributes<View>>;
     readonly TouchableNativeFeedback: typeof TouchableNativeFeedback;
@@ -17,10 +21,6 @@ declare const _default: {
     readonly PinchGestureHandler: typeof View;
     readonly RotationGestureHandler: typeof View;
     readonly FlingGestureHandler: typeof View;
-    readonly RawButton: ({ enabled, ...rest }: any) => React.JSX.Element;
-    readonly BaseButton: ({ enabled, ...rest }: any) => React.JSX.Element;
-    readonly RectButton: ({ enabled, ...rest }: any) => React.JSX.Element;
-    readonly BorderlessButton: typeof TouchableNativeFeedback;
     readonly PanGestureHandler: typeof View;
     readonly attachGestureHandler: () => void;
     readonly createGestureHandler: () => void;
@@ -44,3 +44,4 @@ declare const _default: {
     };
 };
 export default _default;
+//# sourceMappingURL=mocks.d.ts.map
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/mocks/mocks.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/mocks/mocks.d.ts.map
new file mode 100644
index 0000000..99c6268
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/mocks/mocks.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"mocks.d.ts","sourceRoot":"","sources":["../../../src/mocks/mocks.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAEL,uBAAuB,EAEvB,wBAAwB,EACxB,UAAU,EACV,QAAQ,EACR,MAAM,EACN,SAAS,EACT,mBAAmB,EACnB,IAAI,EACL,MAAM,cAAc,CAAC;AAqBtB,eAAO,MAAM,SAAS,GAAI,sBAAsB,GAAG,sBAIlD,CAAC;AACF,eAAO,MAAM,UAAU,yBALyB,GAAG,sBAKhB,CAAC;AACpC,eAAO,MAAM,UAAU,yBANyB,GAAG,sBAMhB,CAAC;AACpC,eAAO,MAAM,gBAAgB,gCAA0B,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAExD,wBA2BW"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/mountRegistry.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/mountRegistry.d.ts.map
new file mode 100644
index 0000000..e0bfa04
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/mountRegistry.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"mountRegistry.d.ts","sourceRoot":"","sources":["../../src/mountRegistry.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,6BAA6B,CAAC;AAE1D,UAAU,4BAA6B,SAAQ,KAAK,CAAC,SAAS;IAC5D,UAAU,EAAE,MAAM,CAAC;CACpB;AAED,MAAM,MAAM,oBAAoB,GAAG,CACjC,OAAO,EAAE,WAAW,GAAG,4BAA4B,KAChD,IAAI,CAAC;AAGV,qBAAa,aAAa;IACxB,OAAO,CAAC,MAAM,CAAC,cAAc,CAAmC;IAChE,OAAO,CAAC,MAAM,CAAC,gBAAgB,CAAmC;IAElE,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,oBAAoB,GAAG,MAAM,IAAI;IAQnE,MAAM,CAAC,kBAAkB,CAAC,QAAQ,EAAE,oBAAoB,GAAG,MAAM,IAAI;IAQrE,MAAM,CAAC,uBAAuB,CAAC,OAAO,EAAE,KAAK,CAAC,SAAS;IAMvD,MAAM,CAAC,yBAAyB,CAAC,OAAO,EAAE,KAAK,CAAC,SAAS;IAMzD,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,WAAW;IAI5C,MAAM,CAAC,kBAAkB,CAAC,OAAO,EAAE,WAAW;CAG/C"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/specs/NativeRNGestureHandlerModule.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/specs/NativeRNGestureHandlerModule.d.ts.map
new file mode 100644
index 0000000..9f4653f
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/specs/NativeRNGestureHandlerModule.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"NativeRNGestureHandlerModule.d.ts","sourceRoot":"","sources":["../../../src/specs/NativeRNGestureHandlerModule.ts"],"names":[],"mappings":"AAAA,OAAO,EAAuB,WAAW,EAAE,MAAM,cAAc,CAAC;AAChE,OAAO,EAAE,MAAM,EAAE,MAAM,2CAA2C,CAAC;AAEnE,MAAM,WAAW,IAAK,SAAQ,WAAW;IACvC,oBAAoB,EAAE,CAAC,GAAG,EAAE,MAAM,EAAE,oBAAoB,EAAE,OAAO,KAAK,IAAI,CAAC;IAC3E,sBAAsB,EAAE,MAAM,IAAI,CAAC;IACnC,oBAAoB,EAAE,CACpB,WAAW,EAAE,MAAM,EACnB,UAAU,EAAE,MAAM,EAGlB,MAAM,EAAE,MAAM,KACX,IAAI,CAAC;IACV,oBAAoB,EAAE,CACpB,UAAU,EAAE,MAAM,EAClB,OAAO,EAAE,MAAM,EACf,UAAU,EAAE,MAAM,KACf,IAAI,CAAC;IAEV,oBAAoB,EAAE,CAAC,UAAU,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,KAAK,IAAI,CAAC;IACtE,kBAAkB,EAAE,CAAC,UAAU,EAAE,MAAM,KAAK,IAAI,CAAC;IACjD,OAAO,EAAE,MAAM,OAAO,CAAC;IACvB,eAAe,EAAE,MAAM,IAAI,CAAC;CAC7B;;AAED,wBAAgF"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/specs/RNGestureHandlerButtonNativeComponent.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/specs/RNGestureHandlerButtonNativeComponent.d.ts.map
new file mode 100644
index 0000000..d8925af
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/specs/RNGestureHandlerButtonNativeComponent.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"RNGestureHandlerButtonNativeComponent.d.ts","sourceRoot":"","sources":["../../../src/specs/RNGestureHandlerButtonNativeComponent.ts"],"names":[],"mappings":"AACA,OAAO,KAAK,EACV,KAAK,EACL,WAAW,EACX,KAAK,EACN,MAAM,2CAA2C,CAAC;AACnD,OAAO,KAAK,EAAE,SAAS,EAAE,UAAU,EAAE,MAAM,cAAc,CAAC;AAE1D,UAAU,WAAY,SAAQ,SAAS;IACrC,SAAS,CAAC,EAAE,WAAW,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;IACvC,UAAU,CAAC,EAAE,OAAO,CAAC;IACrB,UAAU,CAAC,EAAE,OAAO,CAAC;IACrB,OAAO,CAAC,EAAE,WAAW,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;IACrC,WAAW,CAAC,EAAE,UAAU,CAAC;IACzB,YAAY,CAAC,EAAE,KAAK,CAAC;IACrB,kBAAkB,CAAC,EAAE,WAAW,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IACjD,WAAW,CAAC,EAAE,KAAK,CAAC;IACpB,WAAW,CAAC,EAAE,UAAU,CAAC;IACzB,WAAW,CAAC,EAAE,WAAW,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;CAC5C;;AAED,wBAA6E"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/specs/RNGestureHandlerRootViewNativeComponent.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/specs/RNGestureHandlerRootViewNativeComponent.d.ts.map
new file mode 100644
index 0000000..a2387f3
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/specs/RNGestureHandlerRootViewNativeComponent.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"RNGestureHandlerRootViewNativeComponent.d.ts","sourceRoot":"","sources":["../../../src/specs/RNGestureHandlerRootViewNativeComponent.ts"],"names":[],"mappings":"AACA,OAAO,KAAK,EAAE,SAAS,EAAE,MAAM,cAAc,CAAC;AAE9C,UAAU,WAAY,SAAQ,SAAS;CAAG;;AAE1C,wBAA+E"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/typeUtils.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/typeUtils.d.ts.map
new file mode 100644
index 0000000..7d14e01
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/typeUtils.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"typeUtils.d.ts","sourceRoot":"","sources":["../../src/typeUtils.ts"],"names":[],"mappings":"AAAA,MAAM,MAAM,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/utils.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/utils.d.ts.map
new file mode 100644
index 0000000..2b8c560
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/utils.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"utils.d.ts","sourceRoot":"","sources":["../../src/utils.ts"],"names":[],"mappings":"AAEA,wBAAgB,OAAO,CAAC,CAAC,EAAE,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,CAM/C;AAED,MAAM,MAAM,uBAAuB,CAAC,CAAC,EAAE,WAAW,IAAI,CACpD,QAAQ,EAAE,WAAW,GAAG,IAAI,EAC5B,OAAO,EAAE,CAAC,KACP,WAAW,CAAC;AACjB,wBAAgB,kBAAkB,CAAC,CAAC,EAAE,WAAW,EAC/C,KAAK,EAAE,CAAC,EAAE,EACV,KAAK,EAAE,uBAAuB,CAAC,CAAC,EAAE,WAAW,CAAC,GAC7C,WAAW,EAAE,CAcf;AAED,wBAAgB,WAAW,CAAC,MAAM,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,WAEtD;AAED,wBAAgB,SAAS,IAAI,OAAO,CAGnC;AAED,wBAAgB,UAAU,CAAC,GAAG,EAAE,MAAM,UAErC;AAID,wBAAgB,QAAQ,IAAI,OAAO,CAGlC;AAED,wBAAgB,SAAS,YAExB;AAED,wBAAgB,wBAAwB,IAAI,OAAO,CAQlD;AAED;;;;;;;;GAQG;AACH,wBAAgB,SAAS,CAAC,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,WA4B7C;AAED,eAAO,MAAM,SAAS,QAAc,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/web/Gestures.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/web/Gestures.d.ts.map
new file mode 100644
index 0000000..608f07a
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/web/Gestures.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"Gestures.d.ts","sourceRoot":"","sources":["../../../src/web/Gestures.ts"],"names":[],"mappings":"AACA,OAAO,iBAAiB,MAAM,8BAA8B,CAAC;AAC7D,OAAO,iBAAiB,MAAM,8BAA8B,CAAC;AAC7D,OAAO,uBAAuB,MAAM,oCAAoC,CAAC;AACzE,OAAO,mBAAmB,MAAM,gCAAgC,CAAC;AACjE,OAAO,sBAAsB,MAAM,mCAAmC,CAAC;AACvE,OAAO,mBAAmB,MAAM,gCAAgC,CAAC;AACjE,OAAO,wBAAwB,MAAM,qCAAqC,CAAC;AAC3E,OAAO,oBAAoB,MAAM,iCAAiC,CAAC;AACnE,OAAO,mBAAmB,MAAM,gCAAgC,CAAC;AAGjE,OAAO,8BAA8B,MAAM,wCAAwC,CAAC;AACpF,OAAO,uBAAuB,MAAM,iCAAiC,CAAC;AACtE,OAAO,uBAAuB,MAAM,iCAAiC,CAAC;AACtE,OAAO,6BAA6B,MAAM,uCAAuC,CAAC;AAClF,OAAO,yBAAyB,MAAM,mCAAmC,CAAC;AAC1E,OAAO,4BAA4B,MAAM,sCAAsC,CAAC;AAChF,OAAO,yBAAyB,MAAM,mCAAmC,CAAC;AAE1E,eAAO,MAAM,QAAQ;;;;;;;;;;CAUpB,CAAC;AAEF,eAAO,MAAM,cAAc;;;;;;;;CAQ1B,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/web/constants.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/web/constants.d.ts.map
new file mode 100644
index 0000000..1d7e722
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/web/constants.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"constants.d.ts","sourceRoot":"","sources":["../../../src/web/constants.ts"],"names":[],"mappings":"AAAA,eAAO,MAAM,kBAAkB,KAAK,CAAC;AACrC,eAAO,MAAM,8BAA8B,MAAM,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/web/detectors/RotationGestureDetector.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/web/detectors/RotationGestureDetector.d.ts.map
new file mode 100644
index 0000000..11d7afb
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/web/detectors/RotationGestureDetector.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"RotationGestureDetector.d.ts","sourceRoot":"","sources":["../../../../src/web/detectors/RotationGestureDetector.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAc,MAAM,eAAe,CAAC;AACzD,OAAO,cAAc,MAAM,yBAAyB,CAAC;AAErD,MAAM,WAAW,uBAAuB;IACtC,eAAe,EAAE,CAAC,QAAQ,EAAE,uBAAuB,KAAK,OAAO,CAAC;IAChE,UAAU,EAAE,CAAC,QAAQ,EAAE,uBAAuB,KAAK,OAAO,CAAC;IAC3D,aAAa,EAAE,CAAC,QAAQ,EAAE,uBAAuB,KAAK,IAAI,CAAC;CAC5D;AAED,MAAM,CAAC,OAAO,OAAO,uBACnB,YAAW,uBAAuB;IAElC,eAAe,EAAE,CAAC,QAAQ,EAAE,uBAAuB,KAAK,OAAO,CAAC;IAChE,UAAU,EAAE,CAAC,QAAQ,EAAE,uBAAuB,KAAK,OAAO,CAAC;IAC3D,aAAa,EAAE,CAAC,QAAQ,EAAE,uBAAuB,KAAK,IAAI,CAAC;IAE3D,OAAO,CAAC,WAAW,CAAK;IACxB,OAAO,CAAC,YAAY,CAAK;IAEzB,OAAO,CAAC,aAAa,CAAK;IAC1B,OAAO,CAAC,SAAS,CAAK;IAEtB,OAAO,CAAC,QAAQ,CAAK;IACrB,OAAO,CAAC,QAAQ,CAAK;IAErB,OAAO,CAAC,YAAY,CAAS;IAE7B,OAAO,CAAC,WAAW,CAAwB;gBAE/B,SAAS,EAAE,uBAAuB;IAM9C,OAAO,CAAC,aAAa;IAyCrB,OAAO,CAAC,MAAM;IAUd,OAAO,CAAC,cAAc;IAWf,YAAY,CAAC,KAAK,EAAE,YAAY,EAAE,OAAO,EAAE,cAAc,GAAG,OAAO;IAoDnE,KAAK,IAAI,IAAI;IAKpB,IAAW,OAAO,WAEjB;IAED,IAAW,OAAO,WAEjB;IAED,IAAW,QAAQ,WAElB;IAED,IAAW,SAAS,WAEnB;CACF"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/web/detectors/ScaleGestureDetector.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/web/detectors/ScaleGestureDetector.d.ts.map
new file mode 100644
index 0000000..1f103c2
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/web/detectors/ScaleGestureDetector.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"ScaleGestureDetector.d.ts","sourceRoot":"","sources":["../../../../src/web/detectors/ScaleGestureDetector.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,YAAY,EAAc,MAAM,eAAe,CAAC;AAEzD,OAAO,cAAc,MAAM,yBAAyB,CAAC;AAErD,MAAM,WAAW,oBAAoB;IACnC,YAAY,EAAE,CAAC,QAAQ,EAAE,oBAAoB,KAAK,OAAO,CAAC;IAC1D,OAAO,EAAE,CAAC,QAAQ,EAAE,oBAAoB,KAAK,OAAO,CAAC;IACrD,UAAU,EAAE,CAAC,QAAQ,EAAE,oBAAoB,KAAK,IAAI,CAAC;CACtD;AAED,MAAM,CAAC,OAAO,OAAO,oBAAqB,YAAW,oBAAoB;IAChE,YAAY,EAAE,CAAC,QAAQ,EAAE,oBAAoB,KAAK,OAAO,CAAC;IAC1D,OAAO,EAAE,CAAC,QAAQ,EAAE,oBAAoB,KAAK,OAAO,CAAC;IACrD,UAAU,EAAE,CAAC,QAAQ,EAAE,oBAAoB,KAAK,IAAI,CAAC;IAE5D,OAAO,CAAC,OAAO,CAAU;IACzB,OAAO,CAAC,OAAO,CAAU;IAEzB,OAAO,CAAC,YAAY,CAAU;IAC9B,OAAO,CAAC,QAAQ,CAAU;IAC1B,OAAO,CAAC,WAAW,CAAU;IAE7B,OAAO,CAAC,WAAW,CAAU;IAC7B,OAAO,CAAC,QAAQ,CAAU;IAE1B,OAAO,CAAC,UAAU,CAAS;IAE3B,OAAO,CAAC,QAAQ,CAAS;IACzB,OAAO,CAAC,OAAO,CAAS;gBAEZ,SAAS,EAAE,oBAAoB;IASpC,YAAY,CAAC,KAAK,EAAE,YAAY,EAAE,OAAO,EAAE,cAAc,GAAG,OAAO;IA2GnE,oBAAoB,CAAC,aAAa,EAAE,MAAM,GAAG,MAAM;IAQ1D,IAAW,WAAW,WAErB;IAED,IAAW,MAAM,WAEhB;IAED,IAAW,MAAM,WAEhB;IAED,IAAW,SAAS,WAEnB;CACF"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/web/handlers/FlingGestureHandler.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/web/handlers/FlingGestureHandler.d.ts.map
new file mode 100644
index 0000000..845a080
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/web/handlers/FlingGestureHandler.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"FlingGestureHandler.d.ts","sourceRoot":"","sources":["../../../../src/web/handlers/FlingGestureHandler.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,YAAY,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAErD,OAAO,cAAc,MAAM,kBAAkB,CAAC;AAa9C,MAAM,CAAC,OAAO,OAAO,mBAAoB,SAAQ,cAAc;IAC7D,OAAO,CAAC,wBAAwB,CAAsC;IACtE,OAAO,CAAC,SAAS,CAAiC;IAElD,OAAO,CAAC,aAAa,CAA2B;IAChD,OAAO,CAAC,WAAW,CAAwB;IAC3C,OAAO,CAAC,YAAY,CAAU;IAE9B,OAAO,CAAC,iCAAiC,CAAK;IAC9C,OAAO,CAAC,UAAU,CAAO;IAElB,mBAAmB,CAAC,EAAE,OAAc,EAAE,GAAG,KAAK,EAAE,EAAE,MAAM,GAAG,IAAI;IAYtE,OAAO,CAAC,UAAU;IAQlB,OAAO,CAAC,WAAW;IAoDnB,OAAO,CAAC,QAAQ;IAMhB,SAAS,CAAC,aAAa,CAAC,KAAK,EAAE,YAAY,GAAG,IAAI;IAclD,SAAS,CAAC,YAAY,CAAC,KAAK,EAAE,YAAY,GAAG,IAAI;IAMjD,OAAO,CAAC,gBAAgB;IAmBxB,OAAO,CAAC,iBAAiB;IAUzB,SAAS,CAAC,aAAa,CAAC,KAAK,EAAE,YAAY,GAAG,IAAI;IAKlD,SAAS,CAAC,oBAAoB,CAAC,KAAK,EAAE,YAAY,GAAG,IAAI;IAKzD,SAAS,CAAC,WAAW,CAAC,KAAK,EAAE,YAAY,GAAG,IAAI;IAOhD,SAAS,CAAC,eAAe,CAAC,KAAK,EAAE,YAAY,GAAG,IAAI;IAKpD,OAAO,CAAC,IAAI;IAQL,QAAQ,CAAC,KAAK,CAAC,EAAE,OAAO,GAAG,IAAI;IAKtC,SAAS,CAAC,WAAW,IAAI,IAAI;CAK9B"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/web/handlers/GestureHandler.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/web/handlers/GestureHandler.d.ts.map
new file mode 100644
index 0000000..7c6f263
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/web/handlers/GestureHandler.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"GestureHandler.d.ts","sourceRoot":"","sources":["../../../../src/web/handlers/GestureHandler.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/web/handlers/HoverGestureHandler.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/web/handlers/HoverGestureHandler.d.ts.map
new file mode 100644
index 0000000..4b1a7bf
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/web/handlers/HoverGestureHandler.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"HoverGestureHandler.d.ts","sourceRoot":"","sources":["../../../../src/web/handlers/HoverGestureHandler.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,YAAY,EAAc,MAAM,eAAe,CAAC;AAEzD,OAAO,cAAc,MAAM,kBAAkB,CAAC;AAE9C,MAAM,CAAC,OAAO,OAAO,mBAAoB,SAAQ,cAAc;IAC7D,OAAO,CAAC,UAAU,CAAyB;IAE3C,SAAS,CAAC,oBAAoB,IAAI,MAAM,CAAC,MAAM,EAAE,OAAO,CAAC;IAOzD,SAAS,CAAC,iBAAiB,CAAC,KAAK,EAAE,YAAY,GAAG,IAAI;IAatD,SAAS,CAAC,gBAAgB,CAAC,KAAK,EAAE,YAAY,GAAG,IAAI;IASrD,SAAS,CAAC,aAAa,CAAC,KAAK,EAAE,YAAY,GAAG,IAAI;IAOlD,SAAS,CAAC,eAAe,CAAC,KAAK,EAAE,YAAY,GAAG,IAAI;CAIrD"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/web/handlers/IGestureHandler.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/web/handlers/IGestureHandler.d.ts.map
new file mode 100644
index 0000000..297d8b9
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/web/handlers/IGestureHandler.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"IGestureHandler.d.ts","sourceRoot":"","sources":["../../../../src/web/handlers/IGestureHandler.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,WAAW,EAAE,MAAM,mBAAmB,CAAC;AACrD,OAAO,KAAK,EAAE,WAAW,EAAE,MAAM,qCAAqC,CAAC;AACvE,OAAO,KAAK,EAAE,KAAK,EAAE,MAAM,aAAa,CAAC;AACzC,OAAO,KAAK,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAC5C,OAAO,KAAK,YAAY,MAAM,uBAAuB,CAAC;AACtD,OAAO,KAAK,EAAE,sBAAsB,EAAE,MAAM,iCAAiC,CAAC;AAC9E,OAAO,KAAK,cAAc,MAAM,yBAAyB,CAAC;AAE1D,MAAM,CAAC,OAAO,WAAW,eAAe;IACtC,MAAM,EAAE,OAAO,CAAC;IAChB,eAAe,EAAE,MAAM,CAAC;IACxB,QAAQ,EAAE,OAAO,CAAC;IAClB,UAAU,EAAE,MAAM,CAAC;IACnB,QAAQ,CAAC,MAAM,EAAE,MAAM,CAAC;IACxB,QAAQ,CAAC,QAAQ,EAAE,sBAAsB,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;IACzD,QAAQ,CAAC,OAAO,EAAE,cAAc,CAAC;IACjC,KAAK,EAAE,KAAK,CAAC;IACb,uBAAuB,EAAE,OAAO,CAAC;IACjC,mBAAmB,EAAE,OAAO,CAAC;IAC7B,OAAO,EAAE,OAAO,CAAC;IACjB,WAAW,EAAE,WAAW,CAAC;IAEzB,kBAAkB,EAAE,CAAC,OAAO,EAAE,YAAY,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC;IAE7D,gBAAgB,EAAE,CAChB,WAAW,EAAE,WAAW,GAAG,SAAS,KACjC,OAAO,GAAG,MAAM,GAAG,SAAS,CAAC;IAElC,oBAAoB,EAAE,MAAM,MAAM,EAAE,CAAC;IAErC,KAAK,EAAE,MAAM,IAAI,CAAC;IAClB,QAAQ,EAAE,CAAC,KAAK,EAAE,OAAO,KAAK,IAAI,CAAC;IACnC,GAAG,EAAE,MAAM,IAAI,CAAC;IAChB,IAAI,EAAE,MAAM,IAAI,CAAC;IACjB,MAAM,EAAE,MAAM,IAAI,CAAC;IAEnB,KAAK,EAAE,MAAM,IAAI,CAAC;IAElB,2BAA2B,EAAE,CAAC,OAAO,EAAE,eAAe,KAAK,OAAO,CAAC;IACnE,6BAA6B,EAAE,CAAC,OAAO,EAAE,eAAe,KAAK,OAAO,CAAC;IACrE,6BAA6B,EAAE,CAAC,OAAO,EAAE,eAAe,KAAK,OAAO,CAAC;IACrE,wBAAwB,EAAE,CAAC,OAAO,EAAE,eAAe,KAAK,OAAO,CAAC;IAEhE,SAAS,EAAE,CAAC,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,KAAK,IAAI,CAAC;IAEtD,mBAAmB,EAAE,CAAC,MAAM,EAAE,MAAM,KAAK,IAAI,CAAC;IAE9C,QAAQ,CAAC,EAAE,MAAM,OAAO,CAAC;CAC1B"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/web/handlers/LongPressGestureHandler.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/web/handlers/LongPressGestureHandler.d.ts.map
new file mode 100644
index 0000000..2d2c40c
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/web/handlers/LongPressGestureHandler.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"LongPressGestureHandler.d.ts","sourceRoot":"","sources":["../../../../src/web/handlers/LongPressGestureHandler.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,KAAK,EAAE,MAAM,aAAa,CAAC;AACpC,OAAO,EAAE,YAAY,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAErD,OAAO,cAAc,MAAM,kBAAkB,CAAC;AAM9C,MAAM,CAAC,OAAO,OAAO,uBAAwB,SAAQ,cAAc;IACjE,OAAO,CAAC,aAAa,CAA2B;IAChD,OAAO,CAAC,gBAAgB,CAAwC;IAEhE,OAAO,CAAC,SAAS,CAAyB;IAC1C,OAAO,CAAC,gBAAgB,CAAK;IAC7B,OAAO,CAAC,MAAM,CAAK;IACnB,OAAO,CAAC,MAAM,CAAK;IAEnB,OAAO,CAAC,SAAS,CAAK;IACtB,OAAO,CAAC,YAAY,CAAK;IAEzB,OAAO,CAAC,iBAAiB,CAAqB;IAEvC,IAAI,CAAC,GAAG,EAAE,MAAM,EAAE,QAAQ,EAAE,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC;IAQ3D,SAAS,CAAC,oBAAoB;;;IAOvB,mBAAmB,CAAC,EAAE,OAAc,EAAE,GAAG,KAAK,EAAE,EAAE,MAAM,GAAG,IAAI;IAgBtE,SAAS,CAAC,WAAW,IAAI,IAAI;IAM7B,SAAS,CAAC,aAAa,CAAC,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,GAAG,IAAI;IAIjE,SAAS,CAAC,aAAa,CAAC,KAAK,EAAE,YAAY,GAAG,IAAI;IAgBlD,SAAS,CAAC,YAAY,CAAC,KAAK,EAAE,YAAY,GAAG,IAAI;IAiBjD,SAAS,CAAC,aAAa,CAAC,KAAK,EAAE,YAAY,GAAG,IAAI;IAMlD,SAAS,CAAC,oBAAoB,CAAC,KAAK,EAAE,YAAY,GAAG,IAAI;IAMzD,SAAS,CAAC,WAAW,CAAC,KAAK,EAAE,YAAY,GAAG,IAAI;IAWhD,SAAS,CAAC,eAAe,CAAC,KAAK,EAAE,YAAY,GAAG,IAAI;IAYpD,OAAO,CAAC,QAAQ;IAWhB,OAAO,CAAC,WAAW;IAcnB,OAAO,CAAC,iBAAiB;CAiB1B"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/web/handlers/ManualGestureHandler.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/web/handlers/ManualGestureHandler.d.ts.map
new file mode 100644
index 0000000..18c325d
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/web/handlers/ManualGestureHandler.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"ManualGestureHandler.d.ts","sourceRoot":"","sources":["../../../../src/web/handlers/ManualGestureHandler.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAE,MAAM,eAAe,CAAC;AAC7C,OAAO,cAAc,MAAM,kBAAkB,CAAC;AAE9C,MAAM,CAAC,OAAO,OAAO,oBAAqB,SAAQ,cAAc;IAC9D,SAAS,CAAC,aAAa,CAAC,KAAK,EAAE,YAAY,GAAG,IAAI;IAQlD,SAAS,CAAC,YAAY,CAAC,KAAK,EAAE,YAAY,GAAG,IAAI;IAKjD,SAAS,CAAC,aAAa,CAAC,KAAK,EAAE,YAAY,GAAG,IAAI;IAKlD,SAAS,CAAC,oBAAoB,CAAC,KAAK,EAAE,YAAY,GAAG,IAAI;IAKzD,SAAS,CAAC,WAAW,CAAC,KAAK,EAAE,YAAY,GAAG,IAAI;IAKhD,SAAS,CAAC,eAAe,CAAC,KAAK,EAAE,YAAY,GAAG,IAAI;CAIrD"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/web/handlers/NativeViewGestureHandler.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/web/handlers/NativeViewGestureHandler.d.ts.map
new file mode 100644
index 0000000..2b2445d
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/web/handlers/NativeViewGestureHandler.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"NativeViewGestureHandler.d.ts","sourceRoot":"","sources":["../../../../src/web/handlers/NativeViewGestureHandler.ts"],"names":[],"mappings":"AAGA,OAAO,EAAE,YAAY,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAErD,OAAO,cAAc,MAAM,kBAAkB,CAAC;AAC9C,MAAM,CAAC,OAAO,OAAO,wBAAyB,SAAQ,cAAc;IAClE,OAAO,CAAC,UAAU,CAAW;IAI7B,OAAO,CAAC,qBAAqB,CAAS;IACtC,OAAO,CAAC,oBAAoB,CAAS;IAErC,OAAO,CAAC,MAAM,CAAK;IACnB,OAAO,CAAC,MAAM,CAAK;IACnB,OAAO,CAAC,SAAS,CAA2C;IAErD,IAAI,CAAC,GAAG,EAAE,MAAM,EAAE,QAAQ,EAAE,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,IAAI;IAe3D,mBAAmB,CAAC,EAAE,OAAc,EAAE,GAAG,KAAK,EAAE,EAAE,MAAM,GAAG,IAAI;IActE,OAAO,CAAC,iBAAiB;IAUzB,SAAS,CAAC,aAAa,CAAC,KAAK,EAAE,YAAY,GAAG,IAAI;IAQlD,SAAS,CAAC,YAAY,CAAC,KAAK,EAAE,YAAY,GAAG,IAAI;IAMjD,OAAO,CAAC,gBAAgB;IAmBxB,SAAS,CAAC,aAAa,CAAC,KAAK,EAAE,YAAY,GAAG,IAAI;IAiBlD,SAAS,CAAC,cAAc,IAAI,IAAI;IAMhC,SAAS,CAAC,WAAW,CAAC,KAAK,EAAE,YAAY,GAAG,IAAI;IAKhD,SAAS,CAAC,eAAe,CAAC,KAAK,EAAE,YAAY,GAAG,IAAI;IAKpD,OAAO,CAAC,IAAI;IAYL,6BAA6B,CAAC,OAAO,EAAE,cAAc,GAAG,OAAO;IA4B/D,wBAAwB,CAAC,QAAQ,EAAE,cAAc,GAAG,OAAO;IAI3D,qBAAqB,IAAI,OAAO;IAIhC,QAAQ,IAAI,OAAO;CAG3B"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/web/handlers/PanGestureHandler.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/web/handlers/PanGestureHandler.d.ts.map
new file mode 100644
index 0000000..44dec34
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/web/handlers/PanGestureHandler.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"PanGestureHandler.d.ts","sourceRoot":"","sources":["../../../../src/web/handlers/PanGestureHandler.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,YAAY,EAAE,MAAM,EAAE,UAAU,EAAe,MAAM,eAAe,CAAC;AAE9E,OAAO,cAAc,MAAM,kBAAkB,CAAC;AAM9C,MAAM,CAAC,OAAO,OAAO,iBAAkB,SAAQ,cAAc;IAC3D,OAAO,CAAC,QAAQ,CAAC,0BAA0B,CAYzC;IAEK,SAAS,SAAK;IACd,SAAS,SAAK;IAErB,OAAO,CAAC,SAAS,CAAuB;IAExC,OAAO,CAAC,kBAAkB,CAA4B;IACtD,OAAO,CAAC,gBAAgB,CAA2B;IACnD,OAAO,CAAC,gBAAgB,CAA2B;IACnD,OAAO,CAAC,cAAc,CAA2B;IAEjD,OAAO,CAAC,kBAAkB,CAA2B;IACrD,OAAO,CAAC,gBAAgB,CAA2B;IACnD,OAAO,CAAC,gBAAgB,CAA2B;IACnD,OAAO,CAAC,cAAc,CAA2B;IAEjD,OAAO,CAAC,YAAY,CAA2B;IAC/C,OAAO,CAAC,YAAY,CAA2B;IAC/C,OAAO,CAAC,aAAa,CAA2B;IAEhD,OAAO,CAAC,WAAW,CAAwB;IAC3C,OAAO,CAAC,WAAW,CAAwB;IAE3C,OAAO,CAAC,MAAM,CAAK;IACnB,OAAO,CAAC,MAAM,CAAK;IACnB,OAAO,CAAC,OAAO,CAAK;IACpB,OAAO,CAAC,OAAO,CAAK;IACpB,OAAO,CAAC,KAAK,CAAK;IAClB,OAAO,CAAC,KAAK,CAAK;IAElB,OAAO,CAAC,UAAU,CAAyB;IAE3C,OAAO,CAAC,sBAAsB,CAAK;IACnC,OAAO,CAAC,iBAAiB,CAAK;IAE9B,OAAO,CAAC,8BAA8B,CAAS;IAC/C,OAAO,CAAC,eAAe,CAAK;IAC5B,OAAO,CAAC,WAAW,CAA4B;IAExC,mBAAmB,CAAC,EAAE,OAAc,EAAE,GAAG,KAAK,EAAE,EAAE,MAAM,GAAG,IAAI;IA2GtE,SAAS,CAAC,WAAW,IAAI,IAAI;IAyB7B,SAAS,CAAC,oBAAoB;;;;;;;IAc9B,OAAO,CAAC,eAAe;IAGvB,OAAO,CAAC,eAAe;IAIvB,OAAO,CAAC,sBAAsB;IAI9B,OAAO,CAAC,gBAAgB;IAOxB,OAAO,CAAC,cAAc;IAQtB,SAAS,CAAC,aAAa,CAAC,KAAK,EAAE,YAAY,GAAG,IAAI;IAqBlD,SAAS,CAAC,YAAY,CAAC,KAAK,EAAE,YAAY,GAAG,IAAI;IAwBjD,SAAS,CAAC,WAAW,CAAC,KAAK,EAAE,YAAY,GAAG,IAAI;IAwBhD,SAAS,CAAC,eAAe,CAAC,KAAK,EAAE,YAAY,GAAG,IAAI;IAsBpD,SAAS,CAAC,aAAa,CAAC,KAAK,EAAE,YAAY,GAAG,IAAI;IAYlD,SAAS,CAAC,oBAAoB,CAAC,KAAK,EAAE,YAAY,GAAG,IAAI;IAkBzD,OAAO,CAAC,gBAAgB;IAcxB,SAAS,CAAC,OAAO,CAAC,KAAK,EAAE,YAAY,GAAG,IAAI;IAsC5C,OAAO,CAAC,cAAc;IAqEtB,OAAO,CAAC,UAAU;IAqClB,OAAO,CAAC,QAAQ;IAuBhB,OAAO,CAAC,UAAU;IAUX,QAAQ,CAAC,KAAK,UAAQ,GAAG,IAAI;IAQpC,SAAS,CAAC,QAAQ,IAAI,IAAI;IAI1B,SAAS,CAAC,OAAO,IAAI,IAAI;IAIzB,SAAS,CAAC,aAAa,IAAI,IAAI;CAQhC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/web/handlers/PinchGestureHandler.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/web/handlers/PinchGestureHandler.d.ts.map
new file mode 100644
index 0000000..a961746
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/web/handlers/PinchGestureHandler.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"PinchGestureHandler.d.ts","sourceRoot":"","sources":["../../../../src/web/handlers/PinchGestureHandler.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,YAAY,EAAE,MAAM,eAAe,CAAC;AAE7C,OAAO,cAAc,MAAM,kBAAkB,CAAC;AAK9C,MAAM,CAAC,OAAO,OAAO,mBAAoB,SAAQ,cAAc;IAC7D,OAAO,CAAC,KAAK,CAAK;IAClB,OAAO,CAAC,QAAQ,CAAK;IAErB,OAAO,CAAC,YAAY,CAAK;IACzB,OAAO,CAAC,QAAQ,CAAsB;IAEtC,OAAO,CAAC,qBAAqB,CA4B3B;IAEF,OAAO,CAAC,oBAAoB,CAE1B;IAEK,IAAI,CAAC,GAAG,EAAE,MAAM,EAAE,QAAQ,EAAE,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC;IAM3D,SAAS,CAAC,oBAAoB;;;;;;IAS9B,SAAS,CAAC,aAAa,CAAC,KAAK,EAAE,YAAY,GAAG,IAAI;IAOlD,SAAS,CAAC,YAAY,CAAC,KAAK,EAAE,YAAY,GAAG,IAAI;IAOjD,SAAS,CAAC,WAAW,CAAC,KAAK,EAAE,YAAY,GAAG,IAAI;IAehD,SAAS,CAAC,eAAe,CAAC,KAAK,EAAE,YAAY,GAAG,IAAI;IAUpD,SAAS,CAAC,aAAa,CAAC,KAAK,EAAE,YAAY,GAAG,IAAI;IASlD,SAAS,CAAC,oBAAoB,CAAC,KAAK,EAAE,YAAY,GAAG,IAAI;IAUzD,OAAO,CAAC,QAAQ;IAST,QAAQ,CAAC,KAAK,CAAC,EAAE,OAAO,GAAG,IAAI;IAQtC,SAAS,CAAC,OAAO,IAAI,IAAI;IAIzB,SAAS,CAAC,aAAa,IAAI,IAAI;CAOhC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/web/handlers/RotationGestureHandler.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/web/handlers/RotationGestureHandler.d.ts.map
new file mode 100644
index 0000000..6cf3ef2
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/web/handlers/RotationGestureHandler.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"RotationGestureHandler.d.ts","sourceRoot":"","sources":["../../../../src/web/handlers/RotationGestureHandler.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,YAAY,EAAE,MAAM,eAAe,CAAC;AAE7C,OAAO,cAAc,MAAM,kBAAkB,CAAC;AAO9C,MAAM,CAAC,OAAO,OAAO,sBAAuB,SAAQ,cAAc;IAChE,OAAO,CAAC,QAAQ,CAAK;IACrB,OAAO,CAAC,QAAQ,CAAK;IAErB,OAAO,CAAC,aAAa,CAAK;IAC1B,OAAO,CAAC,aAAa,CAAK;IAE1B,OAAO,CAAC,uBAAuB,CAwB7B;IAEF,OAAO,CAAC,uBAAuB,CAC6B;IAErD,IAAI,CAAC,GAAG,EAAE,MAAM,EAAE,QAAQ,EAAE,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,IAAI;IAMlE,SAAS,CAAC,oBAAoB;;;;;;IASvB,UAAU,IAAI,MAAM;IAMpB,UAAU,IAAI,MAAM;IAM3B,SAAS,CAAC,aAAa,CAAC,KAAK,EAAE,YAAY,GAAG,IAAI;IAOlD,SAAS,CAAC,YAAY,CAAC,KAAK,EAAE,YAAY,GAAG,IAAI;IAQjD,SAAS,CAAC,aAAa,CAAC,KAAK,EAAE,YAAY,GAAG,IAAI;IAmBlD,SAAS,CAAC,oBAAoB,CAAC,KAAK,EAAE,YAAY,GAAG,IAAI;IAmBzD,SAAS,CAAC,WAAW,CAAC,KAAK,EAAE,YAAY,GAAG,IAAI;IAgBhD,SAAS,CAAC,eAAe,CAAC,KAAK,EAAE,YAAY,GAAG,IAAI;IAMpD,SAAS,CAAC,QAAQ,IAAI,IAAI;IAQ1B,SAAS,CAAC,OAAO,IAAI,IAAI;CAS1B"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/web/handlers/TapGestureHandler.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/web/handlers/TapGestureHandler.d.ts.map
new file mode 100644
index 0000000..ca602c7
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/web/handlers/TapGestureHandler.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"TapGestureHandler.d.ts","sourceRoot":"","sources":["../../../../src/web/handlers/TapGestureHandler.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,YAAY,EAAE,MAAM,EAAc,MAAM,eAAe,CAAC;AAEjE,OAAO,cAAc,MAAM,kBAAkB,CAAC;AAO9C,MAAM,CAAC,OAAO,OAAO,iBAAkB,SAAQ,cAAc;IAC3D,OAAO,CAAC,SAAS,CAA2B;IAC5C,OAAO,CAAC,SAAS,CAA2B;IAC5C,OAAO,CAAC,SAAS,CAA2B;IAC5C,OAAO,CAAC,aAAa,CAA2B;IAChD,OAAO,CAAC,UAAU,CAAwB;IAE1C,OAAO,CAAC,YAAY,CAA0B;IAC9C,OAAO,CAAC,mBAAmB,CAAkC;IAC7D,OAAO,CAAC,0BAA0B,CAAK;IAEvC,OAAO,CAAC,MAAM,CAAK;IACnB,OAAO,CAAC,MAAM,CAAK;IACnB,OAAO,CAAC,OAAO,CAAK;IACpB,OAAO,CAAC,OAAO,CAAK;IACpB,OAAO,CAAC,KAAK,CAAK;IAClB,OAAO,CAAC,KAAK,CAAK;IAElB,OAAO,CAAC,WAAW,CAAqB;IACxC,OAAO,CAAC,YAAY,CAAqB;IAEzC,OAAO,CAAC,SAAS,CAAK;IAEf,mBAAmB,CAAC,EAAE,OAAc,EAAE,GAAG,KAAK,EAAE,EAAE,MAAM,GAAG,IAAI;IAgCtE,SAAS,CAAC,WAAW,IAAI,IAAI;IAY7B,OAAO,CAAC,aAAa;IAKrB,OAAO,CAAC,QAAQ;IAMhB,OAAO,CAAC,MAAM;IAad,OAAO,CAAC,gBAAgB;IAQxB,SAAS,CAAC,aAAa,CAAC,KAAK,EAAE,YAAY,GAAG,IAAI;IAqBlD,SAAS,CAAC,YAAY,CAAC,KAAK,EAAE,YAAY,GAAG,IAAI;IAgBjD,SAAS,CAAC,WAAW,CAAC,KAAK,EAAE,YAAY,GAAG,IAAI;IAUhD,SAAS,CAAC,eAAe,CAAC,KAAK,EAAE,YAAY,GAAG,IAAI;IAepD,SAAS,CAAC,aAAa,CAAC,KAAK,EAAE,YAAY,GAAG,IAAI;IAUlD,SAAS,CAAC,oBAAoB,CAAC,KAAK,EAAE,YAAY,GAAG,IAAI;IAUzD,OAAO,CAAC,WAAW;IA8BnB,OAAO,CAAC,kBAAkB;IAW1B,OAAO,CAAC,UAAU;IAyBX,QAAQ,IAAI,IAAI;IAMvB,SAAS,CAAC,QAAQ,IAAI,IAAI;IAK1B,SAAS,CAAC,aAAa,IAAI,IAAI;CAKhC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/web/interfaces.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/web/interfaces.d.ts.map
new file mode 100644
index 0000000..e7c460f
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/web/interfaces.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"interfaces.d.ts","sourceRoot":"","sources":["../../../src/web/interfaces.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/web/tools/CircularBuffer.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/web/tools/CircularBuffer.d.ts.map
new file mode 100644
index 0000000..836f698
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/web/tools/CircularBuffer.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"CircularBuffer.d.ts","sourceRoot":"","sources":["../../../../src/web/tools/CircularBuffer.ts"],"names":[],"mappings":"AAAA,MAAM,CAAC,OAAO,OAAO,cAAc,CAAC,CAAC;IACnC,OAAO,CAAC,QAAQ,CAAS;IACzB,OAAO,CAAC,MAAM,CAAM;IACpB,OAAO,CAAC,KAAK,CAAS;IACtB,OAAO,CAAC,KAAK,CAAS;gBAEV,IAAI,EAAE,MAAM;IAOjB,IAAI,CAAC,OAAO,EAAE,CAAC,GAAG,IAAI;IAMtB,GAAG,CAAC,EAAE,EAAE,MAAM,GAAG,CAAC;IAalB,KAAK,IAAI,IAAI;IAMpB,IAAW,IAAI,WAEd;CACF"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/web/tools/EventManager.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/web/tools/EventManager.d.ts.map
new file mode 100644
index 0000000..49ba391
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/web/tools/EventManager.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"EventManager.d.ts","sourceRoot":"","sources":["../../../../src/web/tools/EventManager.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAEzD,KAAK,oBAAoB,GAAG,CAAC,KAAK,EAAE,YAAY,KAAK,IAAI,CAAC;AAE1D,MAAM,CAAC,OAAO,CAAC,QAAQ,OAAO,YAAY,CAAC,CAAC;IAC1C,SAAS,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC;IAC3B,SAAS,CAAC,gBAAgB,EAAE,MAAM,EAAE,CAAM;IAC1C,SAAS,CAAC,qBAAqB,EAAE,MAAM,CAAC;gBAE5B,IAAI,EAAE,CAAC;aAKH,iBAAiB,IAAI,IAAI;aACzB,mBAAmB,IAAI,IAAI;IAE3C,SAAS,CAAC,QAAQ,CAAC,QAAQ,CACzB,KAAK,EAAE,KAAK,EACZ,SAAS,EAAE,UAAU,GACpB,YAAY;IAEf,SAAS,CAAC,aAAa,CAAC,MAAM,EAAE,YAAY,GAAG,IAAI;IACnD,SAAS,CAAC,YAAY,CAAC,MAAM,EAAE,YAAY,GAAG,IAAI;IAClD,SAAS,CAAC,WAAW,CAAC,MAAM,EAAE,YAAY,GAAG,IAAI;IACjD,SAAS,CAAC,eAAe,CAAC,MAAM,EAAE,YAAY,GAAG,IAAI;IACrD,SAAS,CAAC,aAAa,CAAC,MAAM,EAAE,YAAY,GAAG,IAAI;IACnD,SAAS,CAAC,cAAc,CAAC,MAAM,EAAE,YAAY,GAAG,IAAI;IACpD,SAAS,CAAC,cAAc,CAAC,MAAM,EAAE,YAAY,GAAG,IAAI;IACpD,SAAS,CAAC,eAAe,CAAC,MAAM,EAAE,YAAY,GAAG,IAAI;IAMrD,SAAS,CAAC,oBAAoB,CAAC,MAAM,EAAE,YAAY,GAAG,IAAI;IAC1D,SAAS,CAAC,iBAAiB,CAAC,MAAM,EAAE,YAAY,GAAG,IAAI;IACvD,SAAS,CAAC,gBAAgB,CAAC,MAAM,EAAE,YAAY,GAAG,IAAI;IACtD,SAAS,CAAC,OAAO,CAAC,MAAM,EAAE,YAAY,GAAG,IAAI;IAEtC,gBAAgB,CAAC,QAAQ,EAAE,oBAAoB,GAAG,IAAI;IAGtD,eAAe,CAAC,QAAQ,EAAE,oBAAoB,GAAG,IAAI;IAGrD,cAAc,CAAC,QAAQ,EAAE,oBAAoB,GAAG,IAAI;IAGpD,kBAAkB,CAAC,QAAQ,EAAE,oBAAoB,GAAG,IAAI;IAGxD,gBAAgB,CAAC,QAAQ,EAAE,oBAAoB,GAAG,IAAI;IAGtD,iBAAiB,CAAC,QAAQ,EAAE,oBAAoB,GAAG,IAAI;IAGvD,iBAAiB,CAAC,QAAQ,EAAE,oBAAoB,GAAG,IAAI;IAGvD,kBAAkB,CAAC,QAAQ,EAAE,oBAAoB,GAAG,IAAI;IAGxD,uBAAuB,CAAC,QAAQ,EAAE,oBAAoB,GAAG,IAAI;IAG7D,oBAAoB,CAAC,QAAQ,EAAE,oBAAoB,GAAG,IAAI;IAG1D,mBAAmB,CAAC,QAAQ,EAAE,oBAAoB,GAAG,IAAI;IAGzD,UAAU,CAAC,QAAQ,EAAE,oBAAoB,GAAG,IAAI;IAIvD,SAAS,CAAC,cAAc,CAAC,SAAS,EAAE,MAAM,GAAG,IAAI;IAQjD,SAAS,CAAC,iBAAiB,CAAC,SAAS,EAAE,MAAM,GAAG,IAAI;IAU7C,YAAY,IAAI,IAAI;CAW5B"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/web/tools/GestureHandlerDelegate.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/web/tools/GestureHandlerDelegate.d.ts.map
new file mode 100644
index 0000000..e69ee74
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/web/tools/GestureHandlerDelegate.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"GestureHandlerDelegate.d.ts","sourceRoot":"","sources":["../../../../src/web/tools/GestureHandlerDelegate.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAEvC,MAAM,WAAW,aAAa;IAC5B,KAAK,EAAE,MAAM,CAAC;IACd,KAAK,EAAE,MAAM,CAAC;IACd,KAAK,EAAE,MAAM,CAAC;IACd,MAAM,EAAE,MAAM,CAAC;CAChB;AAED,MAAM,WAAW,sBAAsB,CAAC,UAAU,EAAE,QAAQ;IAC1D,IAAI,EAAE,UAAU,CAAC;IAEjB,IAAI,CAAC,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,GAAG,IAAI,CAAC;IAC/C,iBAAiB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE;QAAE,CAAC,EAAE,MAAM,CAAC;QAAC,CAAC,EAAE,MAAM,CAAA;KAAE,GAAG,OAAO,CAAC;IAC/D,WAAW,IAAI,aAAa,CAAC;IAC7B,KAAK,IAAI,IAAI,CAAC;IAEd,OAAO,IAAI,IAAI,CAAC;IAChB,UAAU,IAAI,IAAI,CAAC;IACnB,KAAK,IAAI,IAAI,CAAC;IACd,QAAQ,IAAI,IAAI,CAAC;IACjB,MAAM,IAAI,IAAI,CAAC;IACf,eAAe,CAAC,OAAO,EAAE,OAAO,GAAG,IAAI,CAAC;IAExC,OAAO,CAAC,MAAM,EAAE,MAAM,GAAG,IAAI,CAAC;CAC/B"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/web/tools/GestureHandlerOrchestrator.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/web/tools/GestureHandlerOrchestrator.d.ts.map
new file mode 100644
index 0000000..5a2c6a9
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/web/tools/GestureHandlerOrchestrator.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"GestureHandlerOrchestrator.d.ts","sourceRoot":"","sources":["../../../../src/web/tools/GestureHandlerOrchestrator.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,KAAK,EAAE,MAAM,aAAa,CAAC;AAEpC,OAAO,KAAK,eAAe,MAAM,6BAA6B,CAAC;AAG/D,MAAM,CAAC,OAAO,OAAO,0BAA0B;IAC7C,OAAO,CAAC,MAAM,CAAC,SAAS,CAA6B;IAErD,OAAO,CAAC,eAAe,CAAyB;IAChD,OAAO,CAAC,gBAAgB,CAAyB;IACjD,OAAO,CAAC,oBAAoB,CAA0B;IAEtD,OAAO,CAAC,uBAAuB,CAAK;IACpC,OAAO,CAAC,eAAe,CAAK;IAI5B,OAAO;IAEP,OAAO,CAAC,+BAA+B;IAMvC,OAAO,CAAC,YAAY;IAOb,6BAA6B,CAAC,OAAO,EAAE,eAAe,GAAG,IAAI;IAcpE,OAAO,CAAC,uBAAuB;IAiB/B,OAAO,CAAC,wBAAwB;IAWhC,OAAO,CAAC,kCAAkC;IAa1C,OAAO,CAAC,WAAW;IAgCnB,OAAO,CAAC,cAAc;IAQtB,OAAO,CAAC,uBAAuB;IAoBxB,oBAAoB,CACzB,OAAO,EAAE,eAAe,EACxB,QAAQ,EAAE,KAAK,EACf,QAAQ,EAAE,KAAK,EACf,cAAc,CAAC,EAAE,OAAO,GACvB,IAAI;IA8DP,OAAO,CAAC,UAAU;IAuClB,OAAO,CAAC,kBAAkB;IAYnB,yBAAyB,CAAC,OAAO,EAAE,eAAe,GAAG,IAAI;IAYhE,OAAO,CAAC,yBAAyB;IAWjC,OAAO,CAAC,oBAAoB;IAW5B,OAAO,CAAC,0BAA0B;IAyBlC,OAAO,CAAC,YAAY;IAuBpB,OAAO,CAAC,UAAU;IAYX,yBAAyB,CAAC,cAAc,EAAE,eAAe,GAAG,IAAI;IAwBvE,WAAkB,QAAQ,IAAI,0BAA0B,CAMvD;CACF"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/web/tools/GestureHandlerWebDelegate.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/web/tools/GestureHandlerWebDelegate.d.ts.map
new file mode 100644
index 0000000..351b21e
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/web/tools/GestureHandlerWebDelegate.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"GestureHandlerWebDelegate.d.ts","sourceRoot":"","sources":["../../../../src/web/tools/GestureHandlerWebDelegate.ts"],"names":[],"mappings":"AACA,OAAO,KAAK,eAAe,MAAM,6BAA6B,CAAC;AAC/D,OAAO,EACL,sBAAsB,EACtB,aAAa,EACd,MAAM,0BAA0B,CAAC;AAKlC,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAUvC,qBAAa,yBACX,YAAW,sBAAsB,CAAC,WAAW,EAAE,eAAe,CAAC;IAE/D,OAAO,CAAC,aAAa,CAAS;IAC9B,OAAO,CAAC,KAAK,CAAe;IAE5B,OAAO,CAAC,cAAc,CAAmB;IACzC,OAAO,CAAC,aAAa,CAA+B;IACpD,OAAO,CAAC,iBAAiB,CAGvB;IAEF,IAAI,CAAC,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,eAAe,GAAG,IAAI;IAgCrD,iBAAiB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE;QAAE,CAAC,EAAE,MAAM,CAAC;QAAC,CAAC,EAAE,MAAM,CAAA;KAAE,GAAG,OAAO;IAI9D,WAAW,IAAI,aAAa;IAW5B,KAAK,IAAI,IAAI;IAMb,cAAc;IAYd,OAAO,CAAC,wBAAwB;IAQhC,OAAO,CAAC,uBAAuB;IAQ/B,OAAO,CAAC,0BAA0B;IAQlC,OAAO,CAAC,kBAAkB;IAI1B,OAAO,CAAC,iBAAiB;IAIzB,OAAO,CAAC,aAAa;IAYrB,OAAO,CAAC,cAAc;IAatB,OAAO,CAAC,cAAc;IAUtB,eAAe,CAAC,OAAO,EAAE,OAAO,GAAG,IAAI;IAoBvC,OAAO,IAAI,IAAI;IAIf,UAAU,IAAI,IAAI;IAWlB,KAAK,IAAI,IAAI;IAIb,QAAQ,IAAI,IAAI;IAIhB,MAAM,IAAI,IAAI;IAIP,OAAO,CAAC,MAAM,EAAE,MAAM,GAAG,IAAI;IAQpC,IAAW,IAAI,IAGQ,WAAW,CADjC;IACD,IAAW,IAAI,CAAC,KAAK,EAAE,WAAW,EAEjC;CACF"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/web/tools/InteractionManager.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/web/tools/InteractionManager.d.ts.map
new file mode 100644
index 0000000..c50757a
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/web/tools/InteractionManager.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"InteractionManager.d.ts","sourceRoot":"","sources":["../../../../src/web/tools/InteractionManager.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,eAAe,MAAM,6BAA6B,CAAC;AAC/D,OAAO,EAAE,MAAM,EAAW,MAAM,eAAe,CAAC;AAEhD,MAAM,CAAC,OAAO,OAAO,kBAAkB;IACrC,OAAO,CAAC,MAAM,CAAC,SAAS,CAAqB;IAC7C,OAAO,CAAC,QAAQ,CAAC,gBAAgB,CAAoC;IACrE,OAAO,CAAC,QAAQ,CAAC,qBAAqB,CAAoC;IAC1E,OAAO,CAAC,QAAQ,CAAC,uBAAuB,CAAoC;IAI5E,OAAO;IAEA,qBAAqB,CAAC,OAAO,EAAE,eAAe,EAAE,MAAM,EAAE,MAAM;IA6C9D,2BAA2B,CAChC,OAAO,EAAE,eAAe,EACxB,YAAY,EAAE,eAAe,GAC5B,OAAO;IAYH,6BAA6B,CAClC,OAAO,EAAE,eAAe,EACxB,YAAY,EAAE,eAAe,GAC5B,OAAO;IAWH,oCAAoC,CACzC,OAAO,EAAE,eAAe,EACxB,YAAY,EAAE,eAAe,GAC5B,OAAO;IAYH,0BAA0B,CAC/B,QAAQ,EAAE,eAAe,EACzB,YAAY,EAAE,eAAe,GAC5B,OAAO;IAUH,8BAA8B,CAAC,UAAU,EAAE,MAAM,GAAG,IAAI;IAMxD,KAAK;IAMZ,WAAkB,QAAQ,IAAI,kBAAkB,CAM/C;CACF"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/web/tools/KeyboardEventManager.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/web/tools/KeyboardEventManager.d.ts.map
new file mode 100644
index 0000000..79f2882
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/web/tools/KeyboardEventManager.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"KeyboardEventManager.d.ts","sourceRoot":"","sources":["../../../../src/web/tools/KeyboardEventManager.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AACzD,OAAO,YAAY,MAAM,gBAAgB,CAAC;AAG1C,MAAM,CAAC,OAAO,OAAO,oBAAqB,SAAQ,YAAY,CAAC,WAAW,CAAC;IACzE,OAAO,CAAC,MAAM,CAAC,cAAc,CAAkB;IAC/C,OAAO,CAAC,MAAM,CAAC,eAAe,CAAW;IACzC,OAAO,CAAC,SAAS,CAAS;IAC1B,OAAO,CAAC,MAAM,CAAC,yBAAyB,CAAS;IACjD,OAAO,CAAC,MAAM,CAAC,SAAS,CAAwC;IAEhE,OAAO,CAAC,MAAM,CAAC,mBAAmB,CAYhC;IAEF,OAAO,CAAC,eAAe,CAcrB;IAEF,OAAO,CAAC,OAAO,CASb;IAEF,OAAO,CAAC,aAAa;IAuBd,iBAAiB,IAAI,IAAI;IAezB,mBAAmB,IAAI,IAAI;IAelC,SAAS,CAAC,QAAQ,CAChB,KAAK,EAAE,aAAa,EACpB,SAAS,EAAE,UAAU,GACpB,YAAY;CAwBhB"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/web/tools/LeastSquareSolver.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/web/tools/LeastSquareSolver.d.ts.map
new file mode 100644
index 0000000..26cb063
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/web/tools/LeastSquareSolver.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"LeastSquareSolver.d.ts","sourceRoot":"","sources":["../../../../src/web/tools/LeastSquareSolver.ts"],"names":[],"mappings":"AAwEA,cAAM,aAAa;IAKV,YAAY,EAAE,MAAM,EAAE,CAAC;gBAKlB,MAAM,EAAE,MAAM;CAG3B;AAKD,MAAM,CAAC,OAAO,OAAO,iBAAiB;IAEpC,OAAO,CAAC,CAAC,CAAW;IAEpB,OAAO,CAAC,CAAC,CAAW;IAEpB,OAAO,CAAC,CAAC,CAAW;gBAKR,CAAC,EAAE,MAAM,EAAE,EAAE,CAAC,EAAE,MAAM,EAAE,EAAE,CAAC,EAAE,MAAM,EAAE;IAS1C,KAAK,CAAC,MAAM,EAAE,MAAM,GAAG,aAAa,GAAG,IAAI;CAuEnD"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/web/tools/NodeManager.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/web/tools/NodeManager.d.ts.map
new file mode 100644
index 0000000..65a23df
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/web/tools/NodeManager.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"NodeManager.d.ts","sourceRoot":"","sources":["../../../../src/web/tools/NodeManager.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,iBAAiB,CAAC;AAC1C,OAAO,EAAE,QAAQ,EAAE,MAAM,aAAa,CAAC;AACvC,OAAO,KAAK,eAAe,MAAM,6BAA6B,CAAC;AAG/D,MAAM,CAAC,OAAO,CAAC,QAAQ,OAAO,WAAW;IACvC,OAAO,CAAC,MAAM,CAAC,QAAQ,CAGhB;WAEO,UAAU,CAAC,GAAG,EAAE,MAAM,GAAG,eAAe;WAQxC,oBAAoB,CAChC,UAAU,EAAE,MAAM,EAClB,OAAO,EAAE,YAAY,CAAC,OAAO,CAAC,OAAO,QAAQ,CAAC,CAAC,GAC9C,IAAI;WAWO,kBAAkB,CAAC,UAAU,EAAE,MAAM,GAAG,IAAI;IAW1D,WAAkB,KAAK;;MAEtB;CACF"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/web/tools/PointerEventManager.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/web/tools/PointerEventManager.d.ts.map
new file mode 100644
index 0000000..78a1adc
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/web/tools/PointerEventManager.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"PointerEventManager.d.ts","sourceRoot":"","sources":["../../../../src/web/tools/PointerEventManager.ts"],"names":[],"mappings":"AAAA,OAAO,YAAY,MAAM,gBAAgB,CAAC;AAE1C,OAAO,EAAE,YAAY,EAAE,UAAU,EAAS,MAAM,eAAe,CAAC;AAWhE,MAAM,CAAC,OAAO,OAAO,mBAAoB,SAAQ,YAAY,CAAC,WAAW,CAAC;IACxE,OAAO,CAAC,eAAe,CAAqB;IAC5C,OAAO,CAAC,QAAQ,CAAC,kBAAkB,CAAkC;IACrE,OAAO,CAAC,YAAY,CAAQ;gBAEhB,IAAI,EAAE,WAAW;IAe7B,OAAO,CAAC,mBAAmB,CAqBzB;IAEF,OAAO,CAAC,iBAAiB,CAyBvB;IAEF,OAAO,CAAC,mBAAmB,CAoDzB;IAEF,OAAO,CAAC,qBAAqB,CAO3B;IAEF,OAAO,CAAC,oBAAoB,CAI1B;IAEF,OAAO,CAAC,oBAAoB,CAI1B;IAEF,OAAO,CAAC,0BAA0B,CAWhC;IAEK,iBAAiB,IAAI,IAAI;IAkBzB,mBAAmB,IAAI,IAAI;IAalC,SAAS,CAAC,QAAQ,CAAC,KAAK,EAAE,YAAY,EAAE,SAAS,EAAE,UAAU,GAAG,YAAY;IAmBrE,YAAY,IAAI,IAAI;CAI5B"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/web/tools/PointerTracker.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/web/tools/PointerTracker.d.ts.map
new file mode 100644
index 0000000..eb1859f
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/web/tools/PointerTracker.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"PointerTracker.d.ts","sourceRoot":"","sources":["../../../../src/web/tools/PointerTracker.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;AAGpD,MAAM,WAAW,cAAc;IAC7B,eAAe,EAAE,KAAK,CAAC;IACvB,cAAc,EAAE,KAAK,CAAC;IACtB,SAAS,EAAE,MAAM,CAAC;IAClB,SAAS,EAAE,MAAM,CAAC;IAClB,SAAS,EAAE,MAAM,CAAC;CACnB;AAID,MAAM,CAAC,OAAO,OAAO,cAAc;IACjC,OAAO,CAAC,eAAe,CAAyB;IAChD,OAAO,CAAC,QAAQ,CAAC,gBAAgB,CAG7B;IAEJ,OAAO,CAAC,cAAc,CAAkD;IAExE,OAAO,CAAC,kBAAkB,CAAS;IAEnC,OAAO,CAAC,sBAAsB,CAAyB;IACvD,OAAO,CAAC,sBAAsB,CAAyB;;IAUhD,YAAY,CAAC,KAAK,EAAE,YAAY,GAAG,IAAI;IAsBvC,iBAAiB,CAAC,SAAS,EAAE,MAAM,GAAG,IAAI;IAK1C,KAAK,CAAC,KAAK,EAAE,YAAY,GAAG,IAAI;IAyBvC,OAAO,CAAC,eAAe;IASvB,OAAO,CAAC,mBAAmB;IAOpB,qBAAqB,CAAC,YAAY,EAAE,MAAM,GAAG,MAAM;IAUnD,WAAW,CAAC,SAAS,EAAE,MAAM;;;;IAW7B,qBAAqB,CAAC,SAAS,CAAC,EAAE,MAAM;IAKxC,qBAAqB,CAAC,SAAS,CAAC,EAAE,MAAM;IAUxC,wBAAwB;;;;IAcxB,wBAAwB;;;;IAcxB,oBAAoB,CAAC,cAAc,CAAC,EAAE,MAAM;;;;IAa5C,oBAAoB,CAAC,cAAc,CAAC,EAAE,MAAM;;;;IAa5C,YAAY,IAAI,IAAI;WAUb,mBAAmB,CAC/B,UAAU,EAAE,MAAM,EAAE,EACpB,UAAU,EAAE,MAAM,EAAE,GACnB,OAAO;IAIV,IAAW,oBAAoB,IAAI,MAAM,CAExC;IAED,IAAW,kBAAkB,aAQ5B;IAED,IAAW,eAAe,gCAEzB;CACF"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/web/tools/Vector.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/web/tools/Vector.d.ts.map
new file mode 100644
index 0000000..cc59d08
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/web/tools/Vector.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"Vector.d.ts","sourceRoot":"","sources":["../../../../src/web/tools/Vector.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,kBAAkB,EAAE,UAAU,EAAE,MAAM,kBAAkB,CAAC;AAElE,OAAO,cAAc,MAAM,kBAAkB,CAAC;AAE9C,MAAM,CAAC,OAAO,OAAO,MAAM;IACzB,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;IACnB,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;IACnB,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC;IACvB,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC;IACvB,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC;gBAEhB,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,MAAM;IAYhC,MAAM,CAAC,aAAa,CAAC,SAAS,EAAE,UAAU,GAAG,kBAAkB,GAAG,MAAM;IAIxE,MAAM,CAAC,YAAY,CAAC,OAAO,EAAE,cAAc,EAAE,SAAS,EAAE,MAAM;IAK9D,IAAW,SAAS,WAEnB;IAED,iBAAiB,CAAC,MAAM,EAAE,MAAM;IAIhC,SAAS,CAAC,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM;CAG5C"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/web/tools/VelocityTracker.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/web/tools/VelocityTracker.d.ts.map
new file mode 100644
index 0000000..2fe3fca
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/web/tools/VelocityTracker.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"VelocityTracker.d.ts","sourceRoot":"","sources":["../../../../src/web/tools/VelocityTracker.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAE,MAAM,eAAe,CAAC;AAI7C,MAAM,CAAC,OAAO,OAAO,eAAe;IAClC,OAAO,CAAC,oCAAoC,CAAM;IAClD,OAAO,CAAC,WAAW,CAAM;IACzB,OAAO,CAAC,mBAAmB,CAAO;IAClC,OAAO,CAAC,aAAa,CAAK;IAE1B,OAAO,CAAC,OAAO,CAA+B;;IAMvC,GAAG,CAAC,KAAK,EAAE,YAAY,GAAG,IAAI;IAUrC,OAAO,CAAC,mBAAmB;IA4D3B,IAAW,QAAQ,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,CAMtC;IAEM,KAAK,IAAI,IAAI;CAGrB"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/web/tools/WheelEventManager.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/web/tools/WheelEventManager.d.ts.map
new file mode 100644
index 0000000..ee01716
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/web/tools/WheelEventManager.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"WheelEventManager.d.ts","sourceRoot":"","sources":["../../../../src/web/tools/WheelEventManager.ts"],"names":[],"mappings":"AAAA,OAAO,YAAY,MAAM,gBAAgB,CAAC;AAC1C,OAAO,EAAE,YAAY,EAAc,MAAM,eAAe,CAAC;AAGzD,MAAM,CAAC,OAAO,OAAO,iBAAkB,SAAQ,YAAY,CAAC,WAAW,CAAC;IACtE,OAAO,CAAC,UAAU,CAAkB;IAEpC,OAAO,CAAC,UAAU,CAEhB;IAEF,OAAO,CAAC,aAAa,CAMnB;IAEK,iBAAiB,IAAI,IAAI;IAKzB,mBAAmB,IAAI,IAAI;IAKlC,SAAS,CAAC,QAAQ,CAAC,KAAK,EAAE,UAAU,GAAG,YAAY;IAe5C,YAAY,IAAI,IAAI;CAG5B"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/web/utils.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/web/utils.d.ts.map
new file mode 100644
index 0000000..38a8a27
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/web/utils.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"utils.d.ts","sourceRoot":"","sources":["../../../src/web/utils.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAC;AAC7C,OAAO,KAAK,EACV,iBAAiB,EACjB,KAAK,EACL,UAAU,EACV,MAAM,EACP,MAAM,cAAc,CAAC;AAEtB,wBAAgB,iBAAiB,CAAC,IAAI,EAAE,WAAW,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,KAAK,GAAG,OAAO,CAI7E;AAED,eAAO,MAAM,kBAAkB,0BAK7B,CAAC;AAEH,eAAO,MAAM,QAAQ,GAAI,SAAS,MAAM,WAA8B,CAAC;AAEvE,eAAO,MAAM,eAAe,GAAI,SAAS,MAAM,WACd,CAAC;AAElC,wBAAgB,kBAAkB,CAAC,IAAI,EAAE,WAAW;;;EAkCnD;AAED,wBAAgB,oBAAoB,CAClC,KAAK,EAAE,YAAY,GAClB,UAAU,GAAG,SAAS,CAsDxB;AAqHD,eAAO,MAAM,aAAa,aAqBxB,CAAC;AAWH,wBAAgB,cAAc,CAAC,OAAO,EAAE,MAAM,GAAG,iBAAiB,WAOjE;AAOD,wBAAgB,WAAW,CAAC,IAAI,EAAE,GAAG,WAWpC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/web_hammer/DiscreteGestureHandler.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/web_hammer/DiscreteGestureHandler.d.ts.map
new file mode 100644
index 0000000..9aaf292
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/web_hammer/DiscreteGestureHandler.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"DiscreteGestureHandler.d.ts","sourceRoot":"","sources":["../../../src/web_hammer/DiscreteGestureHandler.ts"],"names":[],"mappings":"AAEA,OAAO,cAAc,MAAM,kBAAkB,CAAC;AAG9C,uBAAe,sBAAuB,SAAQ,cAAc;IAC1D,IAAI,UAAU,YAEb;IAED,IAAI,0BAA0B,YAE7B;IAED,6BAA6B,CAC3B,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,EAAE,GAAG,EAC7B,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,uBAAuB,EAAE,EAAE,GAAG;IAiBnE,oBAAoB,CAAC,EAAE,MAAM,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG;;;;;;IAY9C,wBAAwB,CACtB,EACE,WAAW,EACX,WAAW,EACX,SAAS,EACT,SAAS,EACT,SAAS,EACT,uBAAuB,GACxB,EAAE,GAAG,EACN,WAAW,EAAE,GAAG,EAChB,EAAE,WAAW,EAAE,aAAa,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,EAAE,GAAG;;;;;;;CAwB9D;AAED,eAAe,sBAAsB,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/web_hammer/DraggingGestureHandler.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/web_hammer/DraggingGestureHandler.d.ts.map
new file mode 100644
index 0000000..9ba4cfa
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/web_hammer/DraggingGestureHandler.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"DraggingGestureHandler.d.ts","sourceRoot":"","sources":["../../../src/web_hammer/DraggingGestureHandler.ts"],"names":[],"mappings":"AAEA,OAAO,cAAc,EAAE,EAAE,cAAc,EAAE,MAAM,kBAAkB,CAAC;AAGlE,uBAAe,sBAAuB,SAAQ,cAAc;IAC1D,IAAI,0BAA0B,YAE7B;IAED,oBAAoB,CAAC,EACnB,MAAM,EACN,MAAM,EACN,SAAS,EACT,SAAS,EACT,MAAM,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GACjB,EAAE,cAAc;;;;;;;;;;CAelB;AAED,eAAe,sBAAsB,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/web_hammer/Errors.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/web_hammer/Errors.d.ts.map
new file mode 100644
index 0000000..c350b15
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/web_hammer/Errors.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"Errors.d.ts","sourceRoot":"","sources":["../../../src/web_hammer/Errors.ts"],"names":[],"mappings":"AAAA,qBAAa,gBAAiB,SAAQ,KAAK;gBAC7B,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,YAAY,EAAE,MAAM;CAK/D"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/web_hammer/FlingGestureHandler.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/web_hammer/FlingGestureHandler.d.ts.map
new file mode 100644
index 0000000..da56066
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/web_hammer/FlingGestureHandler.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"FlingGestureHandler.d.ts","sourceRoot":"","sources":["../../../src/web_hammer/FlingGestureHandler.ts"],"names":[],"mappings":"AAMA,OAAO,sBAAsB,MAAM,0BAA0B,CAAC;AAE9D,OAAO,EAAE,cAAc,EAAE,MAAM,kBAAkB,CAAC;AAElD,cAAM,mBAAoB,SAAQ,sBAAsB;IACtD,IAAI,IAAI,WAEP;IAED,IAAI,kBAAkB,0BAErB;IAED,kBAAkB,CAAC,KAAK,EAAE,cAAc;IAgBxC,UAAU,CAAC,EAAE,EAAE,cAAc;IAwB7B,eAAe;;;;IAQf,mBAAmB,CAAC,SAAS,EAAE,MAAM;IAkBrC,YAAY;IAwBZ,wBAAwB,CACtB,EAAE,gBAAgB,EAAE,EAAE,GAAG,EACzB,WAAW,EAAE,GAAG,EAChB,EAAE,WAAW,EAAE,aAAa,EAAE,EAAE,GAAG;;;;;;;IASrC,mBAAmB,CAAC,EAAE,gBAAoB,EAAE,SAAS,EAAE,GAAG,KAAK,EAAE,EAAE,GAAG;;;;;;;;;;;;;;;;;;;;;CAUvE;AAED,eAAe,mBAAmB,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/web_hammer/GestureHandler.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/web_hammer/GestureHandler.d.ts.map
new file mode 100644
index 0000000..fdc0383
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/web_hammer/GestureHandler.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"GestureHandler.d.ts","sourceRoot":"","sources":["../../../src/web_hammer/GestureHandler.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/web_hammer/IndiscreteGestureHandler.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/web_hammer/IndiscreteGestureHandler.d.ts.map
new file mode 100644
index 0000000..66614af
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/web_hammer/IndiscreteGestureHandler.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"IndiscreteGestureHandler.d.ts","sourceRoot":"","sources":["../../../src/web_hammer/IndiscreteGestureHandler.ts"],"names":[],"mappings":"AAAA,OAAO,cAAc,MAAM,kBAAkB,CAAC;AAE9C;;GAEG;AACH,uBAAe,wBAAyB,SAAQ,cAAc;IAC5D,IAAI,0BAA0B,YAE7B;IAED,mBAAmB,CAAC,EAAE,WAAe,EAAE,WAAe,EAAE,GAAG,KAAK,EAAE;;;;KAAA;;;;;;;;;;;;;;;;;;;;;IAQlE,wBAAwB,CACtB,EAAE,WAAW,EAAE,WAAW,EAAE,EAAE,GAAG,EACjC,WAAW,EAAE,GAAG,EAChB,EAAE,WAAW,EAAE,aAAa,EAAE,EAAE,GAAG;;;;;;;CAUtC;AACD,eAAe,wBAAwB,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/web_hammer/LongPressGestureHandler.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/web_hammer/LongPressGestureHandler.d.ts.map
new file mode 100644
index 0000000..c132a5c
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/web_hammer/LongPressGestureHandler.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"LongPressGestureHandler.d.ts","sourceRoot":"","sources":["../../../src/web_hammer/LongPressGestureHandler.ts"],"names":[],"mappings":"AAKA,OAAO,mBAAmB,MAAM,uBAAuB,CAAC;AAExD,OAAO,EAAE,MAAM,EAAE,MAAM,kBAAkB,CAAC;AAC1C,OAAO,EAAE,gBAAgB,EAAE,MAAM,aAAa,CAAC;AAE/C,cAAM,uBAAwB,SAAQ,mBAAmB;IACvD,IAAI,aAAa,IAAI,MAAM,CAG1B;IAED,IAAI,OAAO,uBAGV;IAED,iCAAiC,CAAC,EAAE,SAAS,EAAE,EAAE,MAAM;IAIvD,SAAS;;;;;;;;;;;;;;;;;;;;;;;;IAYT,eAAe;;;;IAQf,QAAQ,CAAC,IAAI,EAAE,MAAM,OAAO,gBAAgB;CAQ7C;AAED,eAAe,uBAAuB,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/web_hammer/NativeViewGestureHandler.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/web_hammer/NativeViewGestureHandler.d.ts.map
new file mode 100644
index 0000000..bf0e475
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/web_hammer/NativeViewGestureHandler.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"NativeViewGestureHandler.d.ts","sourceRoot":"","sources":["../../../src/web_hammer/NativeViewGestureHandler.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,cAAc,EAAE,MAAM,kBAAkB,CAAC;AAElD,OAAO,mBAAmB,MAAM,uBAAuB,CAAC;AAGxD,cAAM,wBAAyB,SAAQ,mBAAmB;IACxD,IAAI,QAAQ,YAEX;IAED,UAAU,CAAC,EAAE,EAAE,cAAc;CAiC9B;AAED,eAAe,wBAAwB,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/web_hammer/NodeManager.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/web_hammer/NodeManager.d.ts.map
new file mode 100644
index 0000000..3ccba9c
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/web_hammer/NodeManager.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"NodeManager.d.ts","sourceRoot":"","sources":["../../../src/web_hammer/NodeManager.ts"],"names":[],"mappings":"AAAA,eAAO,MAAM,QAAQ,EAAE,MAAM,CAAC,MAAM,EAAE,GAAG,CAAM,CAAC;AAEhD,wBAAgB,UAAU,CAAC,GAAG,EAAE,MAAM,OAMrC;AAED,wBAAgB,oBAAoB,CAAC,UAAU,EAAE,MAAM,EAAE,OAAO,EAAE,GAAG,QAOpE;AAED,wBAAgB,kBAAkB,CAAC,UAAU,EAAE,MAAM,QASpD;AAED,wBAAgB,QAAQ;;EAEvB"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/web_hammer/PanGestureHandler.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/web_hammer/PanGestureHandler.d.ts.map
new file mode 100644
index 0000000..d7bfa07
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/web_hammer/PanGestureHandler.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"PanGestureHandler.d.ts","sourceRoot":"","sources":["../../../src/web_hammer/PanGestureHandler.ts"],"names":[],"mappings":"AAEA,OAAO,EACL,QAAQ,EAGT,MAAM,aAAa,CAAC;AACrB,OAAO,sBAAsB,MAAM,0BAA0B,CAAC;AAE9D,OAAO,EAAE,KAAK,EAAE,MAAM,UAAU,CAAC;AAEjC,OAAO,EAAE,MAAM,EAAE,cAAc,EAAE,MAAM,kBAAkB,CAAC;AAC1D,cAAM,iBAAkB,SAAQ,sBAAsB;IACpD,IAAI,IAAI,WAEP;IAED,IAAI,kBAAkB,wBAErB;IAED,eAAe;;;;IAOf,QAAQ,CAAC,IAAI,EAAE,MAAM,OAAO,QAAQ;IAYpC,YAAY;IA0DZ,SAAS;;;;;;;;;;;;;;;;;;;;;IAWT,6BAA6B,CAC3B,EAAE,MAAM,EAAE,MAAM,EAAE,EAAE,cAAc,EAClC,QAAQ,EAAE,GAAG;IAYf,iCAAiC,CAC/B,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,EAAE,GAAG,EACjC,QAAQ,EAAE,GAAG;IAqBf,wBAAwB,CAAC,EACvB,aAAa,EACb,KAAK,EACL,aAAa,GACd,EAAE;QACD,aAAa,EAAE,MAAM,CAAC;QACtB,aAAa,EAAE,MAAM,CAAC;QACtB,KAAK,EAAE,MAAM,CAAC;KACf;IAsBD,iCAAiC,CAC/B,QAAQ,EAAE,MAAM,GAAG;QAAE,YAAY,CAAC,EAAE,MAAM,CAAC;QAAC,YAAY,CAAC,EAAE,MAAM,CAAA;KAAE;IAcrE,wBAAwB,CACtB,KAAK,EAAE,GAAG,EACV,WAAW,EAAE,GAAG,EAChB,SAAS,EAAE,cAAc,GAAG;QAAE,aAAa,EAAE,MAAM,CAAA;KAAE;;;;;;;CA6BxD;AAED,eAAe,iBAAiB,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/web_hammer/PinchGestureHandler.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/web_hammer/PinchGestureHandler.d.ts.map
new file mode 100644
index 0000000..029f23d
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/web_hammer/PinchGestureHandler.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"PinchGestureHandler.d.ts","sourceRoot":"","sources":["../../../src/web_hammer/PinchGestureHandler.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,cAAc,EAAE,MAAM,kBAAkB,CAAC;AAElD,OAAO,wBAAwB,MAAM,4BAA4B,CAAC;AAElE,cAAM,mBAAoB,SAAQ,wBAAwB;IACxD,IAAI,IAAI,WAEP;IAED,IAAI,kBAAkB,0BAErB;IAED,oBAAoB,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,EAAE,cAAc;;;;;;CAQjE;AAED,eAAe,mBAAmB,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/web_hammer/PressGestureHandler.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/web_hammer/PressGestureHandler.d.ts.map
new file mode 100644
index 0000000..6694a6c
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/web_hammer/PressGestureHandler.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"PressGestureHandler.d.ts","sourceRoot":"","sources":["../../../src/web_hammer/PressGestureHandler.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,KAAK,EAAE,MAAM,UAAU,CAAC;AACjC,OAAO,EAGL,gBAAgB,EACjB,MAAM,aAAa,CAAC;AACrB,OAAO,sBAAsB,MAAM,0BAA0B,CAAC;AAC9D,OAAO,EAAE,MAAM,EAAE,cAAc,EAAE,MAAM,kBAAkB,CAAC;AAG1D,cAAM,mBAAoB,SAAQ,sBAAsB;IACtD,OAAO,CAAC,mBAAmB,CAAM;IACjC,OAAO,CAAC,YAAY,CAA+B;IACnD,IAAI,IAAI,WAEP;IAED,IAAI,aAAa,QAGhB;IAED,IAAI,OAAO,uBAEV;IAED,IAAI,kBAAkB,0BAErB;IAED,kBAAkB,UAAQ;IAE1B,mBAAmB,CAAC,SAAS,EAAE,cAAc;IAM7C,iCAAiC,CAAC,EAChC,uBAAuB,EACvB,SAAS,GACV,EAAE,MAAM,GAAG;QAAE,uBAAuB,EAAE,OAAO,CAAA;KAAE;IAIhD,QAAQ,CAAC,IAAI,EAAE,MAAM,OAAO,gBAAgB,GAAG,KAAK;IASpD,SAAS;;;;;;;;;;;;;;;;;;;;;;;;IAYT,eAAe;;;;IAQf,kBAAkB,CAAC,EAAE,EAAE,cAAc;IAIrC,wBAAwB,CAAC,EAAE,WAAW,EAAE,EAAE,cAAc;IAKxD,cAAc,CAAC,EAAE,EAAE,cAAc;IAajC,uBAAuB,CAAC,EAAE,EAAE,cAAc;IAU1C,eAAe,CAAC,KAAK,EAAE,cAAc;IAOrC,UAAU,CAAC,EAAE,EAAE,cAAc;IAgC7B,mBAAmB,CAAC,EAClB,qBAA6B,EAC7B,oBAA4B,EAC5B,uBAA8B,EAC9B,aAA0B,EAC1B,OAAoB,EACpB,WAAe,EACf,WAAe,EACf,GAAG,KAAK,EACT;;;;;;;;;KAAA;;;;;;;;;;;;;;;;;;;;;CAYF;AACD,eAAe,mBAAmB,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/web_hammer/RotationGestureHandler.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/web_hammer/RotationGestureHandler.d.ts.map
new file mode 100644
index 0000000..3759c9f
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/web_hammer/RotationGestureHandler.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"RotationGestureHandler.d.ts","sourceRoot":"","sources":["../../../src/web_hammer/RotationGestureHandler.ts"],"names":[],"mappings":"AAGA,OAAO,EAAE,cAAc,EAAE,MAAM,kBAAkB,CAAC;AAClD,OAAO,wBAAwB,MAAM,4BAA4B,CAAC;AAElE,cAAM,sBAAuB,SAAQ,wBAAwB;IAC3D,IAAI,IAAI,WAEP;IAED,IAAI,kBAAkB,2BAErB;IAED,oBAAoB,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,EAAE,cAAc;;;;;;CAQpE;AACD,eAAe,sBAAsB,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/web_hammer/TapGestureHandler.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/web_hammer/TapGestureHandler.d.ts.map
new file mode 100644
index 0000000..1a7bd70
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/web_hammer/TapGestureHandler.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"TapGestureHandler.d.ts","sourceRoot":"","sources":["../../../src/web_hammer/TapGestureHandler.ts"],"names":[],"mappings":"AAEA,OAAO,sBAAsB,MAAM,0BAA0B,CAAC;AAC9D,OAAO,EAAE,cAAc,EAAE,MAAM,kBAAkB,CAAC;AAGlD,cAAM,iBAAkB,SAAQ,sBAAsB;IACpD,OAAO,CAAC,mBAAmB,CAA+B;IAC1D,OAAO,CAAC,MAAM,CAAM;IACpB,OAAO,CAAC,cAAc,CAAM;IAC5B,IAAI,IAAI,WAEP;IAED,IAAI,kBAAkB,wBAErB;IAED,IAAI,UAAU,QAGb;IAED,mBAAmB,CAAC,SAAS,EAAE,cAAc;IAM7C,kBAAkB,CAAC,EAAE,EAAE,cAAc;IAMrC,eAAe,GAAI,IAAI,cAAc,UAWnC;IAEF,UAAU,CAAC,EAAE,EAAE,WAAW;IAkE1B,eAAe;;;;;;;IAgBf,mBAAmB,CAAC,EAClB,uBAA8B,EAC9B,SAAsB,EACtB,SAAsB,EACtB,YAAgB,EAChB,aAAmB,EACnB,UAAuB,EAEvB,aAA0B,EAC1B,OAAW,EACX,WAAe,EACf,WAAe,EACf,GAAG,KAAK,EACT;;;;;;;;;;;;KAAA;;;;;;;;;;;;;;;;;;;;;IAeD,cAAc,CAAC,GAAG,KAAK,EAAE,GAAG;IAM5B,cAAc,CAAC,QAAQ,EAAE,GAAG;CAM7B;AACD,eAAe,iBAAiB,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/web_hammer/constants.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/web_hammer/constants.d.ts.map
new file mode 100644
index 0000000..7e3484d
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/web_hammer/constants.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"constants.d.ts","sourceRoot":"","sources":["../../../src/web_hammer/constants.ts"],"names":[],"mappings":"AAIA,eAAO,MAAM,qBAAqB,MAAM,CAAC;AACzC,eAAO,MAAM,mCAAmC,KAAK,CAAC;AACtD,eAAO,MAAM,oCAAoC,MAAM,CAAC;AACxD,eAAO,MAAM,uCAAuC,IAAI,CAAC;AACzD,eAAO,MAAM,OAAO,QAAgB,CAAC;AAGrC,eAAO,MAAM,QAAQ;;;;;CAKX,CAAC;AAEX,eAAO,MAAM,SAAS;;;;;CAKrB,CAAC;AAEF,eAAO,MAAM,YAAY;;;;;CAKxB,CAAC;AAEF,eAAO,MAAM,gBAAgB;;;;;CAK5B,CAAC;AACF,eAAO,MAAM,oBAAoB;;;;;;;;;CAShC,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/lib/typescript/web_hammer/utils.d.ts.map b/node_modules/react-native-gesture-handler/lib/typescript/web_hammer/utils.d.ts.map
new file mode 100644
index 0000000..621e8c7
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/lib/typescript/web_hammer/utils.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"utils.d.ts","sourceRoot":"","sources":["../../../src/web_hammer/utils.ts"],"names":[],"mappings":"AACA,eAAO,MAAM,KAAK,GAAI,GAAG,OAAO,YAAoB,CAAC;AAGrD,eAAO,MAAM,aAAa,GAAI,GAAG,OAAO,YACG,CAAC;AAE5C,eAAO,MAAM,mBAAmB,GAAI,OAAO,MAAM,EAAE,OAAO,MAAM,KAAG,OAEA,CAAC;AACpE,eAAO,MAAM,UAAU,GAAI;;;CAAqB,WAAkB,CAAC;AACnE,eAAO,MAAM,mBAAmB,GAAI,OAAO,MAAM,EAAE,KAAK,MAAM,YACU,CAAC;AAEzE,wBAAgB,iBAAiB,CAC/B,MAAM,EAAE,MAAM,IAAI,EAClB,QAAQ,CAAC,EAAE,MAAM,GAAG,OAAO,iBAO5B"}
\ No newline at end of file
diff --git a/node_modules/react-native-gesture-handler/scripts/gesture_handler_utils.rb b/node_modules/react-native-gesture-handler/scripts/gesture_handler_utils.rb
new file mode 100644
index 0000000..c03ff83
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/scripts/gesture_handler_utils.rb
@@ -0,0 +1,25 @@
+def try_to_parse_react_native_package_json(node_modules_dir)
+    react_native_package_json_path = File.join(node_modules_dir, 'react-native/package.json')
+
+    if !File.exist?(react_native_package_json_path)
+        return nil
+    end
+
+    return JSON.parse(File.read(react_native_package_json_path))
+end
+
+def get_react_native_minor_version()
+    react_native_node_modules_dir = File.join(File.dirname(`cd "#{Pod::Config.instance.installation_root.to_s}" && node --print "require.resolve('react-native/package.json')"`), '..')
+    react_native_json = try_to_parse_react_native_package_json(react_native_node_modules_dir)
+
+    if react_native_json == nil
+        node_modules_dir = ENV["REACT_NATIVE_NODE_MODULES_DIR"]
+        react_native_json = try_to_parse_react_native_package_json(node_modules_dir)
+    end
+
+    if react_native_json == nil
+        raise '[react-native-gesture-handler] Unable to recognize your `react-native` version. Please set environmental variable with `react-native` location: `export REACT_NATIVE_NODE_MODULES_DIR="<path to react-native>" && pod install`.'
+    end
+
+    return react_native_json['version'].split('.')[1].to_i
+end
diff --git a/node_modules/react-native-gesture-handler/src/components/Pressable/StateMachine.tsx b/node_modules/react-native-gesture-handler/src/components/Pressable/StateMachine.tsx
new file mode 100644
index 0000000..7c47877
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/src/components/Pressable/StateMachine.tsx
@@ -0,0 +1,57 @@
+import { PressableEvent } from './PressableProps';
+
+export interface StateDefinition {
+  eventName: string;
+  callback?: (event: PressableEvent) => void;
+}
+
+class PressableStateMachine {
+  private states: StateDefinition[] | null;
+  private currentStepIndex: number;
+  private eventPayload: PressableEvent | null;
+
+  constructor() {
+    this.states = null;
+    this.currentStepIndex = 0;
+    this.eventPayload = null;
+  }
+
+  public setStates(states: StateDefinition[]) {
+    this.states = states;
+  }
+
+  public reset() {
+    this.currentStepIndex = 0;
+    this.eventPayload = null;
+  }
+
+  public handleEvent(eventName: string, eventPayload?: PressableEvent) {
+    if (!this.states) {
+      return;
+    }
+
+    const step = this.states[this.currentStepIndex];
+    this.eventPayload = eventPayload || this.eventPayload;
+
+    if (step.eventName !== eventName) {
+      if (this.currentStepIndex > 0) {
+        // retry with position at index 0
+        this.reset();
+        this.handleEvent(eventName, eventPayload);
+      }
+      return;
+    }
+
+    if (this.eventPayload && step.callback) {
+      step.callback(this.eventPayload);
+    }
+
+    this.currentStepIndex++;
+
+    if (this.currentStepIndex === this.states.length) {
+      this.reset();
+    }
+  }
+}
+
+export { PressableStateMachine };
diff --git a/node_modules/react-native-gesture-handler/src/components/Pressable/stateDefinitions.ts b/node_modules/react-native-gesture-handler/src/components/Pressable/stateDefinitions.ts
new file mode 100644
index 0000000..a761567
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/src/components/Pressable/stateDefinitions.ts
@@ -0,0 +1,125 @@
+import { Platform } from 'react-native';
+import { PressableEvent } from './PressableProps';
+import { StateDefinition } from './StateMachine';
+
+export enum StateMachineEvent {
+  NATIVE_BEGIN = 'nativeBegin',
+  NATIVE_START = 'nativeStart',
+  FINALIZE = 'finalize',
+  LONG_PRESS_TOUCHES_DOWN = 'longPressTouchesDown',
+}
+
+function getAndroidStatesConfig(
+  handlePressIn: (event: PressableEvent) => void,
+  handlePressOut: (event: PressableEvent) => void
+) {
+  return [
+    {
+      eventName: StateMachineEvent.NATIVE_BEGIN,
+    },
+    {
+      eventName: StateMachineEvent.LONG_PRESS_TOUCHES_DOWN,
+      callback: handlePressIn,
+    },
+    {
+      eventName: StateMachineEvent.FINALIZE,
+      callback: handlePressOut,
+    },
+  ];
+}
+
+function getIosStatesConfig(
+  handlePressIn: (event: PressableEvent) => void,
+  handlePressOut: (event: PressableEvent) => void
+) {
+  return [
+    {
+      eventName: StateMachineEvent.LONG_PRESS_TOUCHES_DOWN,
+    },
+    {
+      eventName: StateMachineEvent.NATIVE_START,
+      callback: handlePressIn,
+    },
+    {
+      eventName: StateMachineEvent.FINALIZE,
+      callback: handlePressOut,
+    },
+  ];
+}
+
+function getWebStatesConfig(
+  handlePressIn: (event: PressableEvent) => void,
+  handlePressOut: (event: PressableEvent) => void
+) {
+  return [
+    {
+      eventName: StateMachineEvent.NATIVE_BEGIN,
+    },
+    {
+      eventName: StateMachineEvent.NATIVE_START,
+    },
+    {
+      eventName: StateMachineEvent.LONG_PRESS_TOUCHES_DOWN,
+      callback: handlePressIn,
+    },
+    {
+      eventName: StateMachineEvent.FINALIZE,
+      callback: handlePressOut,
+    },
+  ];
+}
+
+function getMacosStatesConfig(
+  handlePressIn: (event: PressableEvent) => void,
+  handlePressOut: (event: PressableEvent) => void
+) {
+  return [
+    {
+      eventName: StateMachineEvent.LONG_PRESS_TOUCHES_DOWN,
+    },
+    {
+      eventName: StateMachineEvent.NATIVE_BEGIN,
+      callback: handlePressIn,
+    },
+    {
+      eventName: StateMachineEvent.NATIVE_START,
+    },
+    {
+      eventName: StateMachineEvent.FINALIZE,
+      callback: handlePressOut,
+    },
+  ];
+}
+
+function getUniversalStatesConfig(
+  handlePressIn: (event: PressableEvent) => void,
+  handlePressOut: (event: PressableEvent) => void
+) {
+  return [
+    {
+      eventName: StateMachineEvent.FINALIZE,
+      callback: (event: PressableEvent) => {
+        handlePressIn(event);
+        handlePressOut(event);
+      },
+    },
+  ];
+}
+
+export function getStatesConfig(
+  handlePressIn: (event: PressableEvent) => void,
+  handlePressOut: (event: PressableEvent) => void
+): StateDefinition[] {
+  if (Platform.OS === 'android') {
+    return getAndroidStatesConfig(handlePressIn, handlePressOut);
+  } else if (Platform.OS === 'ios') {
+    return getIosStatesConfig(handlePressIn, handlePressOut);
+  } else if (Platform.OS === 'web') {
+    return getWebStatesConfig(handlePressIn, handlePressOut);
+  } else if (Platform.OS === 'macos') {
+    return getMacosStatesConfig(handlePressIn, handlePressOut);
+  } else {
+    // Unknown platform - using minimal universal setup.
+    return getUniversalStatesConfig(handlePressIn, handlePressOut);
+  }
+}
diff --git a/node_modules/react-native-gesture-handler/src/components/ReanimatedSwipeable.tsx b/node_modules/react-native-gesture-handler/src/components/ReanimatedSwipeable.tsx
deleted file mode 100644
index dc785df..0000000
--- a/node_modules/react-native-gesture-handler/src/components/ReanimatedSwipeable.tsx
+++ /dev/null
@@ -1,789 +0,0 @@
-// Similarily to the DrawerLayout component this deserves to be put in a
-// separate repo. Although, keeping it here for the time being will allow us to
-// move faster and fix possible issues quicker
-
-import React, {
-  ForwardedRef,
-  forwardRef,
-  useCallback,
-  useImperativeHandle,
-  useMemo,
-} from 'react';
-import { GestureRef } from '../handlers/gestures/gesture';
-import { GestureObjects as Gesture } from '../handlers/gestures/gestureObjects';
-import { GestureDetector } from '../handlers/gestures/GestureDetector';
-import {
-  GestureStateChangeEvent,
-  GestureUpdateEvent,
-} from '../handlers/gestureHandlerCommon';
-import type { PanGestureHandlerProps } from '../handlers/PanGestureHandler';
-import type { PanGestureHandlerEventPayload } from '../handlers/GestureHandlerEventPayload';
-import Animated, {
-  ReduceMotion,
-  SharedValue,
-  interpolate,
-  measure,
-  runOnJS,
-  runOnUI,
-  useAnimatedRef,
-  useAnimatedStyle,
-  useSharedValue,
-  withSpring,
-} from 'react-native-reanimated';
-import {
-  I18nManager,
-  LayoutChangeEvent,
-  StyleProp,
-  StyleSheet,
-  View,
-  ViewStyle,
-} from 'react-native';
-
-const DRAG_TOSS = 0.05;
-
-type SwipeableExcludes = Exclude<
-  keyof PanGestureHandlerProps,
-  'onGestureEvent' | 'onHandlerStateChange'
->;
-
-enum SwipeDirection {
-  LEFT = 'left',
-  RIGHT = 'right',
-}
-
-export interface SwipeableProps
-  extends Pick<PanGestureHandlerProps, SwipeableExcludes> {
-  /**
-   * Enables two-finger gestures on supported devices, for example iPads with
-   * trackpads. If not enabled the gesture will require click + drag, with
-   * `enableTrackpadTwoFingerGesture` swiping with two fingers will also trigger
-   * the gesture.
-   */
-  enableTrackpadTwoFingerGesture?: boolean;
-
-  /**
-   * Specifies how much the visual interaction will be delayed compared to the
-   * gesture distance. e.g. value of 1 will indicate that the swipeable panel
-   * should exactly follow the gesture, 2 means it is going to be two times
-   * "slower".
-   */
-  friction?: number;
-
-  /**
-   * Distance from the left edge at which released panel will animate to the
-   * open state (or the open panel will animate into the closed state). By
-   * default it's a half of the panel's width.
-   */
-  leftThreshold?: number;
-
-  /**
-   * Distance from the right edge at which released panel will animate to the
-   * open state (or the open panel will animate into the closed state). By
-   * default it's a half of the panel's width.
-   */
-  rightThreshold?: number;
-
-  /**
-   * Distance that the panel must be dragged from the left edge to be considered
-   * a swipe. The default value is 10.
-   */
-  dragOffsetFromLeftEdge?: number;
-
-  /**
-   * Distance that the panel must be dragged from the right edge to be considered
-   * a swipe. The default value is 10.
-   */
-  dragOffsetFromRightEdge?: number;
-
-  /**
-   * Value indicating if the swipeable panel can be pulled further than the left
-   * actions panel's width. It is set to true by default as long as the left
-   * panel render method is present.
-   */
-  overshootLeft?: boolean;
-
-  /**
-   * Value indicating if the swipeable panel can be pulled further than the
-   * right actions panel's width. It is set to true by default as long as the
-   * right panel render method is present.
-   */
-  overshootRight?: boolean;
-
-  /**
-   * Specifies how much the visual interaction will be delayed compared to the
-   * gesture distance at overshoot. Default value is 1, it mean no friction, for
-   * a native feel, try 8 or above.
-   */
-  overshootFriction?: number;
-
-  /**
-   * Called when action panel gets open (either right or left).
-   */
-  onSwipeableOpen?: (
-    direction: SwipeDirection.LEFT | SwipeDirection.RIGHT
-  ) => void;
-
-  /**
-   * Called when action panel is closed.
-   */
-  onSwipeableClose?: (
-    direction: SwipeDirection.LEFT | SwipeDirection.RIGHT
-  ) => void;
-
-  /**
-   * Called when action panel starts animating on open (either right or left).
-   */
-  onSwipeableWillOpen?: (
-    direction: SwipeDirection.LEFT | SwipeDirection.RIGHT
-  ) => void;
-
-  /**
-   * Called when action panel starts animating on close.
-   */
-  onSwipeableWillClose?: (
-    direction: SwipeDirection.LEFT | SwipeDirection.RIGHT
-  ) => void;
-
-  /**
-   * Called when action panel starts being shown on dragging to open.
-   */
-  onSwipeableOpenStartDrag?: (
-    direction: SwipeDirection.LEFT | SwipeDirection.RIGHT
-  ) => void;
-
-  /**
-   * Called when action panel starts being shown on dragging to close.
-   */
-  onSwipeableCloseStartDrag?: (
-    direction: SwipeDirection.LEFT | SwipeDirection.RIGHT
-  ) => void;
-
-  /**
-   * `progress`: Equals `0` when `swipeable` is closed, `1` when `swipeable` is opened.
-   *  - When the element overshoots it's opened position the value tends towards `Infinity`.
-   *  - Goes back to `1` when `swipeable` is released.
-   *
-   * `translation`: a horizontal offset of the `swipeable` relative to its closed position.\
-   * `swipeableMethods`: provides an object exposing methods for controlling the `swipeable`.
-   *
-   * To support `rtl` flexbox layouts use `flexDirection` styling.
-   * */
-  renderLeftActions?: (
-    progress: SharedValue<number>,
-    translation: SharedValue<number>,
-    swipeableMethods: SwipeableMethods
-  ) => React.ReactNode;
-
-  /**
-   * `progress`: Equals `0` when `swipeable` is closed, `1` when `swipeable` is opened.
-   *  - When the element overshoots it's opened position the value tends towards `Infinity`.
-   *  - Goes back to `1` when `swipeable` is released.
-   *
-   * `translation`: a horizontal offset of the `swipeable` relative to its closed position.\
-   * `swipeableMethods`: provides an object exposing methods for controlling the `swipeable`.
-   *
-   * To support `rtl` flexbox layouts use `flexDirection` styling.
-   * */
-  renderRightActions?: (
-    progress: SharedValue<number>,
-    translation: SharedValue<number>,
-    swipeableMethods: SwipeableMethods
-  ) => React.ReactNode;
-
-  animationOptions?: Record<string, unknown>;
-
-  /**
-   * Style object for the container (`Animated.View`), for example to override
-   * `overflow: 'hidden'`.
-   */
-  containerStyle?: StyleProp<ViewStyle>;
-
-  /**
-   * Style object for the children container (`Animated.View`), for example to
-   * apply `flex: 1`
-   */
-  childrenContainerStyle?: StyleProp<ViewStyle>;
-
-  /**
-   * A gesture object or an array of gesture objects containing the configuration and callbacks to be
-   * used with the swipeable's gesture handler.
-   */
-  simultaneousWithExternalGesture?:
-    | Exclude<GestureRef, number>
-    | Exclude<GestureRef, number>[];
-}
-
-export interface SwipeableMethods {
-  close: () => void;
-  openLeft: () => void;
-  openRight: () => void;
-  reset: () => void;
-}
-
-const Swipeable = forwardRef<SwipeableMethods, SwipeableProps>(
-  function Swipeable(
-    props: SwipeableProps,
-    ref: ForwardedRef<SwipeableMethods>
-  ) {
-    const defaultProps = {
-      friction: 1,
-      overshootFriction: 1,
-      dragOffset: 10,
-      enableTrackpadTwoFingerGesture: false,
-    };
-
-    const {
-      leftThreshold,
-      rightThreshold,
-      enabled,
-      containerStyle,
-      childrenContainerStyle,
-      animationOptions,
-      overshootLeft,
-      overshootRight,
-      testID,
-      children,
-      enableTrackpadTwoFingerGesture = defaultProps.enableTrackpadTwoFingerGesture,
-      dragOffsetFromLeftEdge = defaultProps.dragOffset,
-      dragOffsetFromRightEdge = defaultProps.dragOffset,
-      friction = defaultProps.friction,
-      overshootFriction = defaultProps.overshootFriction,
-      onSwipeableOpenStartDrag,
-      onSwipeableCloseStartDrag,
-      onSwipeableWillOpen,
-      onSwipeableWillClose,
-      onSwipeableOpen,
-      onSwipeableClose,
-      renderLeftActions,
-      renderRightActions,
-      simultaneousWithExternalGesture,
-      ...remainingProps
-    } = props;
-
-    const rowState = useSharedValue<number>(0);
-
-    const userDrag = useSharedValue<number>(0);
-
-    const appliedTranslation = useSharedValue<number>(0);
-
-    const rowWidth = useSharedValue<number>(0);
-    const leftWidth = useSharedValue<number>(0);
-    const rightWidth = useSharedValue<number>(0);
-
-    const showLeftProgress = useSharedValue<number>(0);
-    const showRightProgress = useSharedValue<number>(0);
-
-    const updateAnimatedEvent = useCallback(() => {
-      'worklet';
-
-      const shouldOvershootLeft = overshootLeft ?? leftWidth.value > 0;
-      const shouldOvershootRight = overshootRight ?? rightWidth.value > 0;
-
-      const startOffset =
-        rowState.value === 1
-          ? leftWidth.value
-          : rowState.value === -1
-            ? -rightWidth.value
-            : 0;
-
-      const offsetDrag = userDrag.value / friction + startOffset;
-
-      appliedTranslation.value = interpolate(
-        offsetDrag,
-        [
-          -rightWidth.value - 1,
-          -rightWidth.value,
-          leftWidth.value,
-          leftWidth.value + 1,
-        ],
-        [
-          -rightWidth.value -
-            (shouldOvershootRight ? 1 / overshootFriction : 0),
-          -rightWidth.value,
-          leftWidth.value,
-          leftWidth.value + (shouldOvershootLeft ? 1 / overshootFriction : 0),
-        ]
-      );
-
-      showLeftProgress.value =
-        leftWidth.value > 0
-          ? interpolate(
-              appliedTranslation.value,
-              [-1, 0, leftWidth.value],
-              [0, 0, 1]
-            )
-          : 0;
-
-      showRightProgress.value =
-        rightWidth.value > 0
-          ? interpolate(
-              appliedTranslation.value,
-              [-rightWidth.value, 0, 1],
-              [1, 0, 0]
-            )
-          : 0;
-    }, [
-      appliedTranslation,
-      friction,
-      leftWidth,
-      overshootFriction,
-      rightWidth,
-      rowState,
-      showLeftProgress,
-      showRightProgress,
-      userDrag,
-      overshootLeft,
-      overshootRight,
-    ]);
-
-    const dispatchImmediateEvents = useCallback(
-      (fromValue: number, toValue: number) => {
-        'worklet';
-        if (toValue > 0 && onSwipeableWillOpen) {
-          runOnJS(onSwipeableWillOpen)(SwipeDirection.RIGHT);
-        } else if (toValue < 0 && onSwipeableWillOpen) {
-          runOnJS(onSwipeableWillOpen)(SwipeDirection.LEFT);
-        } else if (onSwipeableWillClose) {
-          runOnJS(onSwipeableWillClose)(
-            fromValue > 0 ? SwipeDirection.LEFT : SwipeDirection.RIGHT
-          );
-        }
-      },
-      [onSwipeableWillClose, onSwipeableWillOpen]
-    );
-
-    const dispatchEndEvents = useCallback(
-      (fromValue: number, toValue: number) => {
-        'worklet';
-        if (toValue > 0 && onSwipeableOpen) {
-          runOnJS(onSwipeableOpen)(SwipeDirection.RIGHT);
-        } else if (toValue < 0 && onSwipeableOpen) {
-          runOnJS(onSwipeableOpen)(SwipeDirection.LEFT);
-        } else if (onSwipeableClose) {
-          runOnJS(onSwipeableClose)(
-            fromValue > 0 ? SwipeDirection.LEFT : SwipeDirection.RIGHT
-          );
-        }
-      },
-      [onSwipeableClose, onSwipeableOpen]
-    );
-
-    const animateRow: (toValue: number, velocityX?: number) => void =
-      useCallback(
-        (toValue: number, velocityX?: number) => {
-          'worklet';
-
-          const translationSpringConfig = {
-            mass: 2,
-            damping: 1000,
-            stiffness: 700,
-            velocity: velocityX,
-            overshootClamping: true,
-            reduceMotion: ReduceMotion.System,
-            ...animationOptions,
-          };
-
-          const isClosing = toValue === 0;
-          const moveToRight = isClosing ? rowState.value < 0 : toValue > 0;
-
-          const usedWidth = isClosing
-            ? moveToRight
-              ? rightWidth.value
-              : leftWidth.value
-            : moveToRight
-              ? leftWidth.value
-              : rightWidth.value;
-
-          const progressSpringConfig = {
-            ...translationSpringConfig,
-            restDisplacementThreshold: 0.01,
-            restSpeedThreshold: 0.01,
-            velocity:
-              velocityX &&
-              interpolate(velocityX, [-usedWidth, usedWidth], [-1, 1]),
-          };
-
-          const frozenRowState = rowState.value;
-
-          appliedTranslation.value = withSpring(
-            toValue,
-            translationSpringConfig,
-            (isFinished) => {
-              if (isFinished) {
-                dispatchEndEvents(frozenRowState, toValue);
-              }
-            }
-          );
-
-          const progressTarget = toValue === 0 ? 0 : 1 * Math.sign(toValue);
-
-          showLeftProgress.value = withSpring(
-            Math.max(progressTarget, 0),
-            progressSpringConfig
-          );
-
-          showRightProgress.value = withSpring(
-            Math.max(-progressTarget, 0),
-            progressSpringConfig
-          );
-
-          dispatchImmediateEvents(frozenRowState, toValue);
-
-          rowState.value = Math.sign(toValue);
-        },
-        [
-          rowState,
-          animationOptions,
-          appliedTranslation,
-          showLeftProgress,
-          leftWidth,
-          showRightProgress,
-          rightWidth,
-          dispatchImmediateEvents,
-          dispatchEndEvents,
-        ]
-      );
-
-    const leftLayoutRef = useAnimatedRef();
-    const leftWrapperLayoutRef = useAnimatedRef();
-    const rightLayoutRef = useAnimatedRef();
-
-    const updateElementWidths = useCallback(() => {
-      'worklet';
-      const leftLayout = measure(leftLayoutRef);
-      const leftWrapperLayout = measure(leftWrapperLayoutRef);
-      const rightLayout = measure(rightLayoutRef);
-      leftWidth.value =
-        (leftLayout?.pageX ?? 0) - (leftWrapperLayout?.pageX ?? 0);
-
-      rightWidth.value =
-        rowWidth.value -
-        (rightLayout?.pageX ?? rowWidth.value) +
-        (leftWrapperLayout?.pageX ?? 0);
-    }, [
-      leftLayoutRef,
-      leftWrapperLayoutRef,
-      rightLayoutRef,
-      leftWidth,
-      rightWidth,
-      rowWidth,
-    ]);
-
-    const swipeableMethods = useMemo<SwipeableMethods>(
-      () => ({
-        close() {
-          'worklet';
-          if (_WORKLET) {
-            animateRow(0);
-            return;
-          }
-          runOnUI(() => {
-            animateRow(0);
-          })();
-        },
-        openLeft() {
-          'worklet';
-          if (_WORKLET) {
-            updateElementWidths();
-            animateRow(leftWidth.value);
-            return;
-          }
-          runOnUI(() => {
-            updateElementWidths();
-            animateRow(leftWidth.value);
-          })();
-        },
-        openRight() {
-          'worklet';
-          if (_WORKLET) {
-            updateElementWidths();
-            animateRow(-rightWidth.value);
-            return;
-          }
-          runOnUI(() => {
-            updateElementWidths();
-            animateRow(-rightWidth.value);
-          })();
-        },
-        reset() {
-          'worklet';
-          userDrag.value = 0;
-          showLeftProgress.value = 0;
-          appliedTranslation.value = 0;
-          rowState.value = 0;
-        },
-      }),
-      [
-        animateRow,
-        updateElementWidths,
-        leftWidth,
-        rightWidth,
-        userDrag,
-        showLeftProgress,
-        appliedTranslation,
-        rowState,
-      ]
-    );
-
-    const onRowLayout = useCallback(
-      ({ nativeEvent }: LayoutChangeEvent) => {
-        rowWidth.value = nativeEvent.layout.width;
-      },
-      [rowWidth]
-    );
-
-    // As stated in `Dimensions.get` docstring, this function should be called on every render
-    // since dimensions may change (e.g. orientation change)
-
-    const leftActionAnimation = useAnimatedStyle(() => {
-      return {
-        opacity: showLeftProgress.value === 0 ? 0 : 1,
-      };
-    });
-
-    const leftElement = useCallback(
-      () => (
-        <Animated.View
-          ref={leftWrapperLayoutRef}
-          style={[styles.leftActions, leftActionAnimation]}>
-          {renderLeftActions?.(
-            showLeftProgress,
-            appliedTranslation,
-            swipeableMethods
-          )}
-          <Animated.View ref={leftLayoutRef} />
-        </Animated.View>
-      ),
-      [
-        appliedTranslation,
-        leftActionAnimation,
-        leftLayoutRef,
-        leftWrapperLayoutRef,
-        renderLeftActions,
-        showLeftProgress,
-        swipeableMethods,
-      ]
-    );
-
-    const rightActionAnimation = useAnimatedStyle(() => {
-      return {
-        opacity: showRightProgress.value === 0 ? 0 : 1,
-      };
-    });
-
-    const rightElement = useCallback(
-      () => (
-        <Animated.View style={[styles.rightActions, rightActionAnimation]}>
-          {renderRightActions?.(
-            showRightProgress,
-            appliedTranslation,
-            swipeableMethods
-          )}
-          <Animated.View ref={rightLayoutRef} />
-        </Animated.View>
-      ),
-      [
-        appliedTranslation,
-        renderRightActions,
-        rightActionAnimation,
-        rightLayoutRef,
-        showRightProgress,
-        swipeableMethods,
-      ]
-    );
-
-    const handleRelease = useCallback(
-      (event: GestureStateChangeEvent<PanGestureHandlerEventPayload>) => {
-        'worklet';
-        const { velocityX } = event;
-        userDrag.value = event.translationX;
-
-        const leftThresholdProp = leftThreshold ?? leftWidth.value / 2;
-        const rightThresholdProp = rightThreshold ?? rightWidth.value / 2;
-
-        const translationX =
-          (userDrag.value + DRAG_TOSS * velocityX) / friction;
-
-        let toValue = 0;
-
-        if (rowState.value === 0) {
-          if (translationX > leftThresholdProp) {
-            toValue = leftWidth.value;
-          } else if (translationX < -rightThresholdProp) {
-            toValue = -rightWidth.value;
-          }
-        } else if (rowState.value === 1) {
-          // Swiped to left
-          if (translationX > -leftThresholdProp) {
-            toValue = leftWidth.value;
-          }
-        } else {
-          // Swiped to right
-          if (translationX < rightThresholdProp) {
-            toValue = -rightWidth.value;
-          }
-        }
-
-        animateRow(toValue, velocityX / friction);
-      },
-      [
-        animateRow,
-        friction,
-        leftThreshold,
-        leftWidth,
-        rightThreshold,
-        rightWidth,
-        rowState,
-        userDrag,
-      ]
-    );
-
-    const close = useCallback(() => {
-      'worklet';
-      animateRow(0);
-    }, [animateRow]);
-
-    const dragStarted = useSharedValue<boolean>(false);
-
-    const tapGesture = useMemo(() => {
-      const tap = Gesture.Tap()
-        .shouldCancelWhenOutside(true)
-        .onStart(() => {
-          if (rowState.value !== 0) {
-            close();
-          }
-        });
-
-      if (!simultaneousWithExternalGesture) {
-        return tap;
-      }
-
-      if (Array.isArray(simultaneousWithExternalGesture)) {
-        tap.simultaneousWithExternalGesture(...simultaneousWithExternalGesture);
-      } else {
-        tap.simultaneousWithExternalGesture(simultaneousWithExternalGesture);
-      }
-
-      return tap;
-    }, [close, rowState, simultaneousWithExternalGesture]);
-
-    const panGesture = useMemo(() => {
-      const pan = Gesture.Pan()
-        .enabled(enabled !== false)
-        .enableTrackpadTwoFingerGesture(enableTrackpadTwoFingerGesture)
-        .activeOffsetX([-dragOffsetFromRightEdge, dragOffsetFromLeftEdge])
-        .onStart(updateElementWidths)
-        .onUpdate(
-          (event: GestureUpdateEvent<PanGestureHandlerEventPayload>) => {
-            userDrag.value = event.translationX;
-
-            const direction =
-              rowState.value === -1
-                ? SwipeDirection.RIGHT
-                : rowState.value === 1
-                  ? SwipeDirection.LEFT
-                  : event.translationX > 0
-                    ? SwipeDirection.RIGHT
-                    : SwipeDirection.LEFT;
-
-            if (!dragStarted.value) {
-              dragStarted.value = true;
-              if (rowState.value === 0 && onSwipeableOpenStartDrag) {
-                runOnJS(onSwipeableOpenStartDrag)(direction);
-              } else if (onSwipeableCloseStartDrag) {
-                runOnJS(onSwipeableCloseStartDrag)(direction);
-              }
-            }
-
-            updateAnimatedEvent();
-          }
-        )
-        .onEnd(
-          (event: GestureStateChangeEvent<PanGestureHandlerEventPayload>) => {
-            handleRelease(event);
-          }
-        )
-        .onFinalize(() => {
-          dragStarted.value = false;
-        });
-
-      if (!simultaneousWithExternalGesture) {
-        return pan;
-      }
-
-      if (Array.isArray(simultaneousWithExternalGesture)) {
-        pan.simultaneousWithExternalGesture(...simultaneousWithExternalGesture);
-      } else {
-        pan.simultaneousWithExternalGesture(simultaneousWithExternalGesture);
-      }
-
-      return pan;
-    }, [
-      dragOffsetFromLeftEdge,
-      dragOffsetFromRightEdge,
-      dragStarted,
-      enableTrackpadTwoFingerGesture,
-      enabled,
-      handleRelease,
-      onSwipeableCloseStartDrag,
-      onSwipeableOpenStartDrag,
-      rowState,
-      updateAnimatedEvent,
-      updateElementWidths,
-      userDrag,
-      simultaneousWithExternalGesture,
-    ]);
-
-    useImperativeHandle(ref, () => swipeableMethods, [swipeableMethods]);
-
-    const animatedStyle = useAnimatedStyle(
-      () => ({
-        transform: [{ translateX: appliedTranslation.value }],
-        pointerEvents: rowState.value === 0 ? 'auto' : 'box-only',
-      }),
-      [appliedTranslation, rowState]
-    );
-
-    const swipeableComponent = (
-      <GestureDetector gesture={panGesture} touchAction="pan-y">
-        <Animated.View
-          {...remainingProps}
-          onLayout={onRowLayout}
-          style={[styles.container, containerStyle]}>
-          {leftElement()}
-          {rightElement()}
-          <GestureDetector gesture={tapGesture} touchAction="pan-y">
-            <Animated.View style={[animatedStyle, childrenContainerStyle]}>
-              {children}
-            </Animated.View>
-          </GestureDetector>
-        </Animated.View>
-      </GestureDetector>
-    );
-
-    return testID ? (
-      <View testID={testID}>{swipeableComponent}</View>
-    ) : (
-      swipeableComponent
-    );
-  }
-);
-
-export default Swipeable;
-export type SwipeableRef = ForwardedRef<SwipeableMethods>;
-
-const styles = StyleSheet.create({
-  container: {
-    overflow: 'hidden',
-  },
-  leftActions: {
-    ...StyleSheet.absoluteFillObject,
-    flexDirection: I18nManager.isRTL ? 'row-reverse' : 'row',
-    overflow: 'hidden',
-  },
-  rightActions: {
-    ...StyleSheet.absoluteFillObject,
-    flexDirection: I18nManager.isRTL ? 'row' : 'row-reverse',
-    overflow: 'hidden',
-  },
-});
diff --git a/node_modules/react-native-gesture-handler/src/components/ReanimatedSwipeable/ReanimatedSwipeable.tsx b/node_modules/react-native-gesture-handler/src/components/ReanimatedSwipeable/ReanimatedSwipeable.tsx
new file mode 100644
index 0000000..53cce68
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/src/components/ReanimatedSwipeable/ReanimatedSwipeable.tsx
@@ -0,0 +1,603 @@
+import { useMemo, useCallback, useImperativeHandle, ForwardedRef } from 'react';
+import { LayoutChangeEvent, View, I18nManager, StyleSheet } from 'react-native';
+import Animated, {
+  useSharedValue,
+  interpolate,
+  runOnJS,
+  ReduceMotion,
+  withSpring,
+  useAnimatedRef,
+  measure,
+  runOnUI,
+  useAnimatedStyle,
+} from 'react-native-reanimated';
+import { SwipeableProps, SwipeableMethods, SwipeDirection } from '.';
+import { Gesture } from '../..';
+import {
+  GestureStateChangeEvent,
+  GestureUpdateEvent,
+} from '../../handlers/gestureHandlerCommon';
+import { PanGestureHandlerEventPayload } from '../../handlers/GestureHandlerEventPayload';
+import { GestureDetector } from '../../handlers/gestures/GestureDetector';
+import {
+  applyRelationProp,
+  RelationPropName,
+  RelationPropType,
+} from '../utils';
+
+const DRAG_TOSS = 0.05;
+
+const DEFAULT_FRICTION = 1;
+const DEFAULT_OVERSHOOT_FRICTION = 1;
+const DEFAULT_DRAG_OFFSET = 10;
+const DEFAULT_ENABLE_TRACKING_TWO_FINGER_GESTURE = false;
+
+const Swipeable = (props: SwipeableProps) => {
+  const {
+    ref,
+    leftThreshold,
+    rightThreshold,
+    enabled,
+    containerStyle,
+    childrenContainerStyle,
+    animationOptions,
+    overshootLeft,
+    overshootRight,
+    testID,
+    children,
+    enableTrackpadTwoFingerGesture = DEFAULT_ENABLE_TRACKING_TWO_FINGER_GESTURE,
+    dragOffsetFromLeftEdge = DEFAULT_DRAG_OFFSET,
+    dragOffsetFromRightEdge = DEFAULT_DRAG_OFFSET,
+    friction = DEFAULT_FRICTION,
+    overshootFriction = DEFAULT_OVERSHOOT_FRICTION,
+    onSwipeableOpenStartDrag,
+    onSwipeableCloseStartDrag,
+    onSwipeableWillOpen,
+    onSwipeableWillClose,
+    onSwipeableOpen,
+    onSwipeableClose,
+    renderLeftActions,
+    renderRightActions,
+    simultaneousWithExternalGesture,
+    requireExternalGestureToFail,
+    blocksExternalGesture,
+    hitSlop,
+    ...remainingProps
+  } = props;
+
+  const relationProps = useMemo(
+    () => ({
+      simultaneousWithExternalGesture,
+      requireExternalGestureToFail,
+      blocksExternalGesture,
+    }),
+    [
+      blocksExternalGesture,
+      requireExternalGestureToFail,
+      simultaneousWithExternalGesture,
+    ]
+  );
+
+  const rowState = useSharedValue<number>(0);
+
+  const userDrag = useSharedValue<number>(0);
+
+  const appliedTranslation = useSharedValue<number>(0);
+
+  const rowWidth = useSharedValue<number>(0);
+  const leftWidth = useSharedValue<number>(0);
+  const rightWidth = useSharedValue<number>(0);
+
+  const showLeftProgress = useSharedValue<number>(0);
+  const showRightProgress = useSharedValue<number>(0);
+
+  const updateAnimatedEvent = useCallback(() => {
+    'worklet';
+
+    const shouldOvershootLeft = overshootLeft ?? leftWidth.value > 0;
+    const shouldOvershootRight = overshootRight ?? rightWidth.value > 0;
+
+    const startOffset =
+      rowState.value === 1
+        ? leftWidth.value
+        : rowState.value === -1
+          ? -rightWidth.value
+          : 0;
+
+    const offsetDrag = userDrag.value / friction + startOffset;
+
+    appliedTranslation.value = interpolate(
+      offsetDrag,
+      [
+        -rightWidth.value - 1,
+        -rightWidth.value,
+        leftWidth.value,
+        leftWidth.value + 1,
+      ],
+      [
+        -rightWidth.value - (shouldOvershootRight ? 1 / overshootFriction : 0),
+        -rightWidth.value,
+        leftWidth.value,
+        leftWidth.value + (shouldOvershootLeft ? 1 / overshootFriction : 0),
+      ]
+    );
+
+    showLeftProgress.value =
+      leftWidth.value > 0
+        ? interpolate(
+            appliedTranslation.value,
+            [-1, 0, leftWidth.value],
+            [0, 0, 1]
+          )
+        : 0;
+
+    showRightProgress.value =
+      rightWidth.value > 0
+        ? interpolate(
+            appliedTranslation.value,
+            [-rightWidth.value, 0, 1],
+            [1, 0, 0]
+          )
+        : 0;
+  }, [
+    appliedTranslation,
+    friction,
+    leftWidth,
+    overshootFriction,
+    rightWidth,
+    rowState,
+    showLeftProgress,
+    showRightProgress,
+    userDrag,
+    overshootLeft,
+    overshootRight,
+  ]);
+
+  const dispatchImmediateEvents = useCallback(
+    (fromValue: number, toValue: number) => {
+      'worklet';
+
+      if (onSwipeableWillOpen && toValue !== 0) {
+        runOnJS(onSwipeableWillOpen)(
+          toValue > 0 ? SwipeDirection.RIGHT : SwipeDirection.LEFT
+        );
+      }
+
+      if (onSwipeableWillClose && toValue === 0) {
+        runOnJS(onSwipeableWillClose)(
+          fromValue > 0 ? SwipeDirection.LEFT : SwipeDirection.RIGHT
+        );
+      }
+    },
+    [onSwipeableWillClose, onSwipeableWillOpen]
+  );
+
+  const dispatchEndEvents = useCallback(
+    (fromValue: number, toValue: number) => {
+      'worklet';
+
+      if (onSwipeableOpen && toValue !== 0) {
+        runOnJS(onSwipeableOpen)(
+          toValue > 0 ? SwipeDirection.RIGHT : SwipeDirection.LEFT
+        );
+      }
+
+      if (onSwipeableClose && toValue === 0) {
+        runOnJS(onSwipeableClose)(
+          fromValue > 0 ? SwipeDirection.LEFT : SwipeDirection.RIGHT
+        );
+      }
+    },
+    [onSwipeableClose, onSwipeableOpen]
+  );
+
+  const animateRow: (toValue: number, velocityX?: number) => void = useCallback(
+    (toValue: number, velocityX?: number) => {
+      'worklet';
+
+      const translationSpringConfig = {
+        mass: 2,
+        damping: 1000,
+        stiffness: 700,
+        velocity: velocityX,
+        overshootClamping: true,
+        reduceMotion: ReduceMotion.System,
+        ...animationOptions,
+      };
+
+      const isClosing = toValue === 0;
+      const moveToRight = isClosing ? rowState.value < 0 : toValue > 0;
+
+      const usedWidth = isClosing
+        ? moveToRight
+          ? rightWidth.value
+          : leftWidth.value
+        : moveToRight
+          ? leftWidth.value
+          : rightWidth.value;
+
+      const progressSpringConfig = {
+        ...translationSpringConfig,
+        restDisplacementThreshold: 0.01,
+        restSpeedThreshold: 0.01,
+        velocity:
+          velocityX && interpolate(velocityX, [-usedWidth, usedWidth], [-1, 1]),
+      };
+
+      const frozenRowState = rowState.value;
+
+      appliedTranslation.value = withSpring(
+        toValue,
+        translationSpringConfig,
+        (isFinished) => {
+          if (isFinished) {
+            dispatchEndEvents(frozenRowState, toValue);
+          }
+        }
+      );
+
+      const progressTarget = toValue === 0 ? 0 : 1 * Math.sign(toValue);
+
+      showLeftProgress.value = withSpring(
+        Math.max(progressTarget, 0),
+        progressSpringConfig
+      );
+
+      showRightProgress.value = withSpring(
+        Math.max(-progressTarget, 0),
+        progressSpringConfig
+      );
+
+      dispatchImmediateEvents(frozenRowState, toValue);
+
+      rowState.value = Math.sign(toValue);
+    },
+    [
+      rowState,
+      animationOptions,
+      appliedTranslation,
+      showLeftProgress,
+      leftWidth,
+      showRightProgress,
+      rightWidth,
+      dispatchImmediateEvents,
+      dispatchEndEvents,
+    ]
+  );
+
+  const leftLayoutRef = useAnimatedRef();
+  const leftWrapperLayoutRef = useAnimatedRef();
+  const rightLayoutRef = useAnimatedRef();
+
+  const updateElementWidths = useCallback(() => {
+    'worklet';
+    const leftLayout = measure(leftLayoutRef);
+    const leftWrapperLayout = measure(leftWrapperLayoutRef);
+    const rightLayout = measure(rightLayoutRef);
+    leftWidth.value =
+      (leftLayout?.pageX ?? 0) - (leftWrapperLayout?.pageX ?? 0);
+
+    rightWidth.value =
+      rowWidth.value -
+      (rightLayout?.pageX ?? rowWidth.value) +
+      (leftWrapperLayout?.pageX ?? 0);
+  }, [
+    leftLayoutRef,
+    leftWrapperLayoutRef,
+    rightLayoutRef,
+    leftWidth,
+    rightWidth,
+    rowWidth,
+  ]);
+
+  const swipeableMethods = useMemo<SwipeableMethods>(
+    () => ({
+      close() {
+        'worklet';
+        if (_WORKLET) {
+          animateRow(0);
+          return;
+        }
+        runOnUI(() => {
+          animateRow(0);
+        })();
+      },
+      openLeft() {
+        'worklet';
+        if (_WORKLET) {
+          updateElementWidths();
+          animateRow(leftWidth.value);
+          return;
+        }
+        runOnUI(() => {
+          updateElementWidths();
+          animateRow(leftWidth.value);
+        })();
+      },
+      openRight() {
+        'worklet';
+        if (_WORKLET) {
+          updateElementWidths();
+          animateRow(-rightWidth.value);
+          return;
+        }
+        runOnUI(() => {
+          updateElementWidths();
+          animateRow(-rightWidth.value);
+        })();
+      },
+      reset() {
+        'worklet';
+        userDrag.value = 0;
+        showLeftProgress.value = 0;
+        appliedTranslation.value = 0;
+        rowState.value = 0;
+      },
+    }),
+    [
+      animateRow,
+      updateElementWidths,
+      leftWidth,
+      rightWidth,
+      userDrag,
+      showLeftProgress,
+      appliedTranslation,
+      rowState,
+    ]
+  );
+
+  const onRowLayout = useCallback(
+    ({ nativeEvent }: LayoutChangeEvent) => {
+      rowWidth.value = nativeEvent.layout.width;
+    },
+    [rowWidth]
+  );
+
+  // As stated in `Dimensions.get` docstring, this function should be called on every render
+  // since dimensions may change (e.g. orientation change)
+
+  const leftActionAnimation = useAnimatedStyle(() => {
+    return {
+      opacity: showLeftProgress.value === 0 ? 0 : 1,
+    };
+  });
+
+  const leftElement = useCallback(
+    () => (
+      <Animated.View
+        ref={leftWrapperLayoutRef}
+        style={[styles.leftActions, leftActionAnimation]}>
+        {renderLeftActions?.(
+          showLeftProgress,
+          appliedTranslation,
+          swipeableMethods
+        )}
+        <Animated.View ref={leftLayoutRef} />
+      </Animated.View>
+    ),
+    [
+      appliedTranslation,
+      leftActionAnimation,
+      leftLayoutRef,
+      leftWrapperLayoutRef,
+      renderLeftActions,
+      showLeftProgress,
+      swipeableMethods,
+    ]
+  );
+
+  const rightActionAnimation = useAnimatedStyle(() => {
+    return {
+      opacity: showRightProgress.value === 0 ? 0 : 1,
+    };
+  });
+
+  const rightElement = useCallback(
+    () => (
+      <Animated.View style={[styles.rightActions, rightActionAnimation]}>
+        {renderRightActions?.(
+          showRightProgress,
+          appliedTranslation,
+          swipeableMethods
+        )}
+        <Animated.View ref={rightLayoutRef} />
+      </Animated.View>
+    ),
+    [
+      appliedTranslation,
+      renderRightActions,
+      rightActionAnimation,
+      rightLayoutRef,
+      showRightProgress,
+      swipeableMethods,
+    ]
+  );
+
+  const handleRelease = useCallback(
+    (event: GestureStateChangeEvent<PanGestureHandlerEventPayload>) => {
+      'worklet';
+      const { velocityX } = event;
+      userDrag.value = event.translationX;
+
+      const leftThresholdProp = leftThreshold ?? leftWidth.value / 2;
+      const rightThresholdProp = rightThreshold ?? rightWidth.value / 2;
+
+      const translationX = (userDrag.value + DRAG_TOSS * velocityX) / friction;
+
+      let toValue = 0;
+
+      if (rowState.value === 0) {
+        if (translationX > leftThresholdProp) {
+          toValue = leftWidth.value;
+        } else if (translationX < -rightThresholdProp) {
+          toValue = -rightWidth.value;
+        }
+      } else if (rowState.value === 1) {
+        // Swiped to left
+        if (translationX > -leftThresholdProp) {
+          toValue = leftWidth.value;
+        }
+      } else {
+        // Swiped to right
+        if (translationX < rightThresholdProp) {
+          toValue = -rightWidth.value;
+        }
+      }
+
+      animateRow(toValue, velocityX / friction);
+    },
+    [
+      animateRow,
+      friction,
+      leftThreshold,
+      leftWidth,
+      rightThreshold,
+      rightWidth,
+      rowState,
+      userDrag,
+    ]
+  );
+
+  const close = useCallback(() => {
+    'worklet';
+    animateRow(0);
+  }, [animateRow]);
+
+  const dragStarted = useSharedValue<boolean>(false);
+
+  const tapGesture = useMemo(() => {
+    const tap = Gesture.Tap()
+      .shouldCancelWhenOutside(true)
+      .onStart(() => {
+        if (rowState.value !== 0) {
+          close();
+        }
+      });
+
+    Object.entries(relationProps).forEach(([relationName, relation]) => {
+      applyRelationProp(
+        tap,
+        relationName as RelationPropName,
+        relation as RelationPropType
+      );
+    });
+
+    return tap;
+  }, [close, relationProps, rowState]);
+
+  const panGesture = useMemo(() => {
+    const pan = Gesture.Pan()
+      .enabled(enabled !== false)
+      .enableTrackpadTwoFingerGesture(enableTrackpadTwoFingerGesture)
+      .activeOffsetX([-dragOffsetFromRightEdge, dragOffsetFromLeftEdge])
+      .onStart(updateElementWidths)
+      .onUpdate((event: GestureUpdateEvent<PanGestureHandlerEventPayload>) => {
+        userDrag.value = event.translationX;
+
+        const direction =
+          rowState.value === -1
+            ? SwipeDirection.RIGHT
+            : rowState.value === 1
+              ? SwipeDirection.LEFT
+              : event.translationX > 0
+                ? SwipeDirection.RIGHT
+                : SwipeDirection.LEFT;
+
+        if (!dragStarted.value) {
+          dragStarted.value = true;
+          if (rowState.value === 0 && onSwipeableOpenStartDrag) {
+            runOnJS(onSwipeableOpenStartDrag)(direction);
+          } else if (onSwipeableCloseStartDrag) {
+            runOnJS(onSwipeableCloseStartDrag)(direction);
+          }
+        }
+
+        updateAnimatedEvent();
+      })
+      .onEnd(
+        (event: GestureStateChangeEvent<PanGestureHandlerEventPayload>) => {
+          handleRelease(event);
+        }
+      )
+      .onFinalize(() => {
+        dragStarted.value = false;
+      });
+
+    Object.entries(relationProps).forEach(([relationName, relation]) => {
+      applyRelationProp(
+        pan,
+        relationName as RelationPropName,
+        relation as RelationPropType
+      );
+    });
+
+    return pan;
+  }, [
+    enabled,
+    enableTrackpadTwoFingerGesture,
+    dragOffsetFromRightEdge,
+    dragOffsetFromLeftEdge,
+    updateElementWidths,
+    relationProps,
+    userDrag,
+    rowState,
+    dragStarted,
+    updateAnimatedEvent,
+    onSwipeableOpenStartDrag,
+    onSwipeableCloseStartDrag,
+    handleRelease,
+  ]);
+
+  useImperativeHandle(ref, () => swipeableMethods, [swipeableMethods]);
+
+  const animatedStyle = useAnimatedStyle(
+    () => ({
+      transform: [{ translateX: appliedTranslation.value }],
+      pointerEvents: rowState.value === 0 ? 'auto' : 'box-only',
+    }),
+    [appliedTranslation, rowState]
+  );
+
+  const swipeableComponent = (
+    <GestureDetector gesture={panGesture} touchAction="pan-y">
+      <Animated.View
+        {...remainingProps}
+        onLayout={onRowLayout}
+        hitSlop={hitSlop ?? undefined}
+        style={[styles.container, containerStyle]}>
+        {leftElement()}
+        {rightElement()}
+        <GestureDetector gesture={tapGesture} touchAction="pan-y">
+          <Animated.View style={[animatedStyle, childrenContainerStyle]}>
+            {children}
+          </Animated.View>
+        </GestureDetector>
+      </Animated.View>
+    </GestureDetector>
+  );
+
+  return testID ? (
+    <View testID={testID}>{swipeableComponent}</View>
+  ) : (
+    swipeableComponent
+  );
+};
+
+export default Swipeable;
+export type SwipeableRef = ForwardedRef<SwipeableMethods>;
+
+const styles = StyleSheet.create({
+  container: {
+    overflow: 'hidden',
+  },
+  leftActions: {
+    ...StyleSheet.absoluteFillObject,
+    flexDirection: I18nManager.isRTL ? 'row-reverse' : 'row',
+    overflow: 'hidden',
+  },
+  rightActions: {
+    ...StyleSheet.absoluteFillObject,
+    flexDirection: I18nManager.isRTL ? 'row' : 'row-reverse',
+    overflow: 'hidden',
+  },
+});
diff --git a/node_modules/react-native-gesture-handler/src/components/ReanimatedSwipeable/ReanimatedSwipeableProps.ts b/node_modules/react-native-gesture-handler/src/components/ReanimatedSwipeable/ReanimatedSwipeableProps.ts
new file mode 100644
index 0000000..3aa66b9
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/src/components/ReanimatedSwipeable/ReanimatedSwipeableProps.ts
@@ -0,0 +1,199 @@
+import React from 'react';
+import type { PanGestureHandlerProps } from '../../handlers/PanGestureHandler';
+import { SharedValue } from 'react-native-reanimated';
+import { StyleProp, ViewStyle } from 'react-native';
+import { RelationPropType } from '../utils';
+
+type SwipeableExcludes = Exclude<
+  keyof PanGestureHandlerProps,
+  'onGestureEvent' | 'onHandlerStateChange'
+>;
+
+export enum SwipeDirection {
+  LEFT = 'left',
+  RIGHT = 'right',
+}
+
+export interface SwipeableProps
+  extends Pick<PanGestureHandlerProps, SwipeableExcludes> {
+  /**
+   *
+   */
+  ref?: React.RefObject<SwipeableMethods | null>;
+
+  /**
+   * Enables two-finger gestures on supported devices, for example iPads with
+   * trackpads. If not enabled the gesture will require click + drag, with
+   * `enableTrackpadTwoFingerGesture` swiping with two fingers will also trigger
+   * the gesture.
+   */
+  enableTrackpadTwoFingerGesture?: boolean;
+
+  /**
+   * Specifies how much the visual interaction will be delayed compared to the
+   * gesture distance. e.g. value of 1 will indicate that the swipeable panel
+   * should exactly follow the gesture, 2 means it is going to be two times
+   * "slower".
+   */
+  friction?: number;
+
+  /**
+   * Distance from the left edge at which released panel will animate to the
+   * open state (or the open panel will animate into the closed state). By
+   * default it's a half of the panel's width.
+   */
+  leftThreshold?: number;
+
+  /**
+   * Distance from the right edge at which released panel will animate to the
+   * open state (or the open panel will animate into the closed state). By
+   * default it's a half of the panel's width.
+   */
+  rightThreshold?: number;
+
+  /**
+   * Distance that the panel must be dragged from the left edge to be considered
+   * a swipe. The default value is 10.
+   */
+  dragOffsetFromLeftEdge?: number;
+
+  /**
+   * Distance that the panel must be dragged from the right edge to be considered
+   * a swipe. The default value is 10.
+   */
+  dragOffsetFromRightEdge?: number;
+
+  /**
+   * Value indicating if the swipeable panel can be pulled further than the left
+   * actions panel's width. It is set to true by default as long as the left
+   * panel render method is present.
+   */
+  overshootLeft?: boolean;
+
+  /**
+   * Value indicating if the swipeable panel can be pulled further than the
+   * right actions panel's width. It is set to true by default as long as the
+   * right panel render method is present.
+   */
+  overshootRight?: boolean;
+
+  /**
+   * Specifies how much the visual interaction will be delayed compared to the
+   * gesture distance at overshoot. Default value is 1, it mean no friction, for
+   * a native feel, try 8 or above.
+   */
+  overshootFriction?: number;
+
+  /**
+   * Called when action panel gets open (either right or left).
+   */
+  onSwipeableOpen?: (
+    direction: SwipeDirection.LEFT | SwipeDirection.RIGHT
+  ) => void;
+
+  /**
+   * Called when action panel is closed.
+   */
+  onSwipeableClose?: (
+    direction: SwipeDirection.LEFT | SwipeDirection.RIGHT
+  ) => void;
+
+  /**
+   * Called when action panel starts animating on open (either right or left).
+   */
+  onSwipeableWillOpen?: (
+    direction: SwipeDirection.LEFT | SwipeDirection.RIGHT
+  ) => void;
+
+  /**
+   * Called when action panel starts animating on close.
+   */
+  onSwipeableWillClose?: (
+    direction: SwipeDirection.LEFT | SwipeDirection.RIGHT
+  ) => void;
+
+  /**
+   * Called when action panel starts being shown on dragging to open.
+   */
+  onSwipeableOpenStartDrag?: (
+    direction: SwipeDirection.LEFT | SwipeDirection.RIGHT
+  ) => void;
+
+  /**
+   * Called when action panel starts being shown on dragging to close.
+   */
+  onSwipeableCloseStartDrag?: (
+    direction: SwipeDirection.LEFT | SwipeDirection.RIGHT
+  ) => void;
+
+  /**
+   * `progress`: Equals `0` when `swipeable` is closed, `1` when `swipeable` is opened.
+   *  - When the element overshoots it's opened position the value tends towards `Infinity`.
+   *  - Goes back to `1` when `swipeable` is released.
+   *
+   * `translation`: a horizontal offset of the `swipeable` relative to its closed position.\
+   * `swipeableMethods`: provides an object exposing methods for controlling the `swipeable`.
+   *
+   * To support `rtl` flexbox layouts use `flexDirection` styling.
+   * */
+  renderLeftActions?: (
+    progress: SharedValue<number>,
+    translation: SharedValue<number>,
+    swipeableMethods: SwipeableMethods
+  ) => React.ReactNode;
+
+  /**
+   * `progress`: Equals `0` when `swipeable` is closed, `1` when `swipeable` is opened.
+   *  - When the element overshoots it's opened position the value tends towards `Infinity`.
+   *  - Goes back to `1` when `swipeable` is released.
+   *
+   * `translation`: a horizontal offset of the `swipeable` relative to its closed position.\
+   * `swipeableMethods`: provides an object exposing methods for controlling the `swipeable`.
+   *
+   * To support `rtl` flexbox layouts use `flexDirection` styling.
+   * */
+  renderRightActions?: (
+    progress: SharedValue<number>,
+    translation: SharedValue<number>,
+    swipeableMethods: SwipeableMethods
+  ) => React.ReactNode;
+
+  animationOptions?: Record<string, unknown>;
+
+  /**
+   * Style object for the container (`Animated.View`), for example to override
+   * `overflow: 'hidden'`.
+   */
+  containerStyle?: StyleProp<ViewStyle>;
+
+  /**
+   * Style object for the children container (`Animated.View`), for example to
+   * apply `flex: 1`
+   */
+  childrenContainerStyle?: StyleProp<ViewStyle>;
+
+  /**
+   * A gesture object or an array of gesture objects containing the configuration and callbacks to be
+   * used with the swipeable's gesture handler.
+   */
+  simultaneousWithExternalGesture?: RelationPropType;
+
+  /**
+   * A gesture object or an array of gesture objects containing the configuration and callbacks to be
+   * used with the swipeable's gesture handler.
+   */
+  requireExternalGestureToFail?: RelationPropType;
+
+  /**
+   * A gesture object or an array of gesture objects containing the configuration and callbacks to be
+   * used with the swipeable's gesture handler.
+   */
+  blocksExternalGesture?: RelationPropType;
+}
+
+export interface SwipeableMethods {
+  close: () => void;
+  openLeft: () => void;
+  openRight: () => void;
+  reset: () => void;
+}
diff --git a/node_modules/react-native-gesture-handler/src/components/ReanimatedSwipeable/index.ts b/node_modules/react-native-gesture-handler/src/components/ReanimatedSwipeable/index.ts
new file mode 100644
index 0000000..e63e601
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/src/components/ReanimatedSwipeable/index.ts
@@ -0,0 +1,6 @@
+export {
+  type SwipeableProps,
+  type SwipeableMethods,
+  SwipeDirection,
+} from './ReanimatedSwipeableProps';
+export { default } from './ReanimatedSwipeable';
diff --git a/node_modules/react-native-gesture-handler/src/components/utils.ts b/node_modules/react-native-gesture-handler/src/components/utils.ts
new file mode 100644
index 0000000..83387ba
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/src/components/utils.ts
@@ -0,0 +1,26 @@
+import { BaseGesture, GestureRef } from '../handlers/gestures/gesture';
+
+export type RelationPropName =
+  | 'simultaneousWithExternalGesture'
+  | 'requireExternalGestureToFail'
+  | 'blocksExternalGesture';
+
+export type RelationPropType =
+  | Exclude<GestureRef, number>
+  | Exclude<GestureRef, number>[];
+
+export function applyRelationProp(
+  gesture: BaseGesture<any>,
+  relationPropName: RelationPropName,
+  relationProp: RelationPropType
+) {
+  if (!relationProp) {
+    return;
+  }
+
+  if (Array.isArray(relationProp)) {
+    gesture[relationPropName](...relationProp);
+  } else {
+    gesture[relationPropName](relationProp);
+  }
+}
diff --git a/node_modules/react-native-gesture-handler/src/getReactNativeVersion.ts b/node_modules/react-native-gesture-handler/src/getReactNativeVersion.ts
index fd1cf94..64266cd 100644
--- a/node_modules/react-native-gesture-handler/src/getReactNativeVersion.ts
+++ b/node_modules/react-native-gesture-handler/src/getReactNativeVersion.ts
@@ -1,11 +1,16 @@
-import pack from 'react-native/package.json';
+// Lightweight shim for RNGH expecting getReactNativeVersion in package src
+// Uses React Native's internal version export
+import {version as ReactNativeVersion} from 'react-native/Libraries/Core/ReactNativeVersion';
 
-const [majorStr, minorStr] = pack.version.split('.');
-const REACT_NATIVE_VERSION = {
-  major: parseInt(majorStr, 10),
-  minor: parseInt(minorStr, 10),
+export type RNVersion = {
+  major: number;
+  minor: number;
+  patch: number;
+  prerelease: number | null;
 };
 
-export function getReactNativeVersion() {
-  return REACT_NATIVE_VERSION;
+export function getReactNativeVersion(): RNVersion {
+  return ReactNativeVersion as RNVersion;
 }
+
+
diff --git a/node_modules/react-native-gesture-handler/src/getReactNativeVersion.web.ts b/node_modules/react-native-gesture-handler/src/getReactNativeVersion.web.ts
deleted file mode 100644
index 6acdea8..0000000
--- a/node_modules/react-native-gesture-handler/src/getReactNativeVersion.web.ts
+++ /dev/null
@@ -1,3 +0,0 @@
-export function getReactNativeVersion() {
-  throw new Error('getReactNativeVersion is not supported on web');
-}
diff --git a/node_modules/react-native-gesture-handler/src/mocks/Pressable.tsx b/node_modules/react-native-gesture-handler/src/mocks/Pressable.tsx
new file mode 100644
index 0000000..e2bbd65
--- /dev/null
+++ b/node_modules/react-native-gesture-handler/src/mocks/Pressable.tsx
@@ -0,0 +1 @@
+export { Pressable as default } from 'react-native';
diff --git a/node_modules/react-native-gesture-handler/src/mocks.tsx b/node_modules/react-native-gesture-handler/src/mocks/mocks.tsx
similarity index 79%
rename from node_modules/react-native-gesture-handler/src/mocks.tsx
rename to node_modules/react-native-gesture-handler/src/mocks/mocks.tsx
index 650a6f4..1a1b199 100644
--- a/node_modules/react-native-gesture-handler/src/mocks.tsx
+++ b/node_modules/react-native-gesture-handler/src/mocks/mocks.tsx
@@ -11,8 +11,8 @@ import {
   DrawerLayoutAndroid,
   View,
 } from 'react-native';
-import { State } from './State';
-import { Directions } from './Directions';
+import { State } from '../State';
+import { Directions } from '../Directions';
 
 const NOOP = () => {
   // Do nothing
@@ -31,14 +31,14 @@ const LongPressGestureHandler = View;
 const PinchGestureHandler = View;
 const RotationGestureHandler = View;
 const FlingGestureHandler = View;
-const RawButton = ({ enabled, ...rest }: any) => (
-  <TouchableNativeFeedback disabled={!enabled} {...rest}>
+export const RawButton = ({ enabled, ...rest }: any) => (
+  <TouchableNativeFeedback disabled={enabled === false} {...rest}>
     <View />
   </TouchableNativeFeedback>
 );
-const BaseButton = RawButton;
-const RectButton = RawButton;
-const BorderlessButton = TouchableNativeFeedback;
+export const BaseButton = RawButton;
+export const RectButton = RawButton;
+export const BorderlessButton = TouchableNativeFeedback;
 
 export default {
   TouchableHighlight,
@@ -57,10 +57,6 @@ export default {
   PinchGestureHandler,
   RotationGestureHandler,
   FlingGestureHandler,
-  RawButton,
-  BaseButton,
-  RectButton,
-  BorderlessButton,
   PanGestureHandler,
   attachGestureHandler,
   createGestureHandler,
